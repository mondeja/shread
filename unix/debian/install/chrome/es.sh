#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfQ0hFQ0tJTkdfRUNPU1lTVEVNPSJDb21wcm9iYW5kbyBlY29zaXN0ZW1hIENocm9tZS4uLiIKX01TR19VTkFCTEVfVE9fSU5TVEFMTF8zMl9CSVRTPSJObyBlcyBwb3NpYmxlIGluc3RhbGFyIEdvb2dsZSBDaHJvbWUgZW4gc2lzdGVtYXMgZGUgMzIgYml0cy4iCl9NU0dfSU5TVEFMTElOR19HT09HTEVfQ0hST01FPSJJbnN0YWxhbmRvIEdvb2dsZSBDaHJvbWUuLi4iCl9NU0dfRk9VTkRfQ0hST01FX0lOU1RBTExFRD0iRW5jb250cmFkbyBHb29nbGUgQ2hyb21lIGluc3RhbGFkbyIKX01TR19JTlNUQUxMSU5HX0NIUk9NRURSSVZFUj0iSW5zdGFsYW5kbyBjaHJvbWVkcml2ZXIiCl9NU0dfVVBEQVRJTkdfQ0hST01FRFJJVkVSPSJBY3R1YWxpemFuZG8gY2hyb21lZHJpdmVyIgpfTVNHX0ZPVU5EX0NIUk9NRURSSVZFUl9JTlNUQUxMRUQ9IkVuY29udHJhZG8gY2hyb21lZHJpdmVyIGluc3RhbGFkbyIKSU5ERU5UX1NUUklORz0iIgpfQ0hST01FRFJJVkVSX1BBVEg9Ii91c3IvYmluL2Nocm9tZWRyaXZlciIKZnVuY3Rpb24gdXNhZ2UgewogICAgY2F0IDw8SEVMUF9VU0FHRQpVc2FnZTogc3JjL3VuaXgvZGViaWFuL2luc3RhbGwvY2hyb21lIFstaF0gWy1pIFNUUklOR10gWy1kIENIUk9NRURSSVZFUl9QQVRIXQoKICBJbnN0YWxscyBhbmQgdXBncmFkZSBDaHJvbWUgYW5kIENocm9tZWRyaXZlciByZXRyaWV2aW5nIGJpbmFyaWVzIGZyb20gb2ZpY2lhbCBzb3VyY2VzLgoKT3B0aW9uczoKICAtaCwgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIGhlbHAgbWVzc2FnZSBhbmQgZXhpdC4KICAtaSBTVFJJTkcsIC0taW5kZW50IFNUUklORyAgICAgICAgRWFjaCBsaW5lIG9mIHRoZSBzY3JpcHQgb3V0cHV0IHdpbGwgYmUgcHJlY2VkZWQgd2l0aCB0aGUgc3RyaW5nIGRlZmluZWQgaW4gdGhpcyBwYXJhbWV0ZXIuCiAgLWQgQ0hST01FRFJJVkVSX1BBVEgsIC0tY2hyb21lZHJpdmVyLXBhdGggQ0hST01FRFJJVkVSX1BBVEgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3BlY2lmaWVzIHdoZXJlIGJlIHN0b3JlZCBkb3dubG9hZGVkIGNocm9tZWRyaXZlciBiaW5hcnkuIEFzIGRlZmF1bHQgYXQgJyRfQ0hST01FRFJJVkVSX1BBVEgnLgoKSEVMUF9VU0FHRQogICAgZXhpdCAxCn0KZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLWl8LS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0iJDEiCiAgICBzaGlmdAogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsKICAgIC1kfC0tY2hyb21lZHJpdmVyLXBhdGgpCiAgICBzaGlmdAogICAgX0NIUk9NRURSSVZFUl9QQVRIPSIkMSIKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KZnVuY3Rpb24gaW5zdGFsbFBhY21hbklmTm90SW5zdGFsbGVkKCkgewogIGlmIFsgIiQoY29tbWFuZCAtdiBwYWNtYW4pIiA9ICIiIF07IHRoZW4KICAgIGlmIFsgLXogIiRfU0NSSVBUX0ZJTEVOQU1FIiBdOyB0aGVuCiAgICAgIGZpbGVwYXRoPSJzcmMvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC9tYWluLnNoIgogICAgICBiYXNoICIkZmlsZXBhdGgiID4gL2Rldi9udWxsCiAgICBlbHNlCiAgICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgICAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKICAgIGZpOwogIGZpOwp9CmZ1bmN0aW9uIGluc3RhbGxTY3JpcHREZXBlbmRlbmNpZXMoKSB7CiAgaW5zdGFsbFBhY21hbklmTm90SW5zdGFsbGVkCn0KX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEg9IiIKZnVuY3Rpb24gZ2V0R29vZ2xlQ2hyb21lQmluYXJ5UGF0aCgpIHsKICBfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IGdvb2dsZS1jaHJvbWUpIgogIGlmIFsgIiRfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSCIgPSAiIiBdOyB0aGVuCiAgICBfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IGdvb2dsZS1jaHJvbWUtc3RhYmxlKSIKICBmaTsKfQpmdW5jdGlvbiBjaGVja1N5c3RlbUFyY2goKSB7CiAgaWYgW1sgIiQodW5hbWUgLW0pIiAhPSAieDg2XzY0IiBdXTsgdGhlbgogICAgcHJpbnRJbmRlbnQgPiYyCiAgICBwcmludGYgIiAgJXMiICIkX01TR19VTkFCTEVfVE9fSU5TVEFMTF8zMl9CSVRTIiA+JjIKICAgIHByaW50ZiAiIFxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIiA+JjIKICAgIGV4aXQgMQogIGZpOwp9CmZ1bmN0aW9uIGluc3RhbGxHb29nbGVDaHJvbWUoKSB7CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfSU5TVEFMTElOR19HT09HTEVfQ0hST01FIgogIGN1cmwgLXNMIGh0dHBzOi8vZGwuZ29vZ2xlLmNvbS9saW51eC9kaXJlY3QvZ29vZ2xlLWNocm9tZS1zdGFibGVfY3VycmVudF9hbWQ2NC5kZWIgICAgIC0tb3V0cHV0IC90bXAvZ29vZ2xlLWNocm9tZS1zdGFibGVfY3VycmVudF9hbWQ2NC5kZWIKICBzdWRvIHBhY21hbiAtUyAtLSAteSAvdG1wL2dvb2dsZS1jaHJvbWUtc3RhYmxlX2N1cnJlbnRfYW1kNjQuZGViID4gL2Rldi9udWxsCiAgc3VkbyBybSAtZiAvdG1wL2dvb2dsZS1jaHJvbWUtc3RhYmxlX2N1cnJlbnRfYW1kNjQuZGViCiAgZ2V0R29vZ2xlQ2hyb21lQmluYXJ5UGF0aAogIHByaW50ZiAiICh2JXMpIiAiJCgkX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEggLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMykiCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCn0KQ0hST01FRFJJVkVSX1ZFUlNJT049IiIKZnVuY3Rpb24gZ2V0TGF0ZXN0Q2hyb21lZHJpdmVyVmVyc2lvbigpIHsKICBHT09HTEVfQ0hST01FX01BSk9SX1ZFUlNJT049IiQoIiRfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSCIgLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMyB8IGN1dCAtZCcuJyAtZjEpIgogIGN1cmwgLXNMIGh0dHBzOi8vY2hyb21lZHJpdmVyLnN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vICAgICAtLW91dHB1dCAvdG1wL2Nocm9tZWRyaXZlci12ZXJzaW9ucy54bWwKICBDSFJPTUVEUklWRVJfVkVSU0lPTj0kKGdyZXAgLVBvICI8S2V5PiRHT09HTEVfQ0hST01FX01BSk9SX1ZFUlNJT05cLipcZCpcLipcZCtcLipcZCpcL2Nocm9tZWRyaXZlcl9saW51eDY0XC56aXAiIC90bXAvY2hyb21lZHJpdmVyLXZlcnNpb25zLnhtbCB8CiAgICAgIGdyZXAgLVBvICIkR09PR0xFX0NIUk9NRV9NQUpPUl9WRVJTSU9OXC4qXGQqXC4qXGQrXC4qXGQqIiB8ICAgICAgIGhlYWQgLW4gMSkKICBzdWRvIHJtIC1mIC90bXAvY2hyb21lZHJpdmVyLXZlcnNpb25zLnhtbAp9Cl9DSFJPTUVEUklWRVJfQklOQVJZX1BBVEg9IiIKZnVuY3Rpb24gZ2V0Q2hyb21lZHJpdmVyQmluYXJ5UGF0aCgpIHsKICBfQ0hST01FRFJJVkVSX0JJTkFSWV9QQVRIPSIkKGNvbW1hbmQgLXYgY2hyb21lZHJpdmVyKSIKfQpmdW5jdGlvbiBpbnN0YWxsQ2hyb21lRHJpdmVyKCkgewogIGN1cmwgLXNMICAgICAiaHR0cHM6Ly9jaHJvbWVkcml2ZXIuc3RvcmFnZS5nb29nbGVhcGlzLmNvbS8kQ0hST01FRFJJVkVSX1ZFUlNJT04vY2hyb21lZHJpdmVyX2xpbnV4NjQuemlwIiAgICAgLS1vdXRwdXQgImNocm9tZWRyaXZlcl9saW51eDY0LnppcCIKICB1bnppcCAtcSBjaHJvbWVkcml2ZXJfbGludXg2NC56aXAKICBzdWRvIHJtIC1mIGNocm9tZWRyaXZlcl9saW51eDY0LnppcAogIHN1ZG8gcm0gLWYgIl9DSFJPTUVEUklWRVJfUEFUSCIKICBzdWRvIG12IC1mIGNocm9tZWRyaXZlciAiX0NIUk9NRURSSVZFUl9QQVRIIgp9CmZ1bmN0aW9uIG1haW4oKSB7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19FQ09TWVNURU0iCiAgZ2V0R29vZ2xlQ2hyb21lQmluYXJ5UGF0aAogIGlmIFsgIiRfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSCIgPSAiIiBdOyB0aGVuCiAgICBjaGVja1N5c3RlbUFyY2gKICAgIGluc3RhbGxHb29nbGVDaHJvbWUKICBlbHNlCiAgICBwcmludGYgIiAgJXMiICIkX01TR19GT1VORF9DSFJPTUVfSU5TVEFMTEVEIgogICAgcHJpbnRmICIgKHYlcykiICIkKCRfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSCAtLXZlcnNpb24gfCBjdXQgLWQnICcgLWYzKSIKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGZpOwogIGdldExhdGVzdENocm9tZWRyaXZlclZlcnNpb24KICBnZXRDaHJvbWVkcml2ZXJCaW5hcnlQYXRoCiAgcHJpbnRJbmRlbnQKICBpZiBbICIkX0NIUk9NRURSSVZFUl9CSU5BUllfUEFUSCIgPSAiIiBdOyB0aGVuCiAgICBwcmludGYgIiAgJXMgKHYlcykuLi4iICIkX01TR19JTlNUQUxMSU5HX0NIUk9NRURSSVZFUiIgIiRDSFJPTUVEUklWRVJfVkVSU0lPTiIKICAgIGluc3RhbGxDaHJvbWVEcml2ZXIKICBlbHNlCiAgICBfQ0hST01FRFJJVkVSX0lOU1RBTExFRF9WRVJTSU9OPSIkKCIkX0NIUk9NRURSSVZFUl9CSU5BUllfUEFUSCIgLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMikiCiAgICBpZiBbICIkX0NIUk9NRURSSVZFUl9JTlNUQUxMRURfVkVSU0lPTiIgIT0gIiRDSFJPTUVEUklWRVJfVkVSU0lPTiIgXTsgdGhlbgogICAgICBwcmludGYgIiAgJXMgKHYlcyIgIiRfTVNHX1VQREFUSU5HX0NIUk9NRURSSVZFUiIgIiRfQ0hST01FRFJJVkVSX0lOU1RBTExFRF9WRVJTSU9OIgogICAgICBwcmludGYgIiAtPiB2JXMpLi4uIiAiJENIUk9NRURSSVZFUl9WRVJTSU9OIgogICAgICBpbnN0YWxsQ2hyb21lRHJpdmVyCiAgICBlbHNlCiAgICAgIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0ZPVU5EX0NIUk9NRURSSVZFUl9JTlNUQUxMRUQiICIkX0NIUk9NRURSSVZFUl9JTlNUQUxMRURfVkVSU0lPTiIKICAgIGZpCiAgZmk7CiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCn0KaWYgKHJldHVybiAwIDI+L2Rldi9udWxsKTsgdGhlbgogIGV4cG9ydFZhcmlhYmxlcwplbHNlCiAgbWFpbgpmaTs='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
