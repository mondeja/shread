#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSBleGVjdXRlZCBhcyBzdXBlcnVzZXIuIgpfTVNHX0NIRUNLSU5HX0VDT1NZU1RFTT0iQ2hlY2tpbmcgQ2hyb21lIGVjb3N5c3RlbS4uLiIKX01TR19VTkFCTEVfVE9fSU5TVEFMTF8zMj0iSXMgbm90IHBvc3NpYmxlIHRvIGluc3RhbGwgR29vZ2xlIENocm9tZSBvbiAzMiBiaXRzIHN5c3RlbXMuIgpfTVNHX0lOU1RBTExJTkdfR09PR0xFX0NIUk9NRT0iSW5zdGFsbGluZyBHb29nbGUgQ2hyb21lLi4uIgpfTVNHX0ZPVU5EX0NIUk9NRV9JTlNUQUxMRUQ9Ikdvb2dsZSBDaHJvbWUgZm91bmQgaW5zdGFsbGVkIgpfTVNHX0lOU1RBTExJTkdfQ0hST01FRFJJVkVSPSJJbnN0YWxsaW5nIGNocm9tZWRyaXZlciIKX01TR19VUERBVElOR19DSFJPTUVEUklWRVI9IlVwZGF0aW5nIGNocm9tZWRyaXZlciIKX01TR19GT1VORF9DSFJPTUVEUklWRVJfSU5TVEFMTEVEPSJDaHJvbWVkcml2ZXIgZm91bmQgaW5zdGFsbGVkIgppZiBbWyAkKC91c3IvYmluL2lkIC11KSAtbmUgMCBdXTsgdGhlbgogIHByaW50ZiAiJXNcbiIgIiRfTVNHX0VYRUNVVEVEX0FTX1NVUEVSVVNFUiIgPiYyCiAgZXhpdCAxCmZpOwpJTkRFTlRfU1RSSU5HPSIiCmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC0taW5kZW50KQogICAgc2hpZnQKICAgIElOREVOVF9TVFJJTkc9JDEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogIGlmIFsgLXogIiRfU0NSSVBUX0ZJTEVOQU1FIiBdOyB0aGVuCiAgICBmaWxlcGF0aD0ic3JjL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvbWFpbi5zaCIKICAgIGJhc2ggIiRmaWxlcGF0aCIgPiAvZGV2L251bGwKICBlbHNlCiAgICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgICBjdXJsIC1zTCAiJHVybCIgfCBzdWRvIGJhc2ggLSA+IC9kZXYvbnVsbAogIGZpOwpmaTsKSU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFUz0oCiAgImRlYmNvbmYtdXRpbHMiCikKZm9yIERFUCBpbiAiJHtJTlNUQUxMQVRJT05fREVQRU5ERU5DSUVTW0BdfSI7IGRvCiAgaWYgW1sgIiQoc3VkbyBwYWNtYW4gLVFpICIkREVQIiAyPiAvZGV2L251bGwgfCBncmVwIFN0YXR1cykiICE9ICJTdGF0dXM6IGluc3RhbGwgb2sgaW5zdGFsbGVkIiBdXTsgdGhlbgogICAgc3VkbyBwYWNtYW4gLVMgIiRERVAiID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KICBmaTsKZG9uZTsKaWYgWyAiJChjb21tYW5kIC12IGRlYmNvbmYtZ2V0LXNlbGVjdGlvbnMpIiAhPSAiIiBdOyB0aGVuCiAgX09SSUdJTkFMX0RFQkNPTkZfRlJPTlRFTkQ9JCgKICAgIHN1ZG8gZGViY29uZi1nZXQtc2VsZWN0aW9ucyB8IFwKICAgIGdyZXAgZGViY29uZi9mcm9udGVuZCB8IFwKICAgIGF3ayAne3ByaW50ICQ0fScpCiAgc3VkbyBzaCAtYyAiZWNobyAnZGViY29uZiBkZWJjb25mL2Zyb250ZW5kIHNlbGVjdCBOb25pbnRlcmFjdGl2ZScgfCBkZWJjb25mLXNldC1zZWxlY3Rpb25zIgpmaTsKcHJpbnRJbmRlbnQKcHJpbnRmICIlc1xuIiAiJF9NU0dfQ0hFQ0tJTkdfRUNPU1lTVEVNIgpfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSD0iIgpmdW5jdGlvbiBjYWNoZUdvb2dsZUNocm9tZUJpbmFyeVBhdGgoKSB7CiAgX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEg9IiQoY29tbWFuZCAtdiBnb29nbGUtY2hyb21lKSIKICBpZiBbICIkX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEgiID0gIiIgXTsgdGhlbgogICAgX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEg9IiQoY29tbWFuZCAtdiBnb29nbGUtY2hyb21lLXN0YWJsZSkiCiAgZmk7Cn0KY2FjaGVHb29nbGVDaHJvbWVCaW5hcnlQYXRoCnByaW50SW5kZW50CmlmIFsgIiRfR09PR0xFX0NIUk9NRV9CSU5BUllfUEFUSCIgPSAiIiBdOyB0aGVuCiAgaWYgW1sgIiQodW5hbWUgLW0pIiAhPSAieDg2XzY0IiBdXTsgdGhlbgogICAgcHJpbnRmICIgICVzIiAiJF9NU0dfVU5BQkxFX1RPX0lOU1RBTExfMzIiID4mMgogICAgcHJpbnRmICIgXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgZXhpdCAxCiAgZmk7CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfSU5TVEFMTElOR19HT09HTEVfQ0hST01FIgogIGN1cmwgLXNMIGh0dHBzOi8vZGwuZ29vZ2xlLmNvbS9saW51eC9kaXJlY3QvZ29vZ2xlLWNocm9tZS1zdGFibGVfY3VycmVudF9hbWQ2NC5kZWIgXAogICAgLS1vdXRwdXQgZ29vZ2xlLWNocm9tZS1zdGFibGVfY3VycmVudF9hbWQ2NC5kZWIKICBzdWRvIHBhY21hbiAtUyAuL2dvb2dsZS1jaHJvbWUtc3RhYmxlX2N1cnJlbnRfYW1kNjQuZGViID4gL2Rldi9udWxsCiAgc3VkbyBybSAtZiBnb29nbGUtY2hyb21lLXN0YWJsZV9jdXJyZW50X2FtZDY0LmRlYgogIGNhY2hlR29vZ2xlQ2hyb21lQmluYXJ5UGF0aAogIHByaW50ZiAiICh2JXMpIiAiJCgkX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEggLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMykiCmVsc2UKICBwcmludGYgIiAgJXMiICIkX01TR19GT1VORF9DSFJPTUVfSU5TVEFMTEVEIgogIHByaW50ZiAiICh2JXMpIiAiJCgkX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEggLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMykiCmZpOwpwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKR09PR0xFX0NIUk9NRV9NQUpPUl9WRVJTSU9OPSIkKCIkX0dPT0dMRV9DSFJPTUVfQklOQVJZX1BBVEgiIC0tdmVyc2lvbiB8IGN1dCAtZCcgJyAtZjMgfCBjdXQgLWQnLicgLWYxKSIKY3VybCAtc0wgaHR0cHM6Ly9jaHJvbWVkcml2ZXIuc3RvcmFnZS5nb29nbGVhcGlzLmNvbS8gXAogIC0tb3V0cHV0IGNocm9tZWRyaXZlci12ZXJzaW9ucy54bWwKQ0hST01FRFJJVkVSX1ZFUlNJT049JChncmVwIC1QbyAiPEtleT4kR09PR0xFX0NIUk9NRV9NQUpPUl9WRVJTSU9OXC4qXGQqXC4qXGQrXC4qXGQqXC9jaHJvbWVkcml2ZXJfbGludXg2NFwuemlwIiBjaHJvbWVkcml2ZXItdmVyc2lvbnMueG1sIHwKICAgIGdyZXAgLVBvICIkR09PR0xFX0NIUk9NRV9NQUpPUl9WRVJTSU9OXC4qXGQqXC4qXGQrXC4qXGQqIiB8IFwKICAgIGhlYWQgLW4gMSkKc3VkbyBybSAtZiBjaHJvbWVkcml2ZXItdmVyc2lvbnMueG1sCmluc3RhbGxDaHJvbWVEcml2ZXIoKSB7CiAgY3VybCAtc0wgXAogICAgImh0dHBzOi8vY2hyb21lZHJpdmVyLnN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vJENIUk9NRURSSVZFUl9WRVJTSU9OL2Nocm9tZWRyaXZlcl9saW51eDY0LnppcCIgXAogICAgLS1vdXRwdXQgImNocm9tZWRyaXZlcl9saW51eDY0LnppcCIKICB1bnppcCAtcSBjaHJvbWVkcml2ZXJfbGludXg2NC56aXAKICBzdWRvIHJtIC1mIGNocm9tZWRyaXZlcl9saW51eDY0LnppcAogIGlmIFsgLWYgL3Vzci9iaW4vY2hyb21lZHJpdmVyIF07IHRoZW4KICAgIHN1ZG8gcm0gLWYgL3Vzci9iaW4vY2hyb21lZHJpdmVyCiAgZmk7CiAgc3VkbyBtdiAtZiBjaHJvbWVkcml2ZXIgL3Vzci9iaW4vY2hyb21lZHJpdmVyCn0KcHJpbnRJbmRlbnQKX0NIUk9NRURSSVZFUl9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IGNocm9tZWRyaXZlcikiCmlmIFsgIiRfQ0hST01FRFJJVkVSX0JJTkFSWV9QQVRIIiA9ICIiIF07IHRoZW4KICBwcmludGYgIiAgJXMgKHYlcykuLi4iICIkX01TR19JTlNUQUxMSU5HX0NIUk9NRURSSVZFUiIgIiRDSFJPTUVEUklWRVJfVkVSU0lPTiIKICBpbnN0YWxsQ2hyb21lRHJpdmVyCmVsc2UKICBfQ0hST01FRFJJVkVSX0lOU1RBTExFRF9WRVJTSU9OPSIkKCIkX0NIUk9NRURSSVZFUl9CSU5BUllfUEFUSCIgLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMikiCiAgaWYgWyAiJF9DSFJPTUVEUklWRVJfSU5TVEFMTEVEX1ZFUlNJT04iICE9ICIkQ0hST01FRFJJVkVSX1ZFUlNJT04iIF07IHRoZW4KICAgIHByaW50ZiAiICAlcyAodiVzIiAiJF9NU0dfVVBEQVRJTkdfQ0hST01FRFJJVkVSIiAiJF9DSFJPTUVEUklWRVJfSU5TVEFMTEVEX1ZFUlNJT04iCiAgICBwcmludGYgIiAtPiB2JXMpLi4uIiAiJENIUk9NRURSSVZFUl9WRVJTSU9OIgogICAgaW5zdGFsbENocm9tZURyaXZlcgogIGVsc2UKICAgIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0ZPVU5EX0NIUk9NRURSSVZFUl9JTlNUQUxMRUQiICIkX0NIUk9NRURSSVZFUl9JTlNUQUxMRURfVkVSU0lPTiIKICBmaQpmaQpwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKaWYgWyAiJChjb21tYW5kIC12IGRlYmNvbmYtZ2V0LXNlbGVjdGlvbnMpIiAhPSAiIiBdOyB0aGVuCiAgc3VkbyBzaCAtYyAiZWNobyAnZGViY29uZiBkZWJjb25mL2Zyb250ZW5kIHNlbGVjdCAkX09SSUdJTkFMX0RFQkNPTkZfRlJPTlRFTkQnIHwgZGViY29uZi1zZXQtc2VsZWN0aW9ucyIKZmk7Cg=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
