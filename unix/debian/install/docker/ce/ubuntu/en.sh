#!/bin/bash
source <(printf 'X01TR19FWEVDVVRFRF9BU19TVVBFUlVTRVI9IlRoaXMgc2NyaXB0IG5lZWRzIHRvIGJlIGV4ZWN1
dGVkIGFzIHN1cGVydXNlci4iCl9NU0dfQ0hFQ0tJTkdfRE9DS0VSX0NFPSJDaGVja2luZyBEb2Nr
ZXIgQ29tbXVuaXR5IEVkaXRpb24uLi4iCl9NU0dfU0VUVElOR19VUF9QVUJMSUNfS0VZPSJTZXR0
aW5nIHVwIHB1YmxpYyBrZXkuLi4iCl9NU0dfRVJST1JfUkVUUklFVklOR19QVUJMSUNfRE9DS0VS
X1JFUE9TX0tFWT0iQW4gZXJyb3IgaGFwcGVuIHJldHJpZXZpbmcgRG9ja2VyIHJlcG9zaXRvcmll
cyBrZXkiCl9NU0dfQ09ORklHVVJFRF9QVUJMSUNfS0VZX0ZPVU5EPSJQdWJsaWMga2V5IGNvbmZp
Z3VyZWQgZm91bmQiCl9NU0dfQURESU5HX0RPQ0tFUl9SRVBPPSJBZGRpbmcgRG9ja2VyIHJlcG9z
aXRvcnkuLi4iCl9NU0dfRE9DS0VSX1JFUE9fRk9VTkQ9IkRvY2tlciByZXBvc2l0b3J5IGNvbmZp
Z3VyZWQgZm91bmQiCl9NU0dfQ0hFQ0tJTkdfRE9DS0VSX0NFX1BBQ0tBR0VTPSJDaGVja2luZyBE
b2NrZXIgQ0UgcGFja2FnZXMuLi4iCmlmIFtbICQoL3Vzci9iaW4vaWQgLXUpIC1uZSAwIF1dOyB0
aGVuCiAgcHJpbnRmICIkX01TR19FWEVDVVRFRF9BU19TVVBFUlVTRVJcbiIgPiYyCiAgZXhpdCAx
CmZpOwpfUFJFUEVORF9TVERPVVRfU1RSSU5HPSIiCmZvciBhcmcgaW4gIiRAIgpkbwogICAgY2Fz
ZSAkYXJnIGluCiAgICAgICAgLS1wcmVwZW5kLXN0ZG91dCkKICAgICAgICBzaGlmdAogICAgICAg
IF9QUkVQRU5EX1NURE9VVF9TVFJJTkc9JDEKICAgICAgICBzaGlmdAogICAgICAgIDs7CiAgICBl
c2FjCmRvbmUKZnVuY3Rpb24gcHJpbnRQcmVwZW5kZWRTdGRvdXQoKSB7CiAgcHJpbnRmICIlcyIg
IiRfUFJFUEVORF9TVERPVVRfU1RSSU5HIgp9CmV4cG9ydCBBUFRfS0VZX0RPTlRfV0FSTl9PTl9E
QU5HRVJPVVNfVVNBR0U9RG9udFdhcm4Kc3VkbyBwcmludGYgIiIKcHJpbnRQcmVwZW5kZWRTdGRv
dXQKcHJpbnRmICIkX01TR19DSEVDS0lOR19ET0NLRVJfQ0UuLi5cbiIKcHJpbnRQcmVwZW5kZWRT
dGRvdXQKX0FQVF9LRVlfRk9VTkQ9JChhcHQta2V5IGxpc3QgfCBncmVwICJEb2NrZXIgUmVsZWFz
ZSIpCmlmIFsgIiRfQVBUX0tFWV9GT1VORCIgPSAiIiBdOyB0aGVuCiAgcHJpbnRmICIgICRfTVNH
X1NFVFRJTkdfVVBfUFVCTElDX0tFWSIKICBfR0VUX1BVQkxJQ19HUEdfS0VZX1NUREVSUj0kKAog
ICAgY3VybCAtZnNTTCBodHRwczovL2Rvd25sb2FkLmRvY2tlci5jb20vbGludXgvdWJ1bnR1L2dw
ZyB8IFwKICAgIHN1ZG8gYXB0LWtleSBhZGQgLSAyPiYxID4gL2Rldi9udWxsKQogIF9HRVRfUFVC
TElDX0dQR19LRVlfRVhJVF9DT0RFPSQ/CiAgaWYgWyAkX0dFVF9QVUJMSUNfR1BHX0tFWV9FWElU
X0NPREUgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICJcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1c
biIgPiYyCiAgICBwcmludGYgIlxuJF9NU0dfRVJST1JfUkVUUklFVklOR19QVUJMSUNfRE9DS0VS
X1JFUE9TX0tFWSIgPiYyCiAgICBwcmludGYgIiAoaHR0cHM6Ly9kb3dubG9hZC5kb2NrZXIuY29t
L2xpbnV4L3VidW50dS9ncGcpOlxuIiA+JjIKICAgIHByaW50ZiAiJF9HRVRfUFVCTElDX0dQR19L
RVlfU1RERVJSXG4iID4mMgogICAgZXhpdCAkX0dFVF9QVUJMSUNfR1BHX0tFWV9FWElUX0NPREUK
ICBmaTsKICBzdWRvIGFwdC1rZXkgZmluZ2VycHJpbnQgMEVCRkNEODgKICBwcmludGYgIiBcZVs5
Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKZWxzZQogIHByaW50ZiAiICAkX01TR19DT05GSUdVUkVE
X1BVQkxJQ19LRVlfRk9VTkQiCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4i
CmZpOwpVQlVOVFVfUkVMRUFTRT0kKGxzYl9yZWxlYXNlIC1jcykKaWYgWyAiJFVCVU5UVV9SRUxF
QVNFIiA9ICJlb2FuIiBdOyB0aGVuCiAgVUJVTlRVX1JFTEVBU0U9ZGlzY28KZmk7Cl9BUFRfUkVQ
Tz0iZGViIFthcmNoPWFtZDY0XSBodHRwczovL2Rvd25sb2FkLmRvY2tlci5jb20vbGludXgvdWJ1
bnR1ICRVQlVOVFVfUkVMRUFTRSBzdGFibGUiCl9SRVBPX0ZPVU5EX09OX1NPVVJDRVM9JCgKICBm
aW5kIC9ldGMvYXB0LyAtbmFtZSAqLmxpc3QgfCBcCiAgeGFyZ3MgY2F0IHwgXAogIGdyZXAgXltb
OnNwYWNlOl1dKmRlYiB8IFwKICBncmVwICJodHRwczovL2Rvd25sb2FkLmRvY2tlci5jb20vbGlu
dXgvdWJ1bnR1IikKcHJpbnRQcmVwZW5kZWRTdGRvdXQKaWYgWyAiJF9SRVBPX0ZPVU5EX09OX1NP
VVJDRVMiID0gIiIgXTsgdGhlbgogIHByaW50ZiAiICAkX01TR19BRERJTkdfRE9DS0VSX1JFUE8i
CiAgc3VkbyBhZGQtYXB0LXJlcG9zaXRvcnkgIiRfQVBUX1JFUE8iID4gL2Rldi9udWxsCiAgc3Vk
byBhcHQtZ2V0IHVwZGF0ZSAteSAtcXFxID4gL2Rldi9udWxsCmVsc2UKICBwcmludGYgIiAgJF9N
U0dfRE9DS0VSX1JFUE9fRk9VTkQiCmZpOwpwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVsz
OW1cbiIKSU5TVEFMTEFUSU9OX1BBQ0tBR0VTPSgKICAiZG9ja2VyLWNlIgogICJkb2NrZXItY2Ut
Y2xpIgogICJjb250YWluZXJkLmlvIgopCnByaW50UHJlcGVuZGVkU3Rkb3V0CnByaW50ZiAiICAk
X01TR19DSEVDS0lOR19ET0NLRVJfQ0VfUEFDS0FHRVNcbiIKZm9yIERFUCBpbiAiJHtJTlNUQUxM
QVRJT05fUEFDS0FHRVNbQF19IgpkbwogIHByaW50UHJlcGVuZGVkU3Rkb3V0CiAgcHJpbnRmICIg
ICAgJERFUCIKICBpZiBbWyAiJChkcGtnIC1zICRERVAgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0
dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICAgIHN1ZG8g
YXB0LWdldCBpbnN0YWxsIC15IC1xcXEgJERFUCA+IC9kZXYvbnVsbAogICAgaWYgWyAkPyAtbmUg
MCBdOyB0aGVuCiAgICAgIGV4aXQgJD8KICAgIGZpOwogIGZpOwogIHByaW50ZiAiIFxlWzkybVx4
RTJceDlDXHg5NFxlWzM5bVxuIgpkb25lCnN1ZG8gY2htb2QgNzc3IC92YXIvcnVuL2RvY2tlci5z
b2NrCnVuc2V0IEFQVF9LRVlfRE9OVF9XQVJOX09OX0RBTkdFUk9VU19VU0FHRQo=' | base64 -d)
