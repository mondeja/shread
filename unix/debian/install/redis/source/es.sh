#!/bin/bash
source <(printf '_MSG_EXECUTED_AS_SUPERUSER="Este script necesita ser ejecutado como superusuario."
_MSG_SETTING_REDIS_ECOSYSTEM="Configurando ecosistema Redis..."
_MSG_CHECKING_BASE_DEPENDENCIES="Comprobando dependencias base..."
_MSG_RETRIEVING_LASTEST_STABLE_VERSION="Obteniendo la última versión estable disponible..."
_MSG_ERROR_RETRIEVING_LASTEST_VERSION_FROM_FILE="Ocurrió un error obteniendo la última versión estable disponible de Redis del archivo"
_MSG_VERSIONS_FOUND="Versiones encontradas:"
_MSG_DOWNLOADING_REDIS="Descargando Redis"
_MSG_BUILDING_SOURCE_CODE="Construyendo el código fuente..."
_MSG_TESTING_BUILD="Testeando la construcción..."
_MSG_CHECKING_SERVICE_CONFIG="Comprobando configuración del servicio 'redis'..."
_MSG_ENABLING="Habilitando..."
_MSG_ERROR_ENABLING_SERVICE="Ocurrió un error habilitando el servicio 'redis'."
_MSG_ERROR="Error"
_MSG_EXIT_CODE="Código de salida"
_MSG_ITS_ENABLED="Está habilitado"
_MSG_EXECUTING="Ejecutando..."
_MSG_SERVICE_COULDNT_BE_STARTED="El servicio 'redis' no pudo ser iniciado."
_MSG_ITS_ON_STATE="Se encuentra en estado"
_MSG_ITS_RUNNING="Se encuentra en ejecución"
_MSG_CREATING_SERVICE="Creando servicio 'redis'..."
_MSG_CREATING_USER="Creando usuarios 'redis'..."
_MSG_UNZIPPING="Descomprimiendo"
_MSG_INSTALLING_REDIS="Instalando Redis"
_MSG_UPDATING_REDIS="Actualizando Redis"
_MSG_FOUND_REDIS_INSTALLED="Encontrado Redis instalado"
if [[ $(/usr/bin/id -u) -ne 0 ]]; then
  printf "%s\n" "$_MSG_EXECUTED_AS_SUPERUSER" >&2
  exit 1
fi;
_ORIGIN_PWD=$PWD
_TEST=0
_PREPEND_STDOUT_STRING=""
for arg in "$@"
do
    case $arg in
        --prepend-stdout)
        shift
        _PREPEND_STDOUT_STRING=$1
        shift
        ;;
        --test)
        _TEST=1
        shift
        ;;
    esac
done
function printPrependedStdout() {
  printf "%s" "$_PREPEND_STDOUT_STRING"
}
printPrependedStdout
printf "%s\n" "$_MSG_SETTING_REDIS_ECOSYSTEM"
printPrependedStdout
printf "  %s\n" "$_MSG_CHECKING_BASE_DEPENDENCIES"
INSTALLATION_DEPENDENCIES=(
  "build-essential"
  "tcl"
  "curl"
  "make"
)
for DEP in "${INSTALLATION_DEPENDENCIES[@]}"; do
  printPrependedStdout
  printf "    %s" "$DEP"
  if [[ "$(dpkg -s "$DEP" 2> /dev/null | grep Status)" != "Status: install ok installed" ]]; then
    sudo apt-get install -y -qqq "$DEP" > /dev/null || exit $?
  fi;
  printf " \e[92m\xE2\x9C\x94\e[39m\n"
done
function getRedisServerLastestStableVersion() {
  printPrependedStdout
  printf "  %s" "$_MSG_RETRIEVING_LASTEST_STABLE_VERSION"
  _REDIS_LASTEST_STABLE_VERSION=$(
    curl -sL http://download.redis.io/redis-stable/00-RELEASENOTES | \
      grep Released | \
      head -n 1 | \
      cut -d' ' -f2 | \
      tr -d '\n'
  )
  if [ "$_REDIS_LASTEST_STABLE_VERSION" = "" ]; then
    printf " \e[91m\xE2\x9C\x95\e[39m\n" >&2
    printf "\n%s" "$_MSG_ERROR_RETRIEVING_LASTEST_VERSION_FROM_FILE" >&2
    printf " 'http://download.redis.io/redis-stable/" >&2
    printf "00-RELEASENOTES'.\n%s\n" "$_MSG_VERSIONS_FOUND" >&2
    printf "%s" "$(curl -sL http://download.redis.io/redis-stable/00-RELEASENOTES | \
      grep Released | \
      cut -d' ' -f2)\n" >&2
    exit 1
  fi;
  printf " (v%s) \e[92m\xE2\x9C\x94\e[39m\n" "$_REDIS_LASTEST_STABLE_VERSION"
}
function downloadRedisLastestStableVersion() {
  printPrependedStdout
  printf "  %s (v%s)..." "$_MSG_DOWNLOADING_REDIS" "$_REDIS_LASTEST_STABLE_VERSION"
  curl -sL http://download.redis.io/redis-stable.tar.gz \
    --output "$1" || exit $?
  printf " \e[92m\xE2\x9C\x94\e[39m\n"
}
function buildRedis() {
  printPrependedStdout
  printf "    %s\n" "$_MSG_BUILDING_SOURCE_CODE"
  stdbuf -oL make 2>&1 |
    while IFS= read -r line; do
      if [ "$(echo "$line" | cut -d' ' -f1)" = "gcc" ]; then
        file=$(
          awk -F'src/' '{ for(i=1;i<=NF;i++) print $i }' <<< "$line" | \
          tail -n 1
        )
        printPrependedStdout
        printf "      %s \e[92m\xE2\x9C\x94\e[39m\n" "$file"
      fi;
    done
}
function testRedisBuild() {
  printPrependedStdout
  printf "    %s\n" "$_MSG_TESTING_BUILD"
  stdbuf -oL make test 2>&1 |
    while IFS= read -r line; do
      printPrependedStdout
      printf "%s" "$line"
    done
}
function checkRedisServiceConfig() {
  printPrependedStdout
  printf "  %s\n" "$_MSG_CHECKING_SERVICE_CONFIG"
  printPrependedStdout
  _REDIS_SERVICE_ENABLED_FOUND=$(
    systemctl list-unit-files | \
    grep enabled | \
    grep redis)
  if [ "$_REDIS_SERVICE_ENABLED_FOUND" = "" ]; then
    printf "    %s" "$_MSG_ENABLING"
    _ENABLE_REDIS_SERVER_OUTPUT=$(
      sudo systemctl enable redis.service 2>&1 > /dev/null
    )
    _ENABLE_REDIS_SERVER_EXIT_CODE=$?
    if [ $_ENABLE_REDIS_SERVER_EXIT_CODE -ne 0 ]; then
      printf " \e[91m\xE2\x9C\x95\e[39m\n" >&2
      printf "%s\n" "$_MSG_ERROR_ENABLING_SERVICE" >&2
      printf "%s: %s\n" "$_MSG_EXIT_CODE" "$_ENABLE_REDIS_SERVER_EXIT_CODE" >&2
      printf "%s: %s\n" "$_MSG_ERROR" "$_ENABLE_REDIS_SERVER_OUTPUT" >&2
      exit $_ENABLE_REDIS_SERVER_EXIT_CODE
    fi;
  else
    printf "    %s" "$_MSG_ITS_ENABLED"
  fi;
  printf " \e[92m\xE2\x9C\x94\e[39m\n"
  printPrependedStdout
  _REDIS_SERVICE_STATUS=$(
    sudo systemctl show -p ActiveState redis | \
    cut -d'=' -f2 | \
    tr -d '\n')
  if [ "$_REDIS_SERVICE_STATUS" != "active" ]; then
    printf "    %s" "$_MSG_EXECUTING"
    sudo systemctl start redis > /dev/null
    _REDIS_SERVICE_STARTED=$?
    if [ $_REDIS_SERVICE_STARTED -ne 0 ]; then
      printf " \e[91m\xE2\x9C\x95\e[39m\n" >&2
      printf "%s\n" "$_MSG_SERVICE_COULDNT_BE_STARTED" >&2
      printf "%s '%s'.\n" "$_MSG_ITS_ON_STATE" "$_REDIS_SERVICE_STATUS" >&2
      exit $_REDIS_SERVICE_STARTED
    fi;
  else
    printf "    %s" "$_MSG_ITS_RUNNING"
  fi;
  printf " \e[92m\xE2\x9C\x94\e[39m\n"
}
function configureRedis() {
  if [ -d "/etc/redis" ]; then
    sudo rm -rf /etc/redis
  fi;
  sudo mkdir /etc/redis || exit $?
  sudo cp /tmp/redis-stable/redis.conf /etc/redis || exit $?
  sudo sed -i 's/^supervised no/supervised systemd/' /etc/redis/redis.conf || \
    exit $?
  sudo sed -i 's/^dir \.\//dir \/var\/lib\/redis/' /etc/redis/redis.conf || \
    exit $?
  printf "    %s" "$_MSG_CREATING_SERVICE"
  sudo systemctl daemon-reload
  _REDIS_SERVICE_STATUS=$(
    sudo systemctl show -p ActiveState redis | \
    cut -d'=' -f2 | \
    tr -d '\n')
  if [ "$_REDIS_SERVICE_STATUS" != "inactive" ]; then
    sudo systemctl stop redis > /dev/null
  fi;
  if [ -f "/etc/systemd/system/redis.service" ]; then
    sudo rm -f /etc/systemd/system/redis.service
  fi;
  sudo touch /etc/systemd/system/redis.service
  cat << EOF > /etc/systemd/system/redis.service
[Unit]
Description=Redis In-Memory Data Store
After=network.target
[Service]
User=redis
Group=redis
ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf
ExecStop=/usr/local/bin/redis-cli shutdown
Restart=always
[Install]
WantedBy=multi-user.target
EOF
  if [ $? -ne 0 ]; then
    exit $?
  fi;
  printf " \e[92m\xE2\x9C\x94\e[39m\n"
  printf "    %s" "$_MSG_CREATING_USER"
  if ! id -u redis > /dev/null 2>&1; then
    sudo userdel -f redis
  fi;
  sudo adduser --system --group --no-create-home redis > /dev/null || exit $?
  printf " \e[92m\xE2\x9C\x94\e[39m\n"
  if [ -d "/var/lib/redis" ]; then
    sudo rm -rf /var/lib/redis || exit $?
  fi;
  sudo mkdir /var/lib/redis || exit $?
  sudo chown redis:redis /var/lib/redis || exit $?
  sudo chmod 770 /var/lib/redis || exit $?
  sudo systemctl daemon-reload
}
function installRedis() {
  if [ -d "redis-stable" ]; then
    rm -rf redis-stable
  fi;
  printPrependedStdout
  printf "    %s" "$_MSG_UNZIPPING"
  tar xzvf "$1" > /dev/null || exit $?
  rm -f "$1" || exit $?
  printf " \e[92m\xE2\x9C\x94\e[39m\n"
  cd redis-stable || exit $?
  buildRedis
  if [ $_TEST -eq 1 ]; then
    testRedisBuild
  fi;
  sudo make install > /dev/null 2>&1 || exit $?
  configureRedis
}
cd /tmp || exit $?
getRedisServerLastestStableVersion
_REDIS_BINARY_FILEPATH="$(command -v redis-server)"
if [ "$_REDIS_BINARY_FILEPATH" = "" ]; then
  downloadRedisLastestStableVersion /tmp/redis-stable.tar.gz
  printPrependedStdout
  printf "  %s (v%s)...\n" "$_MSG_INSTALLING_REDIS" "$_REDIS_LASTEST_STABLE_VERSION"
  installRedis /tmp/redis-stable.tar.gz
else
  _REDIS_INSTALLED_VERSION=$(
    redis-server --version | \
    cut -d'=' -f2 | \
    cut -d' ' -f1)
  if [ "$_REDIS_INSTALLED_VERSION" != "$_REDIS_LASTEST_STABLE_VERSION" ]; then
    downloadRedisLastestStableVersion /tmp/redis-stable.tar.gz
    printPrependedStdout
    printf "  %s (v%s ->" "$_MSG_UPDATING_REDIS" "$_REDIS_INSTALLED_VERSION"
    printf " v%s)...\n" "$_REDIS_LASTEST_STABLE_VERSION"
    installRedis /tmp/redis-stable.tar.gz
  else
    printPrependedStdout
    printf "  %s (v%s)" "$_MSG_FOUND_REDIS_INSTALLED" "$_REDIS_INSTALLED_VERSION"
    printf " \e[92m\xE2\x9C\x94\e[39m\n"
  fi;
fi;
checkRedisServiceConfig
cd "$_ORIGIN_PWD" || exit $?
' | base64 -d)
