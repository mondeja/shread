#!/bin/bash
_SCRIPT_FILENAME="$(basename "$0")" source <(printf 'IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfTVNHX0VYRUNVVEVEX0FTX1NVUEVSVVNFUj0iVGhpcyBzY3JpcHQgbmVlZHMgdG8gYmUgZXhlY3V0ZWQgYXMgc3VwZXJ1c2VyLiIKX01TR19TRVRUSU5HX1JFRElTX0VDT1NZU1RFTT0iU2V0dGluZyB1cCBSZWRpcyBlY29zeXN0ZW0uLi4iCl9NU0dfQ0hFQ0tJTkdfUEFDS0FHRVM9IkNoZWNraW5nIHBhY2thZ2VzLi4uIgpfTVNHX0NIRUNLSU5HX1NFUlZJQ0VfQ09ORklHPSJDaGVja2luZyBzZXJ2aWNlIGNvbmZpZ3VyYXRpb24uLi4iCl9NU0dfSVRTX0VOQUJMRUQ9Ikl0J3MgZW5hYmxlZCIKX01TR19FUlJPUl9FTkFCTElOR19TRVJWSUNFPSJBbiBlcnJvciBoYXBwZW4gZW5hYmxpbmcgJ3JlZGlzLXNlcnZlcicgc2VydmljZS4iCl9NU0dfRVhJVF9DT0RFPSJFeGl0IGNvZGUiCl9NU0dfRVJST1I9IkVycm9yIgpfTVNHX0lUU19SVU5OSU5HPSJJdCdzIHJ1bm5pbmciCl9NU0dfU0VSVklDRV9DT1VMRE5UX0JFX1NUQVJURUQ9IlRoZSBzZXJ2aWNlICdyZWRpcy1zZXJ2ZXInIGNvdWxkIG5vdCBiZSBzdGFydGVkLiIKX01TR19JVFNfT05fU1RBVEU9Ikl0J3Mgb24gc3RhdGUiCmlmIFtbICQoL3Vzci9iaW4vaWQgLXUpIC1uZSAwIF1dOyB0aGVuCiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSIiA+JjIKICBleGl0IDEKZmk7CklOREVOVF9TVFJJTkc9IiIKZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQpwcmludEluZGVudApwcmludGYgIiVzXG4iICIkX01TR19TRVRUSU5HX1JFRElTX0VDT1NZU1RFTSIKcHJpbnRJbmRlbnQKcHJpbnRmICIgICVzXG4iICIkX01TR19DSEVDS0lOR19QQUNLQUdFUyIKcHJpbnRJbmRlbnQKcHJpbnRmICIgICAgcmVkaXMtc2VydmVyIgppZiBbICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIgPSAiIiBdOyB0aGVuCiAgaWYgWyAiJF9TQ1JJUFRfRklMRU5BTUUiID0gIm1haW4uc2giIF07IHRoZW4KICAgIGZpbGVwYXRoPSJzcmMvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC9tYWluLnNoIgogICAgYmFzaCAiJGZpbGVwYXRoIiA+IC9kZXYvbnVsbAogIGVsc2UKICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgIGN1cmwgLXNMICIkdXJsIiB8IHN1ZG8gYmFzaCAtID4gL2Rldi9udWxsCiAgZmk7CmZpOwppZiBbWyAiJChzdWRvIHBhY21hbiAtUWkgcmVkaXMtc2VydmVyIDI+IC9kZXYvbnVsbCB8IGdyZXAgU3RhdHVzKSIgIT0gIlN0YXR1czogaW5zdGFsbCBvayBpbnN0YWxsZWQiIF1dOyB0aGVuCiAgc3VkbyBwYWNtYW4gLVMgcmVkaXMtc2VydmVyID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KZmk7Cl9SRURJU19TRVJWRVJfVkVSU0lPTj0kKHJlZGlzLXNlcnZlciAtLXZlcnNpb24gfCBjdXQgLWQnPScgLWYyIHwgY3V0IC1kJyAnIC1mMSkKcHJpbnRmICIgKHYlcykgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iICIkX1JFRElTX1NFUlZFUl9WRVJTSU9OIgpwcmludEluZGVudApwcmludGYgIiAgJXNcbiIgIiRfTVNHX0NIRUNLSU5HX1NFUlZJQ0VfQ09ORklHIgpwcmludEluZGVudApwcmludGYgIiAgICAlcyIgIiRfTVNHX0lUU19FTkFCTEVEIgpfUkVESVNfU0VSVklDRV9FTkFCTEVEX0ZPVU5EPSQoc3lzdGVtY3RsIGxpc3QtdW5pdC1maWxlcyB8IGdyZXAgZW5hYmxlZCB8IGdyZXAgcmVkaXMtc2VydmVyKQppZiBbICIkX1JFRElTX1NFUlZJQ0VfRU5BQkxFRF9GT1VORCIgPSAiIiBdOyB0aGVuCiAgX0VOQUJMRV9SRURJU19TRVJWRVJfT1VUUFVUPSQoCiAgICBzdWRvIHN5c3RlbWN0bCBlbmFibGUgcmVkaXMtc2VydmVyLnNlcnZpY2UgMj4mMSA+IC9kZXYvbnVsbAogICkKICBfRU5BQkxFX1JFRElTX1NFUlZFUl9FWElUX0NPREU9JD8KICBpZiBbICRfRU5BQkxFX1JFRElTX1NFUlZFUl9FWElUX0NPREUgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICIgXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVJST1JfRU5BQkxJTkdfU0VSVklDRSIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVhJVF9DT0RFIiAiJF9FTkFCTEVfUkVESVNfU0VSVkVSX0VYSVRfQ09ERSIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVJST1IiICIkX0VOQUJMRV9SRURJU19TRVJWRVJfT1VUUFVUIiA+JjIKICAgIGV4aXQgJF9FTkFCTEVfUkVESVNfU0VSVkVSX0VYSVRfQ09ERQogIGZpOwpmaTsKcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCnByaW50SW5kZW50CnByaW50ZiAiICAgICVzIiAiJF9NU0dfSVRTX1JVTk5JTkciCl9SRURJU19TRVJWSUNFX1NUQVRVUz0kKAogIHN1ZG8gc3lzdGVtY3RsIHNob3cgLXAgQWN0aXZlU3RhdGUgcmVkaXMtc2VydmVyIHwgXAogIGN1dCAtZCc9JyAtZjIgfCBcCiAgdHIgLWQgJ1xuJykKaWYgWyAiJF9SRURJU19TRVJWSUNFX1NUQVRVUyIgIT0gImFjdGl2ZSIgXTsgdGhlbgogIHN1ZG8gc3lzdGVtY3RsIHN0YXJ0IHJlZGlzLXNlcnZlciA+IC9kZXYvbnVsbAogIF9SRURJU19TRVJWSUNFX1NUQVJURUQ9JD8KICBpZiBbICRfUkVESVNfU0VSVklDRV9TVEFSVEVEIC1uZSAwIF07IHRoZW4KICAgIHByaW50ZiAiIFxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIiA+JjIKICAgIHByaW50ZiAiJXNcbiIgIiRfTVNHX1NFUlZJQ0VfQ09VTEROVF9CRV9TVEFSVEVEIiA+JjIKICAgIHByaW50ZiAiJXMgJyVzJy5cbiIgIiRfTVNHX0lUU19PTl9TVEFURSIgIiRfUkVESVNfU0VSVklDRV9TVEFUVVMiID4mMgogICAgZXhpdCAkX1JFRElTX1NFUlZJQ0VfU1RBUlRFRAogIGZpOwpmaTsKcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCg==' | base64 -d)
