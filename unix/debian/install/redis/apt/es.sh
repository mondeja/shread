#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJFc3RlIHNjcmlwdCBuZWNlc2l0YSBzZXIgZWplY3V0YWRvIGNvbW8gc3VwZXJ1c3VhcmlvLiIKX01TR19TRVRUSU5HX1JFRElTX0VDT1NZU1RFTT0iQ29uZmlndXJhbmRvIGVjb3Npc3RlbWEgUmVkaXMuLi4iCl9NU0dfQ0hFQ0tJTkdfUEFDS0FHRVM9IkNvbXByb2JhbmRvIHBhcXVldGVzLi4uIgpfTVNHX0NIRUNLSU5HX1NFUlZJQ0VfQ09ORklHPSJDb21wcm9iYW5kbyBjb25maWd1cmFjacOzbiBkZWwgc2VydmljaW8uLi4iCl9NU0dfSVRTX0VOQUJMRUQ9IkVzdMOhIGhhYmlsaXRhZG8iCl9NU0dfRVJST1JfRU5BQkxJTkdfU0VSVklDRT0iT2N1cnJpw7MgdW4gZXJyb3IgaGFiaWxpdGFuZG8gZWwgc2VydmljaW8gJ3JlZGlzLXNlcnZlcicuIgpfTVNHX0VYSVRfQ09ERT0iQ8OzZGlnbyBkZSBzYWxpZGEiCl9NU0dfRVJST1I9IkVycm9yIgpfTVNHX0lUU19SVU5OSU5HPSJFc3RhIGVuIGVqZWN1Y2nDs24iCl9NU0dfU0VSVklDRV9DT1VMRE5UX0JFX1NUQVJURUQ9IkVsIHNlcnZpY2lvICdyZWRpcy1zZXJ2ZXInIG5vIHB1ZG8gc2VyIGluaWNpYWRvLiIKX01TR19JVFNfT05fU1RBVEU9IlNlIGVuY3VlbnRyYSBlbiBlc3RhZG8iCmlmIFtbICQoL3Vzci9iaW4vaWQgLXUpIC1uZSAwIF1dOyB0aGVuCiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSIiA+JjIKICBleGl0IDEKZmk7CklOREVOVF9TVFJJTkc9IiIKZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQpwcmludEluZGVudApwcmludGYgIiVzXG4iICIkX01TR19TRVRUSU5HX1JFRElTX0VDT1NZU1RFTSIKcHJpbnRJbmRlbnQKcHJpbnRmICIgICVzXG4iICIkX01TR19DSEVDS0lOR19QQUNLQUdFUyIKcHJpbnRJbmRlbnQKcHJpbnRmICIgICAgcmVkaXMtc2VydmVyIgppZiBbICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIgPSAiIiBdOyB0aGVuCiAgaWYgWyAteiAiJF9TQ1JJUFRfRklMRU5BTUUiIF07IHRoZW4KICAgIGZpbGVwYXRoPSJzcmMvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC9tYWluLnNoIgogICAgYmFzaCAiJGZpbGVwYXRoIiA+IC9kZXYvbnVsbAogIGVsc2UKICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgIGN1cmwgLXNMICIkdXJsIiB8IHN1ZG8gYmFzaCAtID4gL2Rldi9udWxsCiAgZmk7CmZpOwppZiBbWyAiJChzdWRvIHBhY21hbiAtUWkgcmVkaXMtc2VydmVyIDI+IC9kZXYvbnVsbCB8IGdyZXAgU3RhdHVzKSIgIT0gIlN0YXR1czogaW5zdGFsbCBvayBpbnN0YWxsZWQiIF1dOyB0aGVuCiAgc3VkbyBwYWNtYW4gLVMgLS0gLXkgcmVkaXMtc2VydmVyID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KZmk7Cl9SRURJU19TRVJWRVJfVkVSU0lPTj0kKHJlZGlzLXNlcnZlciAtLXZlcnNpb24gfCBjdXQgLWQnPScgLWYyIHwgY3V0IC1kJyAnIC1mMSkKcHJpbnRmICIgKHYlcykgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iICIkX1JFRElTX1NFUlZFUl9WRVJTSU9OIgpwcmludEluZGVudApwcmludGYgIiAgJXNcbiIgIiRfTVNHX0NIRUNLSU5HX1NFUlZJQ0VfQ09ORklHIgpwcmludEluZGVudApwcmludGYgIiAgICAlcyIgIiRfTVNHX0lUU19FTkFCTEVEIgpfUkVESVNfU0VSVklDRV9FTkFCTEVEX0ZPVU5EPSQoc3lzdGVtY3RsIGxpc3QtdW5pdC1maWxlcyB8IGdyZXAgZW5hYmxlZCB8IGdyZXAgcmVkaXMtc2VydmVyKQppZiBbICIkX1JFRElTX1NFUlZJQ0VfRU5BQkxFRF9GT1VORCIgPSAiIiBdOyB0aGVuCiAgX0VOQUJMRV9SRURJU19TRVJWRVJfT1VUUFVUPSQoCiAgICBzdWRvIHN5c3RlbWN0bCBlbmFibGUgcmVkaXMtc2VydmVyLnNlcnZpY2UgMj4mMSA+IC9kZXYvbnVsbAogICkKICBfRU5BQkxFX1JFRElTX1NFUlZFUl9FWElUX0NPREU9JD8KICBpZiBbICRfRU5BQkxFX1JFRElTX1NFUlZFUl9FWElUX0NPREUgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICIgXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVJST1JfRU5BQkxJTkdfU0VSVklDRSIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVhJVF9DT0RFIiAiJF9FTkFCTEVfUkVESVNfU0VSVkVSX0VYSVRfQ09ERSIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVJST1IiICIkX0VOQUJMRV9SRURJU19TRVJWRVJfT1VUUFVUIiA+JjIKICAgIGV4aXQgJF9FTkFCTEVfUkVESVNfU0VSVkVSX0VYSVRfQ09ERQogIGZpOwpmaTsKcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCnByaW50SW5kZW50CnByaW50ZiAiICAgICVzIiAiJF9NU0dfSVRTX1JVTk5JTkciCl9SRURJU19TRVJWSUNFX1NUQVRVUz0kKAogIHN1ZG8gc3lzdGVtY3RsIHNob3cgLXAgQWN0aXZlU3RhdGUgcmVkaXMtc2VydmVyIHwgXAogIGN1dCAtZCc9JyAtZjIgfCBcCiAgdHIgLWQgJ1xuJykKaWYgWyAiJF9SRURJU19TRVJWSUNFX1NUQVRVUyIgIT0gImFjdGl2ZSIgXTsgdGhlbgogIHN1ZG8gc3lzdGVtY3RsIHN0YXJ0IHJlZGlzLXNlcnZlciA+IC9kZXYvbnVsbAogIF9SRURJU19TRVJWSUNFX1NUQVJURUQ9JD8KICBpZiBbICRfUkVESVNfU0VSVklDRV9TVEFSVEVEIC1uZSAwIF07IHRoZW4KICAgIHByaW50ZiAiIFxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIiA+JjIKICAgIHByaW50ZiAiJXNcbiIgIiRfTVNHX1NFUlZJQ0VfQ09VTEROVF9CRV9TVEFSVEVEIiA+JjIKICAgIHByaW50ZiAiJXMgJyVzJy5cbiIgIiRfTVNHX0lUU19PTl9TVEFURSIgIiRfUkVESVNfU0VSVklDRV9TVEFUVVMiID4mMgogICAgZXhpdCAkX1JFRElTX1NFUlZJQ0VfU1RBUlRFRAogIGZpOwpmaTsKcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4i'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
