#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfQ0hFQ0tJTkdfRFJPUEJPWF9FTlY9IkNoZWNraW5nIERyb3Bib3ggZW52aXJvbm1lbnQuLi4iCl9NU0dfRFJPUEJPWF9GT1VORF9JTlNUQUxMRUQ9IkRyb3Bib3ggZm91bmQgaW5zdGFsbGVkIGluIHRoZSBzeXN0ZW0iCl9NU0dfQ0hFQ0tJTkdfSUZfSVNfVVBEQVRFRD0iQ2hlY2tpbmcgaWYgaXMgdXBkYXRlZC4uLiIKX01TR19VUERBVElOR19EUk9QQk9YPSJVcGRhdGluZyBEcm9wYm94IgpfTVNHX1JFVFJJRVZJTkdfTEFTVF9EUk9QQk9YX1ZFUlNJT049IlJldHJpZXZpbmcgbGFzdCBEcm9wYm94IHZlcnNpb24uLi4iCl9NU0dfRE9XTkxPQURJTkdfRFJPUEJPWD0iRG93bmxvYWRpbmcgRHJvcGJveCIKX01TR19JTlNUQUxMSU5HX0RST1BCT1g9Ikluc3RhbGxpbmcgRHJvcGJveCIKSU5ERU5UX1NUUklORz0iIgpfVVBEQVRFPTAKZnVuY3Rpb24gdXNhZ2UgewogICAgY2F0IDw8SEVMUF9VU0FHRQpVc2FnZTogdW5peC9kZWJpYW4vaW5zdGFsbC9kcm9wYm94LyRfU0NSSVBUX0ZJTEVOQU1FIFstaF0gWy1pIFNUUklOR10gWy11XQoKICBJbnN0YWxscyBhbmQvb3Igb3B0aW9uYWxseSB1cGRhdGVzIERyb3Bib3ggcmV0cmlldmluZyByZWxlYXNlIHBhY2thZ2UgZnJvbSB0aGVpciBvZmZpY2lhbCByZXBvc2l0b3J5LgoKT3B0aW9uczoKICAtaCwgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIGhlbHAgbWVzc2FnZSBhbmQgZXhpdC4KICAtaSBTVFJJTkcsIC0taW5kZW50IFNUUklORyAgICAgICAgRWFjaCBsaW5lIG9mIHRoZSBzY3JpcHQgb3V0cHV0IHdpbGwgYmUgcHJlY2VkZWQgd2l0aCB0aGUgc3RyaW5nIGRlZmluZWQgaW4gdGhpcyBwYXJhbWV0ZXIuCiAgLXUsIC0tdXBkYXRlICAgICAgICAgICAgICAgICAgICAgIFVwZ3JhZGVzIERyb3Bib3ggdG8gdGhlIGxhdGVzdCByZWxlYXNlIGF2YWlsYWJsZS4KCkhFTFBfVVNBR0UKICAgIGV4aXQgMQp9CmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC1pfC0taW5kZW50KQogICAgc2hpZnQKICAgIElOREVOVF9TVFJJTkc9IiQxIgogICAgc2hpZnQKICAgIDs7CiAgICAtaHwtLWhlbHApCiAgICBzaGlmdAogICAgdXNhZ2UKICAgIDs7ICAgIAogICAgLXV8LS11cGRhdGUpCiAgICBfVVBEQVRFPTEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KZnVuY3Rpb24gaW5zdGFsbFBhY21hbklmTm90SW5zdGFsbGVkKCkgewogIGlmIFsgIiQoY29tbWFuZCAtdiBwYWNtYW4pIiA9ICIiIF07IHRoZW4KICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgIGN1cmwgLXNMICIkdXJsIiB8IHN1ZG8gYmFzaCAtID4gL2Rldi9udWxsCiAgZmk7Cn0KZnVuY3Rpb24gZ2V0RHJvcGJveExhc3RWZXJzaW9uKCkgewogIF9EUk9QQk9YX0xBU1RfREVCPSQoCiAgICBjdXJsIC1zTCBodHRwczovL2xpbnV4LmRyb3Bib3guY29tL3BhY2thZ2VzL2RlYmlhbi8gfCAgICAgZ3JlcCBhbWQ2NC5kZWIgfCAgICAgdGFpbCAtbiAxIHwgICAgIGN1dCAtZCciJyAtZjIpCiAgX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTj0iJChlY2hvICIkX0RST1BCT1hfTEFTVF9ERUIiIHwgY3V0IC1kJ18nIC1mMikiCn0KZnVuY3Rpb24gZG93bmxvYWREcm9wYm94KCkgewogIF9EUk9QQk9YX0RPV05MT0FEX1VSTD0iaHR0cHM6Ly9saW51eC5kcm9wYm94LmNvbS9wYWNrYWdlcy9kZWJpYW4vJF9EUk9QQk9YX0xBU1RfREVCIgogIGN1cmwgLXNMIC1vICIkX0RST1BCT1hfTEFTVF9ERUIiICIkX0RST1BCT1hfRE9XTkxPQURfVVJMIgp9CmZ1bmN0aW9uIGluc3RhbGxEcm9wYm94KCkgewogIHN1ZG8gZHBrZyAtaSAiJF9EUk9QQk9YX0xBU1RfREVCIiA+IC9kZXYvbnVsbCB8fCBleGl0ICQ/CiAgc3VkbyBybSAtZiAiJF9EUk9QQk9YX0xBU1RfREVCIgp9CmZ1bmN0aW9uIG1haW4oKSB7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19EUk9QQk9YX0VOViIKICBpbnN0YWxsUGFjbWFuSWZOb3RJbnN0YWxsZWQKICBfRFJPUEJPWF9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IGRyb3Bib3gpIgogIGlmIFsgIiRfRFJPUEJPWF9CSU5BUllfUEFUSCIgIT0gIiIgXTsgdGhlbgogICAgX0RST1BCT1hfSU5TVEFMTEVEX1ZFUlNJT049JChkcm9wYm94IHZlcnNpb24gfCB0YWlsIC1uIDEgfCBjdXQgLWQnICcgLWY1KQogICAgcHJpbnRJbmRlbnQKICAgIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0RST1BCT1hfRk9VTkRfSU5TVEFMTEVEIiAgICAgICAiJF9EUk9QQk9YX0lOU1RBTExFRF9WRVJTSU9OIgogICAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgICBpZiBbICRfVVBEQVRFIC1lcSAwIF07IHRoZW4KICAgICAgZXhpdCAwCiAgICBmaTsKICAgIHByaW50SW5kZW50CiAgICBwcmludGYgIiAgJXMiICIkX01TR19DSEVDS0lOR19JRl9JU19VUERBVEVEIgogICAgZ2V0RHJvcGJveExhc3RWZXJzaW9uCiAgICBpZiBbICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIgPSAiJF9EUk9QQk9YX0lOU1RBTExFRF9WRVJTSU9OIiBdOyB0aGVuCiAgICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogICAgICBleGl0IDAKICAgIGVsc2UKICAgICAgcHJpbnRmICIgXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iCiAgICAgIHByaW50SW5kZW50CiAgICAgIHByaW50ZiAiICAlcyAodiVzIC0+IHYlcykuLi4iICIkX01TR19VUERBVElOR19EUk9QQk9YIiAgICAgICAgICIkX0RST1BCT1hfSU5TVEFMTEVEX1ZFUlNJT04iICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIKICAgICAgZG93bmxvYWREcm9wYm94CiAgICAgIGluc3RhbGxEcm9wYm94CiAgICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogICAgICBleGl0IDAKICAgIGZpOwogIGVsc2UKICAgIHByaW50SW5kZW50CiAgICBwcmludGYgIiAgJXMiICIkX01TR19SRVRSSUVWSU5HX0xBU1RfRFJPUEJPWF9WRVJTSU9OIgogICAgZ2V0RHJvcGJveExhc3RWZXJzaW9uCiAgICBwcmludGYgIiAodiVzKSIgIiRfRFJPUEJPWF9DTURfTEFTVF9WRVJTSU9OIgogICAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgICBwcmludEluZGVudAogICAgcHJpbnRmICIgICVzICh2JXMpLi4uIiAiJF9NU0dfRE9XTkxPQURJTkdfRFJPUEJPWCIgIiRfRFJPUEJPWF9DTURfTEFTVF9WRVJTSU9OIgogICAgZG93bmxvYWREcm9wYm94CiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICAgIHByaW50SW5kZW50CiAgICBwcmludGYgIiAgJXMgKHYlcykuLi4iICIkX01TR19JTlNUQUxMSU5HX0RST1BCT1giICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIKICAgIGluc3RhbGxEcm9wYm94CiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBmaTsKfQppZiAocmV0dXJuIDAgMj4vZGV2L251bGwpOyB0aGVuCiAgZXhwb3J0VmFyaWFibGVzCmVsc2UKICBtYWluCmZpOw=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
