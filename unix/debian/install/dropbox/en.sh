#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSBleGVjdXRlZCBhcyBzdXBlcnVzZXIuIgpfTVNHX0NIRUNLSU5HX0RST1BCT1hfRU5WPSJDaGVja2luZyBEcm9wYm94IGVudmlyb25tZW50Li4uIgpfTVNHX0RST1BCT1hfRk9VTkRfSU5TVEFMTEVEPSJEcm9wYm94IGZvdW5kIGluc3RhbGxlZCBpbiB0aGUgc3lzdGVtIgpfTVNHX0NIRUNLSU5HX0lGX0lTX1VQREFURUQ9IkNoZWNraW5nIGlmIGlzIHVwZGF0ZWQuLi4iCl9NU0dfVVBEQVRJTkdfRFJPUEJPWD0iVXBkYXRpbmcgRHJvcGJveCIKX01TR19SRVRSSUVWSU5HX0xBU1RfRFJPUEJPWF9WRVJTSU9OPSJSZXRyaWV2aW5nIGxhc3QgRHJvcGJveCB2ZXJzaW9uLi4uIgpfTVNHX0RPV05MT0FESU5HX0RST1BCT1g9IkRvd25sb2FkaW5nIERyb3Bib3giCl9NU0dfSU5TVEFMTElOR19EUk9QQk9YPSJJbnN0YWxsaW5nIERyb3Bib3giCmlmIFtbICQoL3Vzci9iaW4vaWQgLXUpIC1uZSAwIF1dOyB0aGVuCiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSIiA+JjIKICBleGl0IDEKZmk7Cl9VUERBVEU9MQpJTkRFTlRfU1RSSU5HPSIiCmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC0taW5kZW50KQogICAgc2hpZnQKICAgIElOREVOVF9TVFJJTkc9JDEKICAgIHNoaWZ0CiAgICA7OwogICAgLS1uby11cGRhdGUpCiAgICBfVVBEQVRFPTAKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KcHJpbnRJbmRlbnQKcHJpbnRmICIlc1xuIiAiJF9NU0dfQ0hFQ0tJTkdfRFJPUEJPWF9FTlYiCmlmIFsgIiQoY29tbWFuZCAtdiBwYWNtYW4pIiA9ICIiIF07IHRoZW4KICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKZmk7CmZ1bmN0aW9uIGdldERyb3Bib3hMYXN0VmVyc2lvbigpIHsKICBfRFJPUEJPWF9MQVNUX0RFQj0kKAogICAgY3VybCAtc0wgaHR0cHM6Ly9saW51eC5kcm9wYm94LmNvbS9wYWNrYWdlcy9kZWJpYW4vIHwgXAogICAgZ3JlcCBhbWQ2NC5kZWIgfCBcCiAgICB0YWlsIC1uIDEgfCBcCiAgICBjdXQgLWQnIicgLWYyKQogIF9EUk9QQk9YX0NNRF9MQVNUX1ZFUlNJT049IiQoZWNobyAiJF9EUk9QQk9YX0xBU1RfREVCIiB8IGN1dCAtZCdfJyAtZjIpIgp9CmZ1bmN0aW9uIGRvd25sb2FkRHJvcGJveCgpIHsKICBfRFJPUEJPWF9ET1dOTE9BRF9VUkw9Imh0dHBzOi8vbGludXguZHJvcGJveC5jb20vcGFja2FnZXMvZGViaWFuLyRfRFJPUEJPWF9MQVNUX0RFQiIKICBjdXJsIC1zTCAtbyAiJF9EUk9QQk9YX0xBU1RfREVCIiAiJF9EUk9QQk9YX0RPV05MT0FEX1VSTCIKfQpmdW5jdGlvbiBpbnN0YWxsRHJvcGJveCgpIHsKICBzdWRvIGRwa2cgLWkgIiRfRFJPUEJPWF9MQVNUX0RFQiIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogIHN1ZG8gcm0gLWYgIiRfRFJPUEJPWF9MQVNUX0RFQiIKfQpfRFJPUEJPWF9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IGRyb3Bib3gpIgppZiBbICIkX0RST1BCT1hfQklOQVJZX1BBVEgiICE9ICIiIF07IHRoZW4KICBfRFJPUEJPWF9JTlNUQUxMRURfVkVSU0lPTj0kKGRyb3Bib3ggdmVyc2lvbiB8IHRhaWwgLW4gMSB8IGN1dCAtZCcgJyAtZjUpCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19EUk9QQk9YX0ZPVU5EX0lOU1RBTExFRCIgXAogICAgIiRfRFJPUEJPWF9JTlNUQUxMRURfVkVSU0lPTiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBpZiBbICRfVVBEQVRFIC1lcSAwIF07IHRoZW4KICAgIGV4aXQgMAogIGZpOwogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfQ0hFQ0tJTkdfSUZfSVNfVVBEQVRFRCIKICBnZXREcm9wYm94TGFzdFZlcnNpb24KICBpZiBbICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIgPSAiJF9EUk9QQk9YX0lOU1RBTExFRF9WRVJTSU9OIiBdOyB0aGVuCiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICAgIGV4aXQgMAogIGVsc2UKICAgIHByaW50ZiAiIFxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIgogICAgcHJpbnRJbmRlbnQKICAgIHByaW50ZiAiICAlcyAodiVzIC0+IHYlcykuLi4iICIkX01TR19VUERBVElOR19EUk9QQk9YIiBcCiAgICAgICIkX0RST1BCT1hfSU5TVEFMTEVEX1ZFUlNJT04iICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIKICAgIGRvd25sb2FkRHJvcGJveAogICAgaW5zdGFsbERyb3Bib3gKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGZpOwplbHNlCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19SRVRSSUVWSU5HX0xBU1RfRFJPUEJPWF9WRVJTSU9OIgogIGdldERyb3Bib3hMYXN0VmVyc2lvbgogIHByaW50ZiAiICh2JXMpIiAiJF9EUk9QQk9YX0NNRF9MQVNUX1ZFUlNJT04iCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMgKHYlcykuLi4iICIkX01TR19ET1dOTE9BRElOR19EUk9QQk9YIiAiJF9EUk9QQk9YX0NNRF9MQVNUX1ZFUlNJT04iCiAgZG93bmxvYWREcm9wYm94CiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMgKHYlcykuLi4iICIkX01TR19JTlNUQUxMSU5HX0RST1BCT1giICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIKICBpbnN0YWxsRHJvcGJveAogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgpmaTs='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
