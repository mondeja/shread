#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJFc3RlIHNjcmlwdCBuZWNlc2l0YSBzZXIgZWplY3V0YWRvIGNvbW8gc3VwZXJ1c3VhcmlvLiIKX01TR19DSEVDS0lOR19EUk9QQk9YX0VOVj0iQ29tcHJvYmFuZG8gZW50b3JubyBEcm9wYm94Li4uIgpfTVNHX0RST1BCT1hfRk9VTkRfSU5TVEFMTEVEPSJFbmNvbnRyYWRvIERyb3Bib3ggaW5zdGFsYWRvIGVuIGVsIHNpc3RlbWEiCl9NU0dfQ0hFQ0tJTkdfSUZfSVNfVVBEQVRFRD0iQ29tcHJvYmFuZG8gc2kgZXN0w6EgYWN0dWFsaXphZG8uLi4iCl9NU0dfVVBEQVRJTkdfRFJPUEJPWD0iQWN0dWFsaXphbmRvIERyb3Bib3giCl9NU0dfUkVUUklFVklOR19MQVNUX0RST1BCT1hfVkVSU0lPTj0iT2J0ZW5pZW5kbyBsYSDDumx0aW1hIHZlcnNpw7NuIGRlIERyb3Bib3guLi4iCl9NU0dfRE9XTkxPQURJTkdfRFJPUEJPWD0iRGVzY2FyZ2FuZG8gRHJvcGJveCIKX01TR19JTlNUQUxMSU5HX0RST1BCT1g9Ikluc3RhbGFuZG8gRHJvcGJveCIKaWYgW1sgJCgvdXNyL2Jpbi9pZCAtdSkgLW5lIDAgXV07IHRoZW4KICBwcmludGYgIiVzXG4iICIkX01TR19FWEVDVVRFRF9BU19TVVBFUlVTRVIiID4mMgogIGV4aXQgMQpmaTsKX1VQREFURT0xCklOREVOVF9TVFJJTkc9IiIKZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgICAtLW5vLXVwZGF0ZSkKICAgIF9VUERBVEU9MAogICAgc2hpZnQKICAgIDs7CiAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQpwcmludEluZGVudApwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19EUk9QQk9YX0VOViIKaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICBjdXJsIC1zTCAiJHVybCIgfCBzdWRvIGJhc2ggLSA+IC9kZXYvbnVsbApmaTsKZnVuY3Rpb24gZ2V0RHJvcGJveExhc3RWZXJzaW9uKCkgewogIF9EUk9QQk9YX0xBU1RfREVCPSQoCiAgICBjdXJsIC1zTCBodHRwczovL2xpbnV4LmRyb3Bib3guY29tL3BhY2thZ2VzL2RlYmlhbi8gfCBcCiAgICBncmVwIGFtZDY0LmRlYiB8IFwKICAgIHRhaWwgLW4gMSB8IFwKICAgIGN1dCAtZCciJyAtZjIpCiAgX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTj0iJChlY2hvICIkX0RST1BCT1hfTEFTVF9ERUIiIHwgY3V0IC1kJ18nIC1mMikiCn0KZnVuY3Rpb24gZG93bmxvYWREcm9wYm94KCkgewogIF9EUk9QQk9YX0RPV05MT0FEX1VSTD0iaHR0cHM6Ly9saW51eC5kcm9wYm94LmNvbS9wYWNrYWdlcy9kZWJpYW4vJF9EUk9QQk9YX0xBU1RfREVCIgogIGN1cmwgLXNMIC1vICIkX0RST1BCT1hfTEFTVF9ERUIiICIkX0RST1BCT1hfRE9XTkxPQURfVVJMIgp9CmZ1bmN0aW9uIGluc3RhbGxEcm9wYm94KCkgewogIHN1ZG8gZHBrZyAtaSAiJF9EUk9QQk9YX0xBU1RfREVCIiA+IC9kZXYvbnVsbCB8fCBleGl0ICQ/CiAgc3VkbyBybSAtZiAiJF9EUk9QQk9YX0xBU1RfREVCIgp9Cl9EUk9QQk9YX0JJTkFSWV9QQVRIPSIkKGNvbW1hbmQgLXYgZHJvcGJveCkiCmlmIFsgIiRfRFJPUEJPWF9CSU5BUllfUEFUSCIgIT0gIiIgXTsgdGhlbgogIF9EUk9QQk9YX0lOU1RBTExFRF9WRVJTSU9OPSQoZHJvcGJveCB2ZXJzaW9uIHwgdGFpbCAtbiAxIHwgY3V0IC1kJyAnIC1mNSkKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0RST1BCT1hfRk9VTkRfSU5TVEFMTEVEIiBcCiAgICAiJF9EUk9QQk9YX0lOU1RBTExFRF9WRVJTSU9OIgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGlmIFsgJF9VUERBVEUgLWVxIDAgXTsgdGhlbgogICAgZXhpdCAwCiAgZmk7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19DSEVDS0lOR19JRl9JU19VUERBVEVEIgogIGdldERyb3Bib3hMYXN0VmVyc2lvbgogIGlmIFsgIiRfRFJPUEJPWF9DTURfTEFTVF9WRVJTSU9OIiA9ICIkX0RST1BCT1hfSU5TVEFMTEVEX1ZFUlNJT04iIF07IHRoZW4KICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogICAgZXhpdCAwCiAgZWxzZQogICAgcHJpbnRmICIgXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iCiAgICBwcmludEluZGVudAogICAgcHJpbnRmICIgICVzICh2JXMgLT4gdiVzKS4uLiIgIiRfTVNHX1VQREFUSU5HX0RST1BCT1giIFwKICAgICAgIiRfRFJPUEJPWF9JTlNUQUxMRURfVkVSU0lPTiIgIiRfRFJPUEJPWF9DTURfTEFTVF9WRVJTSU9OIgogICAgZG93bmxvYWREcm9wYm94CiAgICBpbnN0YWxsRHJvcGJveAogICAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgZmk7CmVsc2UKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyIgIiRfTVNHX1JFVFJJRVZJTkdfTEFTVF9EUk9QQk9YX1ZFUlNJT04iCiAgZ2V0RHJvcGJveExhc3RWZXJzaW9uCiAgcHJpbnRmICIgKHYlcykiICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyAodiVzKS4uLiIgIiRfTVNHX0RPV05MT0FESU5HX0RST1BCT1giICIkX0RST1BCT1hfQ01EX0xBU1RfVkVSU0lPTiIKICBkb3dubG9hZERyb3Bib3gKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyAodiVzKS4uLiIgIiRfTVNHX0lOU1RBTExJTkdfRFJPUEJPWCIgIiRfRFJPUEJPWF9DTURfTEFTVF9WRVJTSU9OIgogIGluc3RhbGxEcm9wYm94CiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCmZpOw=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
