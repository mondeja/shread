#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSBleGVjdXRlZCBhcyBzdXBlcnVzZXIuIgpfTVNHX0FMUkVBRFlfSU5TVEFMTEVEPSJpcyBhbHJlYWR5IGluc3RhbGxlZCIKX01TR19DSEVDS0lOR19BVE9NPSJDaGVja2luZyBBdG9tLi4uIgpfTVNHX0VSUk9SX09CVEFJTklOR19BVE9NX1BVQkxJQ19LRVk9IkFuIGVycm9yIGhhcHBlbiByZXJpZXZpbmcgQXRvbSBwdWJsaWMga2V5OiIKX01TR19BRERJTkdfUkVQTz0iQWRkaW5nIHJlcG9zaXRvcnkuLi4iCl9NU0dfVVBEQVRJTkdfUEFDS0FHRVM9IlVwZGF0aW5nIHBhY2thZ2VzLi4uIgpfTVNHX0FUT01fRk9VTkQ9IkF0b20gZm91bmQiCl9NU0dfUlVOTklOR19JTlNUQUxMQVRJT05fU0NSSVBUPSJSdW5uaW5nIGluc3RhbGxhdGlvbiBzY3JpcHQuLi4iCl9NU0dfRVJST1JfSU5TVEFMTElOR19BVE9NPSJBbiBlcnJvciBoYXBwZW4gaW5zdGFsbGluZyBBdG9tIgppZiBbWyAkKC91c3IvYmluL2lkIC11KSAtbmUgMCBdXTsgdGhlbgogIHByaW50ZiAiJXNcbiIgIiRfTVNHX0VYRUNVVEVEX0FTX1NVUEVSVVNFUiIgPiYyCiAgZXhpdCAxCmZpOwpJTkRFTlRfU1RSSU5HPSIiCmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC0taW5kZW50KQogICAgc2hpZnQKICAgIElOREVOVF9TVFJJTkc9JDEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KZnVuY3Rpb24gaW5zdGFsbEF0b20oKSB7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19BVE9NIgogIGlmIFsgIiQoY29tbWFuZCAtdiBwYWNtYW4pIiA9ICIiIF07IHRoZW4KICAgIGlmIFsgLXogIiRfU0NSSVBUX0ZJTEVOQU1FIiBdOyB0aGVuCiAgICAgIGZpbGVwYXRoPSJzcmMvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC9tYWluLnNoIgogICAgICBiYXNoICIkZmlsZXBhdGgiID4gL2Rldi9udWxsCiAgICBlbHNlCiAgICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgICAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKICAgIGZpOwogIGZpOwogIElOU1RBTExBVElPTl9ERVBFTkRFTkNJRVM9KAogICAgIndnZXQiCiAgICAianEiCiAgICAiZ251cGcyIgogICkKICBmb3IgREVQIGluICIke0lOU1RBTExBVElPTl9ERVBFTkRFTkNJRVNbQF19IjsgZG8KICAgIGlmIFtbICIkKHN1ZG8gcGFjbWFuIC1RaSAiJERFUCIgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICAgICAgc3VkbyBwYWNtYW4gLVMgLS0gLXkgIiRERVAiID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KICAgIGZpOwogIGRvbmU7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMuLi4iICIkX01TR19BRERJTkdfUkVQTyIKICBTSUdOX0FUT01fR1BHX0tFWV9TVERFUlI9JCgKICAgIHdnZXQgLXFPIC0gaHR0cHM6Ly9wYWNrYWdlY2xvdWQuaW8vQXRvbUVkaXRvci9hdG9tL2dwZ2tleSB8IFwKICAgIHN1ZG8gYXB0LWtleSBhZGQgLSAyPiYxID4gL2Rldi9udWxsKQogIFNJR05fQVRPTV9HUEdfS0VZX0VYSVRfQ09ERT0kPwogIGlmIFsgJFNJR05fQVRPTV9HUEdfS0VZX0VYSVRfQ09ERSAtbmUgMCBdOyB0aGVuCiAgICBwcmludGYgIiBcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXNcbiIgIiRfTVNHX0VSUk9SX09CVEFJTklOR19BVE9NX1BVQkxJQ19LRVkiID4mMgogICAgcHJpbnRmICIlc1xuIiAiJFNJR05fQVRPTV9HUEdfS0VZX1NUREVSUiIgPiYyCiAgICBleGl0ICRTSUdOX0FUT01fR1BHX0tFWV9FWElUX0NPREUKICBmaTsKICBBUkNIPSJhbWQ2NCIKICBjYXNlICQodW5hbWUgLW0pIGluCiAgICAgIGkzODYpICAgQVJDSD0iMzg2IiA7OwogICAgICBpNjg2KSAgIEFSQ0g9IjM4NiIgOzsKICAgICAgeDg2XzY0KSBBUkNIPSJhbWQ2NCIgOzsKICAgICAgYXJtKSAgICBkcGtnIC0tcHJpbnQtYXJjaGl0ZWN0dXJlIHwgZ3JlcCAtcSAiYXJtNjQiICYmIEFSQ0g9ImFybTY0IiB8fCBBUkNIPSJhcm0iIDs7CiAgZXNhYwogIGVjaG8gXAogICAgImRlYiBbYXJjaD0ke0FSQ0h9XSBodHRwczovL3BhY2thZ2VjbG91ZC5pby9BdG9tRWRpdG9yL2F0b20vYW55LyBhbnkgbWFpbiIgXAogICAgfCBzdWRvIHRlZSAvZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9hdG9tLmxpc3QKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyIgIiRfTVNHX1VQREFUSU5HX1BBQ0tBR0VTIgogIHN1ZG8gcGFjbWFuIHVwZGF0ZSA+IC9kZXYvbnVsbAogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIEFUT01fVkVSU0lPTj0iJChwYWNtYW4gLVNpIGF0b20gfCBncmVwIFZlcnNpb246IHwgaGVhZCAtbiAxIHwgY3V0IC1kICcgJyAtZjIpIgogIGlmIFsgIiRBVE9NX1ZFUlNJT04iICE9ICIiIF07IHRoZW4KICAgIHByaW50SW5kZW50CiAgICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19BVE9NX0ZPVU5EIiAiJEFUT01fVkVSU0lPTiIKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGZpOwogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfUlVOTklOR19JTlNUQUxMQVRJT05fU0NSSVBUIgogIElOU1RBTExfQVRPTV9TVERFUlI9IiQoc3VkbyBwYWNtYW4gLVMgLS0gLXkgYXRvbSA+IC9kZXYvbnVsbCkiCiAgSU5TVEFMTF9BVE9NX0VYSVRfQ09ERT0kPwogIGlmIFsgIiRJTlNUQUxMX0FUT01fRVhJVF9DT0RFIiAtbmUgMCBdOyB0aGVuCiAgICBwcmludGYgIiBcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXMiICIkX01TR19FUlJPUl9JTlNUQUxMSU5HX0FUT00iID4mMgogICAgaWYgWyAiJEFUT01fVkVSU0lPTiIgIT0gIiIgXTsgdGhlbgogICAgICBwcmludGYgIiAodiVzKSIgIiRBVE9NX1ZFUlNJT04iID4mMgogICAgZmk7CiAgICBwcmludGYgIjpcbiVzXG4iICIkSU5TVEFMTF9BVE9NX1NUREVSUiIgPiYyCiAgICBleGl0ICRJTlNUQUxMX0FUT01fRVhJVF9DT0RFCiAgZmk7CiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCn0KZnVuY3Rpb24gcHJpbnRBdG9tSW5zdGFsbGVkTXNnKCkgewogIHByaW50SW5kZW50CiAgQVRPTV9WRVJTSU9OPSQoCiAgICBhcG0gLXYgfCBcCiAgICBzZWQgLW4gNHAgfCBcCiAgICBjdXQgLWQnICcgLWYyIHwgXAogICAgc2VkIC1yICJzL1x4MUJcWyhbMC05XXsxLDJ9KDtbMC05XXsxLDJ9KT8pP1ttR0tdLy9nIikKICBwcmludGYgIkF0b20gdiVzICVzIiAiJEFUT01fVkVSU0lPTiIgIiRfTVNHX0FMUkVBRFlfSU5TVEFMTEVEIgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgp9CmZ1bmN0aW9uIG1haW4oKSB7CiAgQVRPTV9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IGF0b20pIgogIGlmIFsgIiRBVE9NX0JJTkFSWV9QQVRIIiAhPSAiIiBdOyB0aGVuCiAgICBwcmludEF0b21JbnN0YWxsZWRNc2cKICBlbHNlCiAgICBpbnN0YWxsQXRvbQogIGZpOwp9Cm1haW4K'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
