#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJFc3RlIHNjcmlwdCBuZWNlc2l0YSBzZXIgZWplY3V0YWRvIGNvbW8gc3VwZXJ1c3VhcmlvLiIKX01TR19BTFJFQURZX0lOU1RBTExFRD0ieWEgc2UgZW5jdWVudHJhIGluc3RhbGFkbyIKX01TR19DSEVDS0lOR19BVE9NPSJDb21wcm9iYW5kbyBBdG9tIgpfTVNHX0VSUk9SX09CVEFJTklOR19BVE9NX1BVQkxJQ19LRVk9Ik9jdXJyacOzIHVuIGVycm9yIG9idGVuaWVuZG8gbGEgY2xhdmUgcMO6YmxpY2EgZGUgQXRvbSIKX01TR19BRERJTkdfUkVQTz0iQcOxYWRpZW5kbyByZXBvc2l0b3JpbyIKX01TR19VUERBVElOR19QQUNLQUdFUz0iQWN0dWFsaXphbmRvIHBhcXVldGVzLi4uIgpfTVNHX0FUT01fRk9VTkQ9IkF0b20gZW5jb250cmFkbyIKX01TR19SVU5OSU5HX0lOU1RBTExBVElPTl9TQ1JJUFQ9IkVqZWN1dGFuZG8gc2NyaXB0IGRlIGluc3RhbGFjacOzbiIKX01TR19FUlJPUl9JTlNUQUxMSU5HX0FUT009Ik9jdXJyacOzIHVuIGVycm9yIGluc3RhbGFuZG8gQXRvbSIKaWYgW1sgJCgvdXNyL2Jpbi9pZCAtdSkgLW5lIDAgXV07IHRoZW4KICBwcmludGYgIiVzXG4iICIkX01TR19FWEVDVVRFRF9BU19TVVBFUlVTRVIiID4mMgogIGV4aXQgMQpmaTsKSU5ERU5UX1NUUklORz0iIgpmb3IgYXJnIGluICIkQCI7IGRvCiAgY2FzZSAkYXJnIGluCiAgICAtLWluZGVudCkKICAgIHNoaWZ0CiAgICBJTkRFTlRfU1RSSU5HPSQxCiAgICBzaGlmdAogICAgOzsKICBlc2FjCmRvbmUKZnVuY3Rpb24gcHJpbnRJbmRlbnQoKSB7CiAgcHJpbnRmICIlcyIgIiRJTkRFTlRfU1RSSU5HIgp9CmZ1bmN0aW9uIGluc3RhbGxBdG9tKCkgewogIHByaW50SW5kZW50CiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfQ0hFQ0tJTkdfQVRPTSIKICBpZiBbICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIgPSAiIiBdOyB0aGVuCiAgICBpZiBbIC16ICIkX1NDUklQVF9GSUxFTkFNRSIgXTsgdGhlbgogICAgICBmaWxlcGF0aD0ic3JjL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvbWFpbi5zaCIKICAgICAgYmFzaCAiJGZpbGVwYXRoIiA+IC9kZXYvbnVsbAogICAgZWxzZQogICAgICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgICAgIGN1cmwgLXNMICIkdXJsIiB8IHN1ZG8gYmFzaCAtID4gL2Rldi9udWxsCiAgICBmaTsKICBmaTsKICBJTlNUQUxMQVRJT05fREVQRU5ERU5DSUVTPSgKICAgICJ3Z2V0IgogICAgImpxIgogICkKICBmb3IgREVQIGluICIke0lOU1RBTExBVElPTl9ERVBFTkRFTkNJRVNbQF19IjsgZG8KICAgIGlmIFtbICIkKHN1ZG8gcGFjbWFuIC1RaSAiJERFUCIgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICAgICAgc3VkbyBwYWNtYW4gLVMgIiRERVAiID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KICAgIGZpOwogIGRvbmU7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMuLi4iICIkX01TR19BRERJTkdfUkVQTyIKICBTSUdOX0FUT01fR1BHX0tFWV9TVERFUlI9JCgKICAgIHdnZXQgLXFPIC0gaHR0cHM6Ly9wYWNrYWdlY2xvdWQuaW8vQXRvbUVkaXRvci9hdG9tL2dwZ2tleSB8IFwKICAgIHN1ZG8gYXB0LWtleSBhZGQgLSAyPiYxID4gL2Rldi9udWxsKQogIFNJR05fQVRPTV9HUEdfS0VZX0VYSVRfQ09ERT0kPwogIGlmIFsgJFNJR05fQVRPTV9HUEdfS0VZX0VYSVRfQ09ERSAtbmUgMCBdOyB0aGVuCiAgICBwcmludGYgIiBcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXNcbiIgIiRfTVNHX0VSUk9SX09CVEFJTklOR19BVE9NX1BVQkxJQ19LRVkiID4mMgogICAgcHJpbnRmICIlc1xuIiAiJFNJR05fQVRPTV9HUEdfS0VZX1NUREVSUiIgPiYyCiAgICBleGl0ICRTSUdOX0FUT01fR1BHX0tFWV9FWElUX0NPREUKICBmaTsKICBBUkNIPSJhbWQ2NCIKICBjYXNlICQodW5hbWUgLW0pIGluCiAgICAgIGkzODYpICAgQVJDSD0iMzg2IiA7OwogICAgICBpNjg2KSAgIEFSQ0g9IjM4NiIgOzsKICAgICAgeDg2XzY0KSBBUkNIPSJhbWQ2NCIgOzsKICAgICAgYXJtKSAgICBkcGtnIC0tcHJpbnQtYXJjaGl0ZWN0dXJlIHwgZ3JlcCAtcSAiYXJtNjQiICYmIEFSQ0g9ImFybTY0IiB8fCBBUkNIPSJhcm0iIDs7CiAgZXNhYwogIGVjaG8gXAogICAgImRlYiBbYXJjaD0ke0FSQ0h9XSBodHRwczovL3BhY2thZ2VjbG91ZC5pby9BdG9tRWRpdG9yL2F0b20vYW55LyBhbnkgbWFpbiIgXAogICAgfCBzdWRvIHRlZSAvZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9hdG9tLmxpc3QKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyIgIiRfTVNHX1VQREFUSU5HX1BBQ0tBR0VTIgogIHN1ZG8gcGFjbWFuIHVwZGF0ZSA+IC9kZXYvbnVsbAogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIEFUT01fVkVSU0lPTj0iJChwYWNtYW4gLVFpIGF0b20gfCBncmVwIFZlcnNpb24gfCBjdXQgLWQnICcgLWYyKSIKICBpZiBbICIkQVRPTV9WRVJTSU9OIiAhPSAiIiBdOyB0aGVuCiAgICBwcmludEluZGVudAogICAgcHJpbnRmICIgICVzICh2JXMpIiAiJF9NU0dfQVRPTV9GT1VORCIgIiRBVE9NX1ZFUlNJT04iCiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBmaTsKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyIgIiRfTVNHX1JVTk5JTkdfSU5TVEFMTEFUSU9OX1NDUklQVCIKICBJTlNUQUxMX0FUT01fU1RERVJSPSIkKHN1ZG8gcGFjbWFuIC1TIGF0b20gPiAvZGV2L251bGwpIgogIElOU1RBTExfQVRPTV9FWElUX0NPREU9JD8KICBpZiBbICIkSU5TVEFMTF9BVE9NX0VYSVRfQ09ERSIgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICIgXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzIiAiJF9NU0dfRVJST1JfSU5TVEFMTElOR19BVE9NIiA+JjIKICAgIGlmIFsgIiRBVE9NX1ZFUlNJT04iICE9ICIiIF07IHRoZW4KICAgICAgcHJpbnRmICIgKHYlcykiICIkQVRPTV9WRVJTSU9OIiA+JjIKICAgIGZpOwogICAgcHJpbnRmICI6XG4lc1xuIiAiJElOU1RBTExfQVRPTV9TVERFUlIiID4mMgogICAgZXhpdCAkSU5TVEFMTF9BVE9NX0VYSVRfQ09ERQogIGZpOwogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgp9CmZ1bmN0aW9uIHByaW50QXRvbUluc3RhbGxlZE1zZygpIHsKICBwcmludEluZGVudAogIEFUT01fVkVSU0lPTj0kKAogICAgYXBtIC12IHwgXAogICAgc2VkIC1uIDRwIHwgXAogICAgY3V0IC1kJyAnIC1mMiB8IFwKICAgIHNlZCAtciAicy9ceDFCXFsoWzAtOV17MSwyfSg7WzAtOV17MSwyfSk/KT9bbUdLXS8vZyIpCiAgcHJpbnRmICJBdG9tIHYlcyAlcyIgIiRBVE9NX1ZFUlNJT04iICIkX01TR19BTFJFQURZX0lOU1RBTExFRCIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKfQpmdW5jdGlvbiBtYWluKCkgewogIEFUT01fQklOQVJZX1BBVEg9IiQoY29tbWFuZCAtdiBhdG9tKSIKICBpZiBbICIkQVRPTV9CSU5BUllfUEFUSCIgIT0gIiIgXTsgdGhlbgogICAgcHJpbnRBdG9tSW5zdGFsbGVkTXNnCiAgZWxzZQogICAgaW5zdGFsbEF0b20KICBmaTsKfQptYWluCg=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
