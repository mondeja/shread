#!/bin/bash
source <(printf 'IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfTVNHX0VYRUNVVEVEX0FTX1NVUEVSVVNFUj0iVGhpcyBzY3JpcHQgbmVlZHMgdG8gYmUgZXhlY3V0ZWQgYXMgc3VwZXJ1c2VyLiIKX01TR19TRVRUSU5HX1VQX1BZM19FQ09TWVNURU09IlNldHRpbmcgdXAgUHl0aG9uMyBlY29zeXN0ZW0uLi4iCl9NU0dfSU5TVEFMTElOR19CQVNFX1BBQ0tBR0U9Ikluc3RhbGxpbmcgYmFzZSBwYWNrYWdlIgpfTVNHX0ZPVU5EX1BZM19JTlNUQUxMRUQ9IkZvdW5kIFB5dGhvbjMgaW5zdGFsbGVkIGluIHRoZSBzeXN0ZW0iCl9NU0dfQ0hFQ0tJTkdfQURESVRJT05BTF9QWTNfUEFDS0FHRVM9IkNoZWNraW5nIGFkZGl0aW9uYWwgUHl0aG9uIHBhY2thZ2VzLi4uIgpfTVNHX1VQREFUSU5HX0dMT0JBTF9QWTNfTElCUkFSSUVTPSJVcGRhdGluZyBnbG9iYWwgUHl0aG9uMyBsaWJyYXJpZXMuLi4iCmlmIFtbICQoL3Vzci9iaW4vaWQgLXUpIC1uZSAwIF1dOyB0aGVuCiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSIiA+JjIKICBleGl0IDEKZmk7Cl9VUEdSQURFX1BZM19HTE9CQUxfTElCUz0xCl9QUkVQRU5EX1NURE9VVF9TVFJJTkc9IiIKZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLS1uby11cGdyYWRlLXB5My1nbG9iYWwtbGlicykKICAgIF9VUEdSQURFX1BZM19HTE9CQUxfTElCUz0wCiAgICBzaGlmdAogICAgOzsKICAgIC0tcHJlcGVuZC1zdGRvdXQpCiAgICBzaGlmdAogICAgX1BSRVBFTkRfU1RET1VUX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50UHJlcGVuZGVkU3Rkb3V0KCkgewogIHByaW50ZiAiJXMiICIkX1BSRVBFTkRfU1RET1VUX1NUUklORyIKfQppZiBbWyAiJChzdWRvIGRwa2cgLXMgZGViY29uZi11dGlscyAyPiAvZGV2L251bGwgfCBncmVwIFN0YXR1cykiICE9ICJTdGF0dXM6IGluc3RhbGwgb2sgaW5zdGFsbGVkIiBdXTsgdGhlbgogIHN1ZG8gYXB0LWdldCBpbnN0YWxsIC15IC1xcXEgZGViY29uZi11dGlscyA+IC9kZXYvbnVsbApmaTsKaWYgWyAiJChjb21tYW5kIC12IGRlYmNvbmYtZ2V0LXNlbGVjdGlvbnMpIiAhPSAiIiBdOyB0aGVuCiAgX09SSUdJTkFMX0RFQkNPTkZfRlJPTlRFTkQ9JCgKICAgIHN1ZG8gZGViY29uZi1nZXQtc2VsZWN0aW9ucyB8IFwKICAgIGdyZXAgZGViY29uZi9mcm9udGVuZCB8IFwKICAgIGF3ayAne3ByaW50ICQ0fScpCiAgc3VkbyBzaCAtYyAiZWNobyAnZGViY29uZiBkZWJjb25mL2Zyb250ZW5kIHNlbGVjdCBOb25pbnRlcmFjdGl2ZScgfCBkZWJjb25mLXNldC1zZWxlY3Rpb25zIgpmaTsKaWYgWyAteiAiJFVOSVhfRElTVFJPIiBdOyB0aGVuCiAgaWYgW1sgIiQoc3VkbyBkcGtnIC1zIGN1cmwgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICAgIHN1ZG8gYXB0LWdldCBpbnN0YWxsIC15IC1xcXEgY3VybCA+IC9kZXYvbnVsbAogIGZpOwogIHNvdXJjZSA8KGN1cmwgLXNMIGh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy91dGlsL2dldC1kaXN0cm8uc2gpCmZpOwpwcmludFByZXBlbmRlZFN0ZG91dApwcmludGYgIiVzXG4iICIkX01TR19TRVRUSU5HX1VQX1BZM19FQ09TWVNURU0iCnByaW50UHJlcGVuZGVkU3Rkb3V0ClBZM19CSU5BUllfRklMRVBBVEg9IiQoY29tbWFuZCAtdiBweXRob24zKSIKaWYgWyAiJFBZM19CSU5BUllfRklMRVBBVEgiID0gIiIgXTsgdGhlbgogIF9QWVRIT05fU1RBQkxFX1BBQ0tBR0VfVkVSU0lPTj0kKAogICAgYXB0LWNhY2hlIHBvbGljeSBweXRob24zLWRldiB8IGdyZXAgLVBvICcoXGQrXC4pK1xkKycgfCBoZWFkIC1uIDEpCiAgcHJpbnRmICIgICVzIiAiJF9NU0dfSU5TVEFMTElOR19CQVNFX1BBQ0tBR0UiCiAgaWYgWyAiJF9QWVRIT05fU1RBQkxFX1BBQ0tBR0VfVkVSU0lPTiIgIT0gIiIgXTsgdGhlbgoJICBwcmludGYgIiAodiVzKSIgIiRfUFlUSE9OX1NUQUJMRV9QQUNLQUdFX1ZFUlNJT04iCiAgZmk7CiAgcHJpbnRmICIuLi4iCglzdWRvIGFwdC1nZXQgaW5zdGFsbCAteSAtcXFxIHB5dGhvbjMtZGV2ID4gL2Rldi9udWxsCiAgX1BZVEhPTl9WRVJTSU9OPSIkKCIkUFkzX0JJTkFSWV9GSUxFUEFUSCIgLS12ZXJzaW9uIHwgY3V0IC1jNy0xMiB8IHRyIC1kICcgJykiCmVsc2UKICBfUFlUSE9OX1ZFUlNJT049IiQoIiRQWTNfQklOQVJZX0ZJTEVQQVRIIiAtLXZlcnNpb24gfCBjdXQgLWM3LTEyIHwgdHIgLWQgJyAnKSIKCXByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0ZPVU5EX1BZM19JTlNUQUxMRUQiICIkX1BZVEhPTl9WRVJTSU9OIgpmaTsKcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCklOU1RBTExBVElPTl9QQUNLQUdFUz0oCiAgInB5dGhvbi1kZXYiCiAgInB5dGhvbjMtZGV2IgogICJweXRob24tcGlwIgogICJweXRob24zLXBpcCIKICAicHl0aG9uMy1zZXR1cHRvb2xzIgogICJweXRob24zLXRlc3RyZXNvdXJjZXMiCiAgImxpYnhtbDItdXRpbHMiCiAgInB5dGhvbi1seG1sIgogICJweXRob24zLWx4bWwiCiAgInB5dGhvbi1udW1weSIKICAicHl0aG9uMy1udW1weSIKKQppZiBbICIkVU5JWF9ESVNUUk8iID0gInVidW50dSIgXTsgdGhlbgogIFVCVU5UVV9WRVJTSU9OX0NPREVOQU1FPSQocHJpbnRmICIlcyIgIiQobHNiX3JlbGVhc2UgLXJzIHwgdHIgLWQgJ1xuJyksJChsc2JfcmVsZWFzZSAtY3MgfCB0ciAtZCAnXG4nKSIgMj4mMSkKICBVQlVOVFVfVkVSU0lPTj0kKHByaW50ZiAiJXMiICIkVUJVTlRVX1ZFUlNJT05fQ09ERU5BTUUiIHwgY3V0IC1kJywnIC1mMSB8IHRyIC1kICciJykKICBVQlVOVFVfVkVSU0lPTl9NQUpPUj0kKHByaW50ZiAiJXMiICIkVUJVTlRVX1ZFUlNJT04iIHwgY3V0IC1kJy4nIC1mMSkKICBpZiBbICIkVUJVTlRVX1ZFUlNJT05fTUFKT1IiIC1nZSAxOCBdOyB0aGVuCiAgICBJTlNUQUxMQVRJT05fUEFDS0FHRVMrPSgKICAgICAgInB5dGhvbjMtZGlzdHV0aWxzIgogICAgKQogIGZpOwpmaTsKcHJpbnRQcmVwZW5kZWRTdGRvdXQKcHJpbnRmICIgICVzXG4iICIkX01TR19DSEVDS0lOR19BRERJVElPTkFMX1BZM19QQUNLQUdFUyIKZm9yIERFUCBpbiAiJHtJTlNUQUxMQVRJT05fUEFDS0FHRVNbQF19IjsgZG8KICBwcmludFByZXBlbmRlZFN0ZG91dAogIHByaW50ZiAiICAgICVzIiAiJERFUCIKICBpZiBbWyAiJChkcGtnIC1zICIkREVQIiAyPiAvZGV2L251bGwgfCBncmVwIFN0YXR1cykiICE9ICJTdGF0dXM6IGluc3RhbGwgb2sgaW5zdGFsbGVkIiBdXTsgdGhlbgogICAgc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkgLXFxcSAiJERFUCIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogIGZpOwogIF9ERVBfVkVSU0lPTj0kKGFwdC1jYWNoZSBwb2xpY3kgIiRERVAiIHwgZ3JlcCAtUG8gIihcZCtcLikrXGQrIiB8IGhlYWQgLW4gMSkKICBpZiBbICIkX0RFUF9WRVJTSU9OIiAhPSAiIiBdOyB0aGVuCiAgICBwcmludGYgIiAodiVzKSIgIiRfREVQX1ZFUlNJT04iCiAgZmk7CiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCmRvbmUKVVNFUl9IT01FPSIkKGdldGVudCBwYXNzd2QgIiRTVURPX1VTRVIiIHwgY3V0IC1kOiAtZjYpIgppZiBbIC1kICIkSE9NRS8uY2FjaGUvcGlwLyIgXTsgdGhlbgogIF9QSVBfQ0FDSEVfRklMRVBBVEg9IiRVU0VSX0hPTUUvLmNhY2hlL3BpcC8iCiAgaWYgWyAtZiAiJF9QSVBfQ0FDSEVfRklMRVBBVEgiIF07IHRoZW4KICAgIHN1ZG8gY2hvd24gLVIgIiRTVURPX1VTRVIiICIkX1BJUF9DQUNIRV9GSUxFUEFUSCIKICBmaTsKZmk7CmlmIFsgIiQoY29tbWFuZCAtdiBweXRob24yKSIgIT0gIiIgXTsgdGhlbgogIHN1ZG8gcHl0aG9uMiAtbSBwaXAgaW5zdGFsbCAtcXEgcGlwPT0yMC4wLjIKZmk7CmlmIFsgJF9VUEdSQURFX1BZM19HTE9CQUxfTElCUyAtZXEgMSBdOyB0aGVuCiAgcHJpbnRQcmVwZW5kZWRTdGRvdXQKICBwcmludGYgIiAgJXNcbiIgIiRfTVNHX1VQREFUSU5HX0dMT0JBTF9QWTNfTElCUkFSSUVTIgogIEdMT0JBTF9SRUNPTU1FTkRFRF9MSUJSQVJJRVM9KAogICAgInBpcCIKICAgICJ2aXJ0dWFsZW52IgogICAgInNldHVwdG9vbHMiCiAgICAidGVzdHJlc291cmNlcyIKICApCiAgZm9yIExJQiBpbiAiJHtHTE9CQUxfUkVDT01NRU5ERURfTElCUkFSSUVTW0BdfSI7IGRvCiAgICBwcmludFByZXBlbmRlZFN0ZG91dAogICAgcHJpbnRmICIgICAgJXMiICIkTElCIgogICAgX0dFVF9WRVJTSU9OX0VYRUNfU1RSPSIKaW1wb3J0IHN5czsKdHJ5OiBpbXBvcnQgJExJQiBhcyBsOwpleGNlcHQgSW1wb3J0RXJyb3IgYXMgZXJyOiBzeXMuZXhpdCg3NzcpOwpwcmludChsLl9fdmVyc2lvbl9fIGlmIGlzaW5zdGFuY2UobC5fX3ZlcnNpb25fXywgc3RyKSBlbHNlIFwKICAnLicuam9pbihbc3RyKHYpIGZvciB2IGluIGwuX192ZXJzaW9uX19dWzozXSksIGVuZD0nJyk7CiIKICAgIF9MSUJfTE9DQUxfVkVSU0lPTj0iJCgiJFBZM19CSU5BUllfRklMRVBBVEgiIC1jICIkX0dFVF9WRVJTSU9OX0VYRUNfU1RSIikiCiAgICBfTElCX0xPQ0FMX1ZFUlNJT05fRVhJVF9DT0RFPSQ/CiAgICBpZiBbICRfTElCX0xPQ0FMX1ZFUlNJT05fRVhJVF9DT0RFIC1lcSA3NzcgXTsgdGhlbgogICAgCXN1ZG8gLUggIiRQWTNfQklOQVJZX0ZJTEVQQVRIIiAtbSBwaXAgaW5zdGFsbCAtVSAtLXF1aWV0ICIkTElCIgogICAgZWxzZQogICAgICBwcmludGYgIiAoIgogICAgICBpZiBbICIkX0xJQl9MT0NBTF9WRVJTSU9OIiAhPSAiIiBdOyB0aGVuCiAgICAgICAgcHJpbnRmICJ2JXMiICIkX0xJQl9MT0NBTF9WRVJTSU9OIgogICAgICBmaTsKICAgICAgX0xJQl9MQVNUX1BZUElfVkVSU0lPTj0kKAogICAgICAgIHhtbGxpbnQgLS1odG1sIC0teHBhdGggIi8vYVtsYXN0KCldL3RleHQoKSAiIFwKICAgICAgICAgIDwoY3VybCAtc0wgImh0dHBzOi8vcHlwaS5vcmcvc2ltcGxlLyRMSUIvIikgfCBcCiAgICAgICAgICBncmVwIC1QbyAiKFxkK1wuKStcZCtcdyoiKQogICAgICAgIGlmIFsgIiRfTElCX0xBU1RfUFlQSV9WRVJTSU9OIiAhPSAiJF9MSUJfTE9DQUxfVkVSU0lPTiIgXTsgdGhlbgogICAgICAgICAgaWYgWyAiJF9MSUJfTE9DQUxfVkVSU0lPTiIgIT0gIiIgXTsgdGhlbgogICAgICAgICAgICBwcmludGYgIiAtPiAiCiAgICAgICAgICBmaTsKICAgICAgICAgIHByaW50ZiAidiVzKS4uLiIgIiRfTElCX0xBU1RfUFlQSV9WRVJTSU9OIgogICAgICAgICAgX2xpYl9lcXVhbF92ZXJzaW9uPSIkTElCPT0kX0xJQl9MQVNUX1BZUElfVkVSU0lPTiIKICAgICAgICAgIHN1ZG8gLUggIiRQWTNfQklOQVJZX0ZJTEVQQVRIIiAtbSBwaXAgaW5zdGFsbCAtVSAtcXEgIiRfbGliX2VxdWFsX3ZlcnNpb24iCiAgICAgICAgZWxzZQogICAgICAgICAgcHJpbnRmICIpIgogICAgICAgIGZpOwogICAgZmk7CiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBkb25lCmZpOwppZiBbICIkKGNvbW1hbmQgLXYgZGViY29uZi1nZXQtc2VsZWN0aW9ucykiICE9ICIiIF07IHRoZW4KICBzdWRvIHNoIC1jICJlY2hvICdkZWJjb25mIGRlYmNvbmYvZnJvbnRlbmQgc2VsZWN0ICRfT1JJR0lOQUxfREVCQ09ORl9GUk9OVEVORCcgfCBkZWJjb25mLXNldC1zZWxlY3Rpb25zIgpmaTsK' | base64 -d)
