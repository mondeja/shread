#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfSU5TVEFMTElOR19DSVJDTEVDST0iSW5zdGFsbGluZyBDaXJjbGVDSSIKX01TR19VUERBVElOR19DSVJDTEVDST0iVXBkYXRpbmcgQ2lyY2xlQ0kiCl9NU0dfRk9VTkRfQ0lSQ0xFQ0lfSU5TVEFMTEVEPSJDaXJjbGVDSSBmb3VuZCBpbnN0YWxsZWQiCklOREVOVF9TVFJJTkc9IiIKZnVuY3Rpb24gdXNhZ2UgewogICAgY2F0IDw8SEVMUF9VU0FHRQpVc2FnZTogdW5peC9kZWJpYW4vaW5zdGFsbC9jaXJjbGVjaS8kX1NDUklQVF9GSUxFTkFNRSBbLWhdIFstaSBTVFJJTkddIAoKICBEb3dubG9hZHMgb3IgdXBncmFkZSBDaXJjbGVDSSBiaW5hcnkuCgpPcHRpb25zOgogIC1oLCAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0LgogIC1pIFNUUklORywgLS1pbmRlbnQgU1RSSU5HICAgICAgICBFYWNoIGxpbmUgb2YgdGhlIHNjcmlwdCBvdXRwdXQgd2lsbCBiZSBwcmVjZWRlZCB3aXRoIHRoZSBzdHJpbmcgZGVmaW5lZCBpbiB0aGlzIHBhcmFtZXRlci4KSEVMUF9VU0FHRQogICAgZXhpdCAxCn0KZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLWl8LS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0iJDEiCiAgICBzaGlmdAogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsgICAgICBlc2FjCmRvbmUKaWYgWyAiJEAiICE9ICIiIF07IHRoZW4KICBwcmludGYgIllFUyIgIickQCciCmZpOwpleGl0CmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQpmdW5jdGlvbiBpbnN0YWxsUGFjbWFuSWZOb3RJbnN0YWxsZWQoKSB7CiAgaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogICAgdXJsPSJodHRwczovL21vbmRlamEuZ2l0aHViLmlvL3NocmVhZC91bml4L18vZG93bmxvYWQvcGFjYXB0LyRfU0NSSVBUX0ZJTEVOQU1FIgogICAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKICBmaTsKfQpmdW5jdGlvbiBpbnN0YWxsU2NyaXB0RGVwZW5kZW5jaWVzKCkgewogIGluc3RhbGxQYWNtYW5JZk5vdEluc3RhbGxlZAogIElOU1RBTExBVElPTl9ERVBFTkRFTkNJRVM9KAogICAgImN1cmwiCiAgKQogIGZvciBERVAgaW4gIiR7SU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFU1tAXX0iOyBkbwogICAgaWYgW1sgIiQoc3VkbyBwYWNtYW4gLVFpICIkREVQIiAyPiAvZGV2L251bGwgfCBncmVwIFN0YXR1cykiICE9ICJTdGF0dXM6IGluc3RhbGwgb2sgaW5zdGFsbGVkIiBdXTsgdGhlbgogICAgICBzdWRvIHBhY21hbiAtUyAtLSAteSAiJERFUCIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogICAgZmk7CiAgZG9uZTsKfQpfQ0lSQ0xFQ0lfQklOQVJZX1BBVEg9IiIKZnVuY3Rpb24gZ2V0Q2lyY2xlQ0lCaW5hcnlQYXRoKCkgewogIF9DSVJDTEVDSV9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IGNpcmNsZWNpKSIKfQpfQ0lSQ0xFQ0lfTEFURVNUX1JFTEVBU0VfVkVSU0lPTj0iIgpmdW5jdGlvbiBnZXRDaXJjbGVDSUxhdGVzdFJlbGVhc2VWZXJzaW9uKCkgewogIF9DSVJDTEVDSV9MQVRFU1RfUkVMRUFTRV9WRVJTSU9OPSQoCiAgICBjdXJsIC1zTEkgLW8gL2Rldi9udWxsIC13ICcle3VybF9lZmZlY3RpdmV9JyAgICAgICBodHRwczovL2dpdGh1Yi5jb20vQ2lyY2xlQ0ktUHVibGljL2NpcmNsZWNpLWNsaS9yZWxlYXNlcy9sYXRlc3QvICB8ICAgICAgIGN1dCAtZCAidiIgLWYyKQp9CmZ1bmN0aW9uIGRvd25sb2FkQ2lyY2xlQ0koKSB7CiAgY3VybCAtZkxTcyBodHRwczovL2NpcmNsZS5jaS9jbGkgPiAvdG1wL2luc3RhbGwtY2lyY2xlY2kuc2gKICBjaG1vZCAreCAvdG1wL2luc3RhbGwtY2lyY2xlY2kuc2gKICBzdWRvIERFU1RESVI9IiQxIiBWRVJTSU9OPSIkMiIgYmFzaCAvdG1wL2luc3RhbGwtY2lyY2xlY2kuc2ggPiAvZGV2L251bGwKICBybSAtZiAvdG1wL2luc3RhbGwtY2lyY2xlY2kuc2gKfQpmdW5jdGlvbiBtYWluKCkgewogIHByaW50SW5kZW50CiAgZ2V0Q2lyY2xlQ0lCaW5hcnlQYXRoCiAgZ2V0Q2lyY2xlQ0lMYXRlc3RSZWxlYXNlVmVyc2lvbgogIGlmIFsgIiRfQ0lSQ0xFQ0lfQklOQVJZX1BBVEgiID0gIiIgXTsgdGhlbgogICAgcHJpbnRmICIlcyAodiVzKS4uLiIgIiRfTVNHX0lOU1RBTExJTkdfQ0lSQ0xFQ0kiICIkX0NJUkNMRUNJX0xBVEVTVF9SRUxFQVNFX1ZFUlNJT04iCiAgICBkb3dubG9hZENpcmNsZUNJIC91c3IvYmluICIkX0NJUkNMRUNJX0xBVEVTVF9SRUxFQVNFX1ZFUlNJT04iCiAgZWxzZQogICAgX0NJUkNMRUNJX0lOU1RBTExFRF9WRVJTSU9OPSQoCiAgICAgICIkX0NJUkNMRUNJX0JJTkFSWV9QQVRIIiB2ZXJzaW9uIHwgIGN1dCAtZCcrJyAtZjEpCiAgICBpZiBbICIkX0NJUkNMRUNJX0lOU1RBTExFRF9WRVJTSU9OIiAhPSAiJF9DSVJDTEVDSV9MQVRFU1RfUkVMRUFTRV9WRVJTSU9OIiBdOyB0aGVuCiAgICAgIHByaW50ZiAiJXMgKHYlcyIgIiRfTVNHX1VQREFUSU5HX0NJUkNMRUNJIiAiJF9DSVJDTEVDSV9JTlNUQUxMRURfVkVSU0lPTiIKICAgICAgcHJpbnRmICIgLT4gdiVzKS4uLiIgIiRfQ0lSQ0xFQ0lfTEFURVNUX1JFTEVBU0VfVkVSU0lPTiIKICAgICAgc3VkbyBybSAtZiAiJF9DSVJDTEVDSV9CSU5BUllfUEFUSCIKICAgICAgZG93bmxvYWRDaXJjbGVDSSAvdXNyL2JpbiAiJF9DSVJDTEVDSV9MQVRFU1RfUkVMRUFTRV9WRVJTSU9OIgogICAgZWxzZQogICAgICBwcmludGYgIiVzICh2JXMpIiAiJF9NU0dfRk9VTkRfQ0lSQ0xFQ0lfSU5TVEFMTEVEIiAiJF9DSVJDTEVDSV9JTlNUQUxMRURfVkVSU0lPTiIKICAgIGZpOwogIGZpOwogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgp9CmlmIChyZXR1cm4gMCAyPi9kZXYvbnVsbCk7IHRoZW4KICBleHBvcnRWYXJpYWJsZXMKZWxzZQogIG1haW4KZmk7'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
