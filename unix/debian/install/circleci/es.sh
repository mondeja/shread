#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfSU5TVEFMTElOR19DSVJDTEVDST0iSW5zdGFsYW5kbyBDaXJjbGVDSSIKX01TR19VUERBVElOR19DSVJDTEVDST0iQWN0dWFsaXphbmRvIENpcmNsZUNJIgpfTVNHX0ZPVU5EX0NJUkNMRUNJX0lOU1RBTExFRD0iRW5jb250cmFkbyBDaXJjbGVDSSBpbnN0YWxhZG8iCklOREVOVF9TVFJJTkc9IiIKU0VUWD0wCmZ1bmN0aW9uIHVzYWdlIHsKICAgIGNhdCA8PEhFTFBfVVNBR0UKVXNhZ2U6IHVuaXgvZGViaWFuL2luc3RhbGwvY2lyY2xlY2kvJF9TQ1JJUFRfRklMRU5BTUUgWy1oXSBbLWkgU1RSSU5HXSAKCiAgRGVzY2FyZ2EgbyBhY3R1YWxpemEgZWwgYmluYXJpbyBkZSBDaXJjbGVDSS4KCk9wdGlvbnM6CiAgLWgsIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBoZWxwIG1lc3NhZ2UgYW5kIGV4aXQuCiAgLWkgU1RSSU5HLCAtLWluZGVudCBTVFJJTkcgICAgICAgIEVhY2ggbGluZSBvZiB0aGUgc2NyaXB0IG91dHB1dCB3aWxsIGJlIHByZWNlZGVkIHdpdGggdGhlIHN0cmluZyBkZWZpbmVkIGluIHRoaXMgcGFyYW1ldGVyLgogIC0tc2V0LXggICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIHRoZSAteCBvcHRpb24gaW4gQmFzaCB0byBwcmludCBvdXQgdGhlIHN0YXRlbWVudHMgYXMgdGhleSBhcmUgYmVpbmcgZXhlY3V0ZWQuIFVzZWZ1bCBmb3IgZGVidWdnaW5nIHB1cnBvc2VzLgpIRUxQX1VTQUdFCiAgICBleGl0IDEKfQpmb3IgYXJnIGluICIkQCI7IGRvCiAgY2FzZSAkYXJnIGluCiAgICAtaXwtLWluZGVudCkKICAgIElOREVOVF9TVFJJTkc9IiQyIgogICAgc2hpZnQgMgogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsgICAgLS1zZXQteCkKICAgIFNFVFg9MQogICAgc2hpZnQKICAgIDs7ICAgICAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQppZiBbICIkU0VUWCIgLWVxIDEgXTsgdGhlbiBzZXQgLXg7IGZpCmZ1bmN0aW9uIGluc3RhbGxQYWNtYW5JZk5vdEluc3RhbGxlZCgpIHsKICBpZiBbICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIgPSAiIiBdOyB0aGVuCiAgICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgICBjdXJsIC1zTCAiJHVybCIgfCBzdWRvIGJhc2ggLSA+IC9kZXYvbnVsbAogIGZpOwp9CmZ1bmN0aW9uIGluc3RhbGxTY3JpcHREZXBlbmRlbmNpZXMoKSB7CiAgaW5zdGFsbFBhY21hbklmTm90SW5zdGFsbGVkCiAgSU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFUz0oCiAgICAiY3VybCIKICApCiAgZm9yIERFUCBpbiAiJHtJTlNUQUxMQVRJT05fREVQRU5ERU5DSUVTW0BdfSI7IGRvCiAgICBpZiBbWyAiJChzdWRvIHBhY21hbiAtUWkgIiRERVAiIDI+IC9kZXYvbnVsbCB8IGdyZXAgU3RhdHVzKSIgIT0gIlN0YXR1czogaW5zdGFsbCBvayBpbnN0YWxsZWQiIF1dOyB0aGVuCiAgICAgIHN1ZG8gcGFjbWFuIC1TIC0tIC15ICIkREVQIiA+IC9kZXYvbnVsbCB8fCBleGl0ICQ/CiAgICBmaTsKICBkb25lOwp9Cl9DSVJDTEVDSV9CSU5BUllfUEFUSD0iIgpmdW5jdGlvbiBnZXRDaXJjbGVDSUJpbmFyeVBhdGgoKSB7CiAgX0NJUkNMRUNJX0JJTkFSWV9QQVRIPSIkKGNvbW1hbmQgLXYgY2lyY2xlY2kpIgp9Cl9DSVJDTEVDSV9MQVRFU1RfUkVMRUFTRV9WRVJTSU9OPSIiCmZ1bmN0aW9uIGdldENpcmNsZUNJTGF0ZXN0UmVsZWFzZVZlcnNpb24oKSB7CiAgX0NJUkNMRUNJX0xBVEVTVF9SRUxFQVNFX1ZFUlNJT049JCgKICAgIGN1cmwgLXNMSSAtbyAvZGV2L251bGwgLXcgJyV7dXJsX2VmZmVjdGl2ZX0nICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9DaXJjbGVDSS1QdWJsaWMvY2lyY2xlY2ktY2xpL3JlbGVhc2VzL2xhdGVzdC8gIHwgICAgICAgY3V0IC1kICJ2IiAtZjIpCn0KZnVuY3Rpb24gZG93bmxvYWRDaXJjbGVDSSgpIHsKICBjdXJsIC1mTFNzIGh0dHBzOi8vY2lyY2xlLmNpL2NsaSA+IC90bXAvaW5zdGFsbC1jaXJjbGVjaS5zaAogIGNobW9kICt4IC90bXAvaW5zdGFsbC1jaXJjbGVjaS5zaAogIHN1ZG8gREVTVERJUj0iJDEiIFZFUlNJT049IiQyIiBiYXNoIC90bXAvaW5zdGFsbC1jaXJjbGVjaS5zaCA+IC9kZXYvbnVsbAogIHJtIC1mIC90bXAvaW5zdGFsbC1jaXJjbGVjaS5zaAp9CmZ1bmN0aW9uIG1haW4oKSB7CiAgcHJpbnRJbmRlbnQKICBnZXRDaXJjbGVDSUJpbmFyeVBhdGgKICBnZXRDaXJjbGVDSUxhdGVzdFJlbGVhc2VWZXJzaW9uCiAgaWYgWyAiJF9DSVJDTEVDSV9CSU5BUllfUEFUSCIgPSAiIiBdOyB0aGVuCiAgICBwcmludGYgIiVzICh2JXMpLi4uIiAiJF9NU0dfSU5TVEFMTElOR19DSVJDTEVDSSIgIiRfQ0lSQ0xFQ0lfTEFURVNUX1JFTEVBU0VfVkVSU0lPTiIKICAgIGRvd25sb2FkQ2lyY2xlQ0kgL3Vzci9iaW4gIiRfQ0lSQ0xFQ0lfTEFURVNUX1JFTEVBU0VfVkVSU0lPTiIKICBlbHNlCiAgICBfQ0lSQ0xFQ0lfSU5TVEFMTEVEX1ZFUlNJT049JCgKICAgICAgIiRfQ0lSQ0xFQ0lfQklOQVJZX1BBVEgiIHZlcnNpb24gfCAgY3V0IC1kJysnIC1mMSkKICAgIGlmIFsgIiRfQ0lSQ0xFQ0lfSU5TVEFMTEVEX1ZFUlNJT04iICE9ICIkX0NJUkNMRUNJX0xBVEVTVF9SRUxFQVNFX1ZFUlNJT04iIF07IHRoZW4KICAgICAgcHJpbnRmICIlcyAodiVzIiAiJF9NU0dfVVBEQVRJTkdfQ0lSQ0xFQ0kiICIkX0NJUkNMRUNJX0lOU1RBTExFRF9WRVJTSU9OIgogICAgICBwcmludGYgIiAtPiB2JXMpLi4uIiAiJF9DSVJDTEVDSV9MQVRFU1RfUkVMRUFTRV9WRVJTSU9OIgogICAgICBzdWRvIHJtIC1mICIkX0NJUkNMRUNJX0JJTkFSWV9QQVRIIgogICAgICBkb3dubG9hZENpcmNsZUNJIC91c3IvYmluICIkX0NJUkNMRUNJX0xBVEVTVF9SRUxFQVNFX1ZFUlNJT04iCiAgICBlbHNlCiAgICAgIHByaW50ZiAiJXMgKHYlcykiICIkX01TR19GT1VORF9DSVJDTEVDSV9JTlNUQUxMRUQiICIkX0NJUkNMRUNJX0lOU1RBTExFRF9WRVJTSU9OIgogICAgZmk7CiAgZmk7CiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCn0KaWYgKHJldHVybiAwIDI+L2Rldi9udWxsKTsgdGhlbgogIGV4cG9ydFZhcmlhYmxlcwplbHNlCiAgbWFpbgpmaTsKaWYgWyAiJFNFVFgiIC1lcSAxIF07IHRoZW4gc2V0ICt4OyBmaQ=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
