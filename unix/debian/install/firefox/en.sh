#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSBleGVjdXRlZCBhcyBzdXBlcnVzZXIuIgpfTVNHX0NIRUNLSU5HX01PWklMTEFfRUNPU1lTVEVNPSJDaGVja2luZyBNb3ppbGxhIGVjb3N5c3RlbS4uLiIKX01TR19GT1VORF9NT1pJTExBX0ZJUkVGT1hfSU5TVEFMTEVEPSJNb3ppbGxhIEZpcmVmb3ggZm91bmQgaW5zdGFsbGVkIGluIHRoZSBzeXN0ZW0iCl9NU0dfSU5TVEFMTElOR19NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRVM9Ikluc3RhbGxpbmcgTW96aWxsYSBGaXJlZm94IHBhY2thZ2VzIgpfTVNHX0ZPVU5EX0NIRUNLT0RSSVZFUl9JTlNUQUxMRUQ9IkdlY2tvZHJpdmVyIGZvdW5kIGluc3RhbGxlZCBpbiB0aGUgc3lzdGVtIgpfTVNHX0lOU1RBTExJTkdfR0VDS09EUklWRVI9Ikluc3RhbGxpbmcgZ2Vja29kcml2ZXIuLi4iCl9JTlNUQUxMX0dFQ0tPRFJJVkVSX1BBQ0tBR0U9MQppZiBbWyAkKC91c3IvYmluL2lkIC11KSAtbmUgMCBdXTsgdGhlbgogIHByaW50ZiAiJXNcbiIgIiRfTVNHX0VYRUNVVEVEX0FTX1NVUEVSVVNFUiIgPiYyCiAgZXhpdCAxCmZpOwpJTkRFTlRfU1RSSU5HPSIiCmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC0taW5kZW50KQogICAgc2hpZnQKICAgIElOREVOVF9TVFJJTkc9JDEKICAgIHNoaWZ0CiAgICA7OwogICAgLS1uby1nZWNrb2RyaXZlcikKICAgIF9JTlNUQUxMX0dFQ0tPRFJJVkVSX1BBQ0tBR0U9MAogICAgc2hpZnQKICAgIDs7CiAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQppZiBbICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIgPSAiIiBdOyB0aGVuCiAgaWYgWyAteiAiJF9TQ1JJUFRfRklMRU5BTUUiIF07IHRoZW4KICAgIGZpbGVwYXRoPSJzcmMvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC9tYWluLnNoIgogICAgYmFzaCAiJGZpbGVwYXRoIiA+IC9kZXYvbnVsbAogIGVsc2UKICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgIGN1cmwgLXNMICIkdXJsIiB8IHN1ZG8gYmFzaCAtID4gL2Rldi9udWxsCiAgZmk7CmZpOwppZiBbIC16ICIkVU5JWF9ESVNUUk8iIF07IHRoZW4KICBzb3VyY2UgPChjdXJsIC1zTCBodHRwczovL21vbmRlamEuZ2l0aHViLmlvL3NocmVhZC91bml4L18vdXRpbC9nZXQtZGlzdHJvL2VuLnNoKQpmaTsKcHJpbnRJbmRlbnQKcHJpbnRmICIlc1xuIiAiJF9NU0dfQ0hFQ0tJTkdfTU9aSUxMQV9FQ09TWVNURU0iCnByaW50SW5kZW50CmlmIGNvbW1hbmQgLXYgZmlyZWZveCAmPiAvZGV2L251bGw7IHRoZW4KICBfTU9aSUxMQV9GSVJFRk9YX1ZFUlNJT049JCgKICAgIHN1ZG8gLXUgIiRTVURPX1VTRVIiIGZpcmVmb3ggLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMykKICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19GT1VORF9NT1pJTExBX0ZJUkVGT1hfSU5TVEFMTEVEIiAiJF9NT1pJTExBX0ZJUkVGT1hfVkVSU0lPTiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKZWxzZQogIHByaW50ZiAiICAlcyIgIiRfTVNHX0lOU1RBTExJTkdfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VTIgogIF9NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRV9OQU1FPSJmaXJlZm94IgogIGlmIFsgIiRVTklYX0RJU1RSTyIgPSAiZGViaWFuIiBdOyB0aGVuCiAgICBfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VfTkFNRT0iZmlyZWZveC1lc3IiCiAgZmk7CiAgX0ZJUkVGT1hfTEFURVNUX1ZFUlNJT049JChwYWNtYW4gLVFpICIkX01PWklMTEFfRklSRUZPWF9QQUNLQUdFX05BTUUiIFwKICAgIHwgZ3JlcCBWZXJzaW9uOiB8IGN1dCAtZCcgJyAtZjIgfCBjdXQgLWQnKycgLWYxKQogIHByaW50ZiAiICh2JXMpLi4uXG4iICIkX0ZJUkVGT1hfTEFURVNUX1ZFUlNJT04iCiAgX01PWklMTEFfRklSRUZPWF9QQUNLQUdFUz0oIiRfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VfTkFNRSIpCiAgaWYgWyAiJFVOSVhfRElTVFJPIiA9ICJkZWJpYW4iIF07IHRoZW4KICAgIF9NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRVMrPSgiZmlyZWZveC1lc3ItbDEwbi1lcy1lcyIpCiAgZmk7CiAgZm9yIFBBQ0tBR0UgaW4gIiR7X01PWklMTEFfRklSRUZPWF9QQUNLQUdFU1tAXX0iOyBkbwogICAgcHJpbnRJbmRlbnQKICAgIHByaW50ZiAiICAgICVzIiAiJFBBQ0tBR0UiCiAgICBpZiBbWyAiJChzdWRvIHBhY21hbiAtUWkgIiRQQUNLQUdFIiAyPiAvZGV2L251bGwgfCBncmVwIFN0YXR1cykiICE9ICJTdGF0dXM6IGluc3RhbGwgb2sgaW5zdGFsbGVkIiBdXTsgdGhlbgogICAgICBzdWRvIHBhY21hbiAtUyAtLSAteSAiJFBBQ0tBR0UiID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KICAgIGZpOwogICAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgZG9uZQpmaTsKaWYgWyAkX0lOU1RBTExfR0VDS09EUklWRVJfUEFDS0FHRSAtZXEgMSBdICYmIFsgIiRVTklYX0RJU1RSTyIgIT0gImRlYmlhbiIgXTsgdGhlbgogIHByaW50SW5kZW50CiAgX0dFQ0tPRFJJVkVSX1BBVEg9IiQoY29tbWFuZCAtdiBnZWNrb2RyaXZlcikiCiAgaWYgWyAiJF9HRUNLT0RSSVZFUl9QQVRIIiAhPSAiIiBdOyB0aGVuCiAgICBwcmludGYgIiAgJXMiICIkX01TR19GT1VORF9DSEVDS09EUklWRVJfSU5TVEFMTEVEIgogICAgcHJpbnRmICIgKHYlcykiICIkKGdlY2tvZHJpdmVyIC0tdmVyc2lvbiB8IGhlYWQgLW4xIHwgY3V0IC1kJyAnIC1mMikiCiAgZWxzZQogICAgcHJpbnRmICIgICVzIiAiJF9NU0dfSU5TVEFMTElOR19HRUNLT0RSSVZFUiIKICAgIHN1ZG8gcGFjbWFuIC1TIC0tIC15IGZpcmVmb3gtZ2Vja29kcml2ZXIgPiAvZGV2L251bGwKICBmaTsKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKZmk7'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
