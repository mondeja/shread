#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfQ0hFQ0tJTkdfTU9aSUxMQV9FQ09TWVNURU09IkNvbXByb2JhbmRvIGVjb3Npc3RlbWEgTW96aWxsYS4uLiIKX01TR19GT1VORF9NT1pJTExBX0ZJUkVGT1hfSU5TVEFMTEVEPSJFY29udHJhZG8gTW96aWxsYSBGaXJlZm94IGluc3RhbGFkbyBlbiBlbCBzaXN0ZW1hIgpfTVNHX0lOU1RBTExJTkdfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VTPSJJbnN0YWxhbmRvIHBhcXVldGVzIGRlIE1vemlsbGEgRmlyZWZveCIKX01TR19GT1VORF9DSEVDS09EUklWRVJfSU5TVEFMTEVEPSJFbmNvbnRyYWRvIEdlY2tvZHJpdmVyIGluc3RhbGFkbyBlbiBlbCBzaXN0ZW1hIgpfTVNHX0lOU1RBTExJTkdfR0VDS09EUklWRVI9Ikluc3RhbGFuZG8gZ2Vja29kcml2ZXIuLi4iCklOREVOVF9TVFJJTkc9IiIKX0lOU1RBTExfR0VDS09EUklWRVI9MQpmdW5jdGlvbiB1c2FnZSB7CiAgICBjYXQgPDxIRUxQX1VTQUdFClVzYWdlOiB1bml4L2RlYmlhbi9pbnN0YWxsL2ZpcmVmb3gvJF9TQ1JJUFRfRklMRU5BTUUgWy1oXSBbLWkgU1RSSU5HXSBbLW5dCgogIEluc3RhbGxzIE1vemlsbGEgRmlyZWZveCBhbmQgZ2Vja29kcml2ZXIuCgpPcHRpb25zOgogIC1oLCAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0LgogIC1pIFNUUklORywgLS1pbmRlbnQgU1RSSU5HICAgICAgICBFYWNoIGxpbmUgb2YgdGhlIHNjcmlwdCBvdXRwdXQgd2lsbCBiZSBwcmVjZWRlZCB3aXRoIHRoZSBzdHJpbmcgZGVmaW5lZCBpbiB0aGlzIHBhcmFtZXRlci4KICAtbiwgLS1uby1nZWNrb2RyaXZlciAgICAgICAgICAgICAgSWYgcGFzc2VkLCBkb2Vzbid0IGluc3RhbGxzIGdlY2tvZHJpdmVyLgoKSEVMUF9VU0FHRQogICAgZXhpdCAxCn0KZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLWl8LS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0iJDEiCiAgICBzaGlmdAogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsgICAgCiAgICAtbnwtLW5vLWdlY2tvZHJpdmVyKQogICAgX0lOU1RBTExfR0VDS09EUklWRVI9MAogICAgc2hpZnQKICAgIDs7CiAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQpmdW5jdGlvbiBpbnN0YWxsUGFjbWFuSWZOb3RJbnN0YWxsZWQoKSB7CiAgaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogICAgdXJsPSJodHRwczovL21vbmRlamEuZ2l0aHViLmlvL3NocmVhZC91bml4L18vZG93bmxvYWQvcGFjYXB0LyRfU0NSSVBUX0ZJTEVOQU1FIgogICAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKICBmaTsKfQpmdW5jdGlvbiBnZXRVbml4RGlzdHJvKCkgewogIGlmIFsgLXogIiRVTklYX0RJU1RSTyIgXTsgdGhlbgogICAgc291cmNlIDwoY3VybCAtc0wgaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL3V0aWwvZ2V0LWRpc3Ryby9lbi5zaCkKICBmaTsKfQpmdW5jdGlvbiBpbnN0YWxsTW96aWxsYUZpcmVmb3goKSB7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19JTlNUQUxMSU5HX01PWklMTEFfRklSRUZPWF9QQUNLQUdFUyIKICBfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VfTkFNRT0iZmlyZWZveCIKICBpZiBbICIkVU5JWF9ESVNUUk8iID0gImRlYmlhbiIgXTsgdGhlbgogICAgX01PWklMTEFfRklSRUZPWF9QQUNLQUdFX05BTUU9ImZpcmVmb3gtZXNyIgogIGZpOwogIF9GSVJFRk9YX0xBVEVTVF9WRVJTSU9OPSQocGFjbWFuIC1RaSAiJF9NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRV9OQU1FIiAgICAgfCBncmVwIFZlcnNpb246IHwgY3V0IC1kJyAnIC1mMiB8IGN1dCAtZCcrJyAtZjEpCiAgcHJpbnRmICIgKHYlcykuLi5cbiIgIiRfRklSRUZPWF9MQVRFU1RfVkVSU0lPTiIKICBfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VTPSgiJF9NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRV9OQU1FIikKICBpZiBbICIkVU5JWF9ESVNUUk8iID0gImRlYmlhbiIgXTsgdGhlbgogICAgX01PWklMTEFfRklSRUZPWF9QQUNLQUdFUys9KCJmaXJlZm94LWVzci1sMTBuLWVzLWVzIikKICBmaTsKICBmb3IgUEFDS0FHRSBpbiAiJHtfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VTW0BdfSI7IGRvCiAgICBwcmludEluZGVudAogICAgcHJpbnRmICIgICAgJXMiICIkUEFDS0FHRSIKICAgIGlmIFtbICIkKHN1ZG8gcGFjbWFuIC1RaSAiJFBBQ0tBR0UiIDI+IC9kZXYvbnVsbCB8IGdyZXAgU3RhdHVzKSIgIT0gIlN0YXR1czogaW5zdGFsbCBvayBpbnN0YWxsZWQiIF1dOyB0aGVuCiAgICAgIHN1ZG8gcGFjbWFuIC1TIC0tIC15ICIkUEFDS0FHRSIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogICAgZmk7CiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBkb25lCn0KZnVuY3Rpb24gaW5zdGFsbEdlY2tvZHJpdmVyKCkgewogIHByaW50ZiAiICAlcyIgIiRfTVNHX0lOU1RBTExJTkdfR0VDS09EUklWRVIiCiAgc3VkbyBwYWNtYW4gLVMgLS0gLXkgZmlyZWZveC1nZWNrb2RyaXZlciA+IC9kZXYvbnVsbAp9CmZ1bmN0aW9uIG1haW4oKSB7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19NT1pJTExBX0VDT1NZU1RFTSIKICBpbnN0YWxsUGFjbWFuSWZOb3RJbnN0YWxsZWQKICBnZXRVbml4RGlzdHJvCiAgaWYgY29tbWFuZCAtdiBmaXJlZm94ICY+IC9kZXYvbnVsbDsgdGhlbgogICAgX01PWklMTEFfRklSRUZPWF9WRVJTSU9OPSQoCiAgICAgIHN1ZG8gLXUgIiRTVURPX1VTRVIiIGZpcmVmb3ggLS12ZXJzaW9uIHwgY3V0IC1kJyAnIC1mMykKICAgIHByaW50SW5kZW50CiAgICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19GT1VORF9NT1pJTExBX0ZJUkVGT1hfSU5TVEFMTEVEIiAiJF9NT1pJTExBX0ZJUkVGT1hfVkVSU0lPTiIKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGVsc2UKICAgIGluc3RhbGxNb3ppbGxhRmlyZWZveAogIGZpOwogIGlmIFsgJF9JTlNUQUxMX0dFQ0tPRFJJVkVSIC1lcSAxIF0gJiYgWyAiJFVOSVhfRElTVFJPIiAhPSAiZGViaWFuIiBdOyB0aGVuCiAgICBfR0VDS09EUklWRVJfUEFUSD0iJChjb21tYW5kIC12IGdlY2tvZHJpdmVyKSIKICAgIGlmIFsgIiRfR0VDS09EUklWRVJfUEFUSCIgIT0gIiIgXTsgdGhlbgogICAgICBwcmludEluZGVudAogICAgICBwcmludGYgIiAgJXMiICIkX01TR19GT1VORF9DSEVDS09EUklWRVJfSU5TVEFMTEVEIgogICAgICBwcmludGYgIiAodiVzKSIgIiQoZ2Vja29kcml2ZXIgLS12ZXJzaW9uIHwgaGVhZCAtbjEgfCBjdXQgLWQnICcgLWYyKSIKICAgIGVsc2UKICAgICAgaW5zdGFsbEdlY2tvZHJpdmVyCiAgICBmaTsKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGZpOwp9CmlmIChyZXR1cm4gMCAyPi9kZXYvbnVsbCk7IHRoZW4KICBleHBvcnRWYXJpYWJsZXMKZWxzZQogIG1haW4KZmk7'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
