#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJFc3RlIHNjcmlwdCBuZWNlc2l0YSBzZXIgZWplY3V0YWRvIGNvbW8gc3VwZXJ1c3VhcmlvLiIKX01TR19DSEVDS0lOR19NT1pJTExBX0VDT1NZU1RFTT0iQ29tcHJvYmFuZG8gZWNvc2lzdGVtYSBNb3ppbGxhLi4uIgpfTVNHX0ZPVU5EX01PWklMTEFfRklSRUZPWF9JTlNUQUxMRUQ9IkVjb250cmFkbyBNb3ppbGxhIEZpcmVmb3ggaW5zdGFsYWRvIGVuIGVsIHNpc3RlbWEiCl9NU0dfSU5TVEFMTElOR19NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRVM9Ikluc3RhbGFuZG8gcGFxdWV0ZXMgZGUgTW96aWxsYSBGaXJlZm94IgpfTVNHX0ZPVU5EX0NIRUNLT0RSSVZFUl9JTlNUQUxMRUQ9IkVuY29udHJhZG8gR2Vja29kcml2ZXIgaW5zdGFsYWRvIGVuIGVsIHNpc3RlbWEiCl9NU0dfSU5TVEFMTElOR19HRUNLT0RSSVZFUj0iSW5zdGFsYW5kbyBnZWNrb2RyaXZlci4uLiIKX0lOU1RBTExfR0VDS09EUklWRVJfUEFDS0FHRT0xCmlmIFtbICQoL3Vzci9iaW4vaWQgLXUpIC1uZSAwIF1dOyB0aGVuCiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSIiA+JjIKICBleGl0IDEKZmk7CklOREVOVF9TVFJJTkc9IiIKZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgICAtLW5vLWdlY2tvZHJpdmVyKQogICAgX0lOU1RBTExfR0VDS09EUklWRVJfUEFDS0FHRT0wCiAgICBzaGlmdAogICAgOzsKICBlc2FjCmRvbmUKZnVuY3Rpb24gcHJpbnRJbmRlbnQoKSB7CiAgcHJpbnRmICIlcyIgIiRJTkRFTlRfU1RSSU5HIgp9CmlmIFsgIiQoY29tbWFuZCAtdiBwYWNtYW4pIiA9ICIiIF07IHRoZW4KICBpZiBbIC16ICIkX1NDUklQVF9GSUxFTkFNRSIgXTsgdGhlbgogICAgZmlsZXBhdGg9InNyYy91bml4L18vZG93bmxvYWQvcGFjYXB0L21haW4uc2giCiAgICBiYXNoICIkZmlsZXBhdGgiID4gL2Rldi9udWxsCiAgZWxzZQogICAgdXJsPSJodHRwczovL21vbmRlamEuZ2l0aHViLmlvL3NocmVhZC91bml4L18vZG93bmxvYWQvcGFjYXB0LyRfU0NSSVBUX0ZJTEVOQU1FIgogICAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKICBmaTsKZmk7CmlmIFsgLXogIiRVTklYX0RJU1RSTyIgXTsgdGhlbgogIHNvdXJjZSA8KGN1cmwgLXNMIGh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy91dGlsL2dldC1kaXN0cm8vZW4uc2gpCmZpOwpwcmludEluZGVudApwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19NT1pJTExBX0VDT1NZU1RFTSIKcHJpbnRJbmRlbnQKaWYgY29tbWFuZCAtdiBmaXJlZm94ICY+IC9kZXYvbnVsbDsgdGhlbgogIF9NT1pJTExBX0ZJUkVGT1hfVkVSU0lPTj0kKAogICAgc3VkbyAtdSAiJFNVRE9fVVNFUiIgZmlyZWZveCAtLXZlcnNpb24gfCBjdXQgLWQnICcgLWYzKQogIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0ZPVU5EX01PWklMTEFfRklSRUZPWF9JTlNUQUxMRUQiICIkX01PWklMTEFfRklSRUZPWF9WRVJTSU9OIgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgplbHNlCiAgcHJpbnRmICIgICVzIiAiJF9NU0dfSU5TVEFMTElOR19NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRVMiCiAgX01PWklMTEFfRklSRUZPWF9QQUNLQUdFX05BTUU9ImZpcmVmb3giCiAgaWYgWyAiJFVOSVhfRElTVFJPIiA9ICJkZWJpYW4iIF07IHRoZW4KICAgIF9NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRV9OQU1FPSJmaXJlZm94LWVzciIKICBmaTsKICBfRklSRUZPWF9MQVRFU1RfVkVSU0lPTj0kKHBhY21hbiAtUWkgIiRfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VfTkFNRSIgXAogICAgfCBncmVwIFZlcnNpb246IHwgY3V0IC1kJyAnIC1mMiB8IGN1dCAtZCcrJyAtZjEpCiAgcHJpbnRmICIgKHYlcykuLi5cbiIgIiRfRklSRUZPWF9MQVRFU1RfVkVSU0lPTiIKICBfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VTPSgiJF9NT1pJTExBX0ZJUkVGT1hfUEFDS0FHRV9OQU1FIikKICBpZiBbICIkVU5JWF9ESVNUUk8iID0gImRlYmlhbiIgXTsgdGhlbgogICAgX01PWklMTEFfRklSRUZPWF9QQUNLQUdFUys9KCJmaXJlZm94LWVzci1sMTBuLWVzLWVzIikKICBmaTsKICBmb3IgUEFDS0FHRSBpbiAiJHtfTU9aSUxMQV9GSVJFRk9YX1BBQ0tBR0VTW0BdfSI7IGRvCiAgICBwcmludEluZGVudAogICAgcHJpbnRmICIgICAgJXMiICIkUEFDS0FHRSIKICAgIGlmIFtbICIkKHN1ZG8gcGFjbWFuIC1RaSAiJFBBQ0tBR0UiIDI+IC9kZXYvbnVsbCB8IGdyZXAgU3RhdHVzKSIgIT0gIlN0YXR1czogaW5zdGFsbCBvayBpbnN0YWxsZWQiIF1dOyB0aGVuCiAgICAgIHN1ZG8gcGFjbWFuIC1TIC0tIC15ICIkUEFDS0FHRSIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogICAgZmk7CiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBkb25lCmZpOwppZiBbICRfSU5TVEFMTF9HRUNLT0RSSVZFUl9QQUNLQUdFIC1lcSAxIF0gJiYgWyAiJFVOSVhfRElTVFJPIiAhPSAiZGViaWFuIiBdOyB0aGVuCiAgcHJpbnRJbmRlbnQKICBfR0VDS09EUklWRVJfUEFUSD0iJChjb21tYW5kIC12IGdlY2tvZHJpdmVyKSIKICBpZiBbICIkX0dFQ0tPRFJJVkVSX1BBVEgiICE9ICIiIF07IHRoZW4KICAgIHByaW50ZiAiICAlcyIgIiRfTVNHX0ZPVU5EX0NIRUNLT0RSSVZFUl9JTlNUQUxMRUQiCiAgICBwcmludGYgIiAodiVzKSIgIiQoZ2Vja29kcml2ZXIgLS12ZXJzaW9uIHwgaGVhZCAtbjEgfCBjdXQgLWQnICcgLWYyKSIKICBlbHNlCiAgICBwcmludGYgIiAgJXMiICIkX01TR19JTlNUQUxMSU5HX0dFQ0tPRFJJVkVSIgogICAgc3VkbyBwYWNtYW4gLVMgLS0gLXkgZmlyZWZveC1nZWNrb2RyaXZlciA+IC9kZXYvbnVsbAogIGZpOwogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgpmaTs='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
