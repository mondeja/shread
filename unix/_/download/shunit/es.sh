#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfVVJMPSJVUkwiCl9NU0dfRVJST1I9IkVycm9yIgpfTVNHX0VSUk9SX0NPREU9IkPDs2RpZ28gZGUgZXJyb3IiCl9NU0dfRVJST1JfUkVUUklFVklOR19TSFVOSVRfUkVMRUFTRVNfSU5GTz0iT2N1cnJpw7MgdW4gZXJyb3Igb2J0ZW5pZW5kbyBsYSBpbmZvcm1hY2nDs24gZGUgbGFzIHJlbGVhc2VzIGRlIHNodW5pdDIgZGUgbGEgQVBJIGRlIEdpdGh1Yi4iCl9NU0dfQ0hFQ0tJTkdfU0hVTklUPSJDb21wcm9iYW5kbyBzaHVuaXQyLi4uIgpfTVNHX1JFVFJJRVZJTkdfU0hVTklUX0xBU1RFU1RfVkVSU0lPTj0iT2J0ZW5pZW5kbyBsYSDDumx0aW1hIHZlcnNpb24uLi4iCl9NU0dfRVJST1JfUEFSU0lOR19MQVNURVNUX1NIVU5JVF9SRUxFQVNFPSJPY3VycmnDsyB1biBlcnJvciBwYXJzZWFuZG8gbGEgdmVyc2nDs24gZGUgbGEgw7psdGltYSByZWxlYXNlIGRlIHNodW5pdDIgZGUgbGEgQVBJIGRlIEdpdGh1Yi4iCl9NU0dfRE9XTkxPQURJTkdfU0hVTklUPSJEZXNjYXJnYW5kbyBzaHVuaXQyIgpfTVNHX0VSUk9SX0RPV05MT0FESU5HX1NIVU5JVD0iT2N1cnJpw7MgdW4gZXJyb3IgZGVzY2FyZ2FuZG8gc2h1bml0MiIKX01TR19VTlpJUFBJTkdfU0hVTklUPSJEZXNjb21wcmltaWVuZG8iCl9NU0dfREVTVF9FWElTVFM9IkVsIGFyY2hpdm8gZGUgZGVzdGlubyB5YSBleGlzdGUiCl9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU09IkluZGljYSBvdHJvIGRlc3Rpbm8gcGFyYSBzaHVuaXQyIGNvbiBlbCBwYXLDoW1ldHJvIgpJTkRFTlRfU1RSSU5HPSIiCl9ERVNUX1BBVEg9IiRQV0Qvc2h1bml0MiIKR0lUSFVCX0FQSV9DVVJMX0FVVEg9IiIKaWYgWyAtbiAiJEdJVEhVQl9VU0VSTkFNRSIgXSAmJiBbIC1uICIkR0lUSFVCX1RPS0VOIiBdOyB0aGVuCiAgR0lUSFVCX0FQSV9DVVJMX0FVVEg9IiRHSVRIVUJfVVNFUk5BTUU6JEdJVEhVQl9UT0tFTiIKZmk7CmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC0taW5kZW50KQogICAgc2hpZnQKICAgIElOREVOVF9TVFJJTkc9JDEKICAgIHNoaWZ0CiAgICA7OwogICAgLS1kZXN0LXBhdGgpCiAgICBzaGlmdAogICAgX0RFU1RfUEFUSD0kMQogICAgc2hpZnQKICAgIDs7CiAgZXNhYwpkb25lCl9ERVNUX0RJUlBBVEg9IiQoZGlybmFtZSAiJF9ERVNUX1BBVEgiKSIKZnVuY3Rpb24gcHJpbnRJbmRlbnQoKSB7CiAgcHJpbnRmICIlcyIgIiRJTkRFTlRfU1RSSU5HIgp9CmlmIFsgIiQoY29tbWFuZCAtdiBwYWNtYW4pIiA9ICIiIF07IHRoZW4KICBpZiBbIC16ICIkX1NDUklQVF9GSUxFTkFNRSIgXTsgdGhlbgogICAgZmlsZXBhdGg9InNyYy91bml4L18vZG93bmxvYWQvcGFjYXB0L21haW4uc2giCiAgICBiYXNoICIkZmlsZXBhdGgiID4gL2Rldi9udWxsCiAgZWxzZQogICAgdXJsPSJodHRwczovL21vbmRlamEuZ2l0aHViLmlvL3NocmVhZC91bml4L18vZG93bmxvYWQvcGFjYXB0LyRfU0NSSVBUX0ZJTEVOQU1FIgogICAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKICBmaTsKZmk7CklOU1RBTExBVElPTl9ERVBFTkRFTkNJRVM9KAogICJqcSIKKQpmb3IgREVQIGluICIke0lOU1RBTExBVElPTl9ERVBFTkRFTkNJRVNbQF19IjsgZG8KICBpZiBbWyAiJChzdWRvIHBhY21hbiAtUWkgIiRERVAiIDI+IC9kZXYvbnVsbCB8IGdyZXAgU3RhdHVzKSIgIT0gIlN0YXR1czogaW5zdGFsbCBvayBpbnN0YWxsZWQiIF1dOyB0aGVuCiAgICBzdWRvIHBhY21hbiAtUyAtLSAteSAiJERFUCIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogIGZpOwpkb25lOwpfR0VUX1NIVU5JVF9SRUxFQVNFU19VUkw9Imh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3Mva3dhcmQvc2h1bml0Mi9yZWxlYXNlcyIKZnVuY3Rpb24gZ2V0U2h1bml0TGFzdGVzdFZlcnNpb24oKSB7CiAgX1NIVU5JVF9SRUxFQVNFU19JTkZPPSIkKGN1cmwgLXNMICIkR0lUSFVCX0FQSV9DVVJMX0FVVEgiICIkX0dFVF9TSFVOSVRfUkVMRUFTRVNfVVJMIiAyPiYxKSIKICBfU0hVTklUX1JFTEVBU0VTX0lORk9fTUVTU0FHRT0iJChlY2hvICIkX1NIVU5JVF9SRUxFQVNFU19JTkZPIiB8IGpxIC1yICcubWVzc2FnZScgMj4mMSkiCiAgX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0VfRVhJVF9DT0RFPSQ/CiAgaWYgWyAkX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0VfRVhJVF9DT0RFIC1lcSAwIF07IHRoZW4KICAgIHByaW50ZiAiXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzXG4iICIkX01TR19FUlJPUl9SRVRSSUVWSU5HX1NIVU5JVF9SRUxFQVNFU19JTkZPIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzXG4iICIkX01TR19VUkwiICIkX0dFVF9TSFVOSVRfUkVMRUFTRVNfVVJMIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzXG4iICIkX01TR19FUlJPUiIgIiRfU0hVTklUX1JFTEVBU0VTX0lORk9fTUVTU0FHRSIgPiYyCiAgICBleGl0ICRfU0hVTklUX1JFTEVBU0VTX0lORk9fTUVTU0FHRV9FWElUX0NPREUKICBmaTsKICBfUEFSU0VfU0hVTklUX0xBU1RFU1RfVkVSU0lPTj0kKAogICAgZWNobyAiJF9TSFVOSVRfUkVMRUFTRVNfSU5GTyIgfCBcCiAgICBqcSAtciAiLlswXS5uYW1lIiAyPiYxCiAgKQogIF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERT0kPwogIGlmIFsgJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERSAtbmUgMCBdOyB0aGVuCiAgICBwcmludGYgIlxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIiA+JjIKICAgIHByaW50ZiAiXG4lc1xuIiAiJF9NU0dfRVJST1JfUEFSU0lOR19MQVNURVNUX1NIVU5JVF9SRUxFQVNFIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzXG4iICIkX01TR19VUkwiICIkX0dFVF9TSFVOSVRfTEFURVNUX1ZFUlNJT05fVVJMIiA+JjIKICAgIHByaW50ZiAiJXM6ICVkXG4iICIkX01TR19FUlJPUl9DT0RFIiAiJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERSIgPiYyCiAgICBwcmludGYgIiVzOiAlcyIgIiRfTVNHX0VSUk9SIiAiJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIiA+JjIKICAgIGV4aXQgJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERQogIGZpOwogIF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OPSIkKHByaW50ZiAiJXMiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iIHwgY3V0IC1kJyAnIC1mMikiCn0KZnVuY3Rpb24gZG93bmxvYWRTaHVuaXQoKSB7CiAgX0RPV05MT0FEX1NIVU5JVF9VUkw9Imh0dHBzOi8vZ2l0aHViLmNvbS9rd2FyZC9zaHVuaXQyL2FyY2hpdmUvdiQxLnRhci5neiIKICBfRE9XTkxPQURfU0hVTklUX09VVFBVVD0iJChjdXJsIC1zTCAiJF9ET1dOTE9BRF9TSFVOSVRfVVJMIiAtbyAiJDIiIDI+JjEpIgogIF9ET1dOTE9BRF9TSFVOSVRfRVhJVF9DT0RFPSQ/CiAgaWYgIFsgJF9ET1dOTE9BRF9TSFVOSVRfRVhJVF9DT0RFIC1uZSAwIF07IHRoZW4KICAgIHByaW50ZiAiXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzIHYlc1xuIiAiJF9NU0dfRVJST1JfRE9XTkxPQURJTkdfU0hVTklUIiAiJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzXG4iICIkX01TR19VUkwiICIkX0RPV05MT0FEX1NIVU5JVF9VUkwiID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX0VSUk9SIiAiJF9ET1dOTE9BRF9TSFVOSVRfT1VUUFVUIiA+JjIKICAgIGV4aXQgJF9ET1dOTE9BRF9TSFVOSVRfRVhJVF9DT0RFCiAgZmk7Cn0KZnVuY3Rpb24gbWFpbigpIHsKICBpZiBbIC1mICIkX0RFU1RfUEFUSCIgXSB8fCBbIC1kICIkX0RFU1RfUEFUSCIgXTsgdGhlbgogICAgcHJpbnRmICIlcyAoJXMpXG4iICIkX01TR19ERVNUX0VYSVNUUyIgIiRfREVTVF9QQVRIIiA+JjIKICAgIHByaW50ZiAiJXMgJy0tZGVzdC1wYXRoJy5cbiIgIiRfTVNHX0lORElDQVRFX0FOT1RIRVJfREVTVF9XSVRIX1BBUkFNIiA+JjIKICAgIGV4aXQgMQogIGZpOwogIHByaW50SW5kZW50CiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfQ0hFQ0tJTkdfU0hVTklUIgogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfUkVUUklFVklOR19TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIgogIGdldFNodW5pdExhc3Rlc3RWZXJzaW9uCiAgcHJpbnRmICIgKHYlcykiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19ET1dOTE9BRElOR19TSFVOSVQiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgZG93bmxvYWRTaHVuaXQgIiRfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIgIiRfREVTVF9ESVJQQVRIL3NodW5pdDIudGFyLmd6IgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfVU5aSVBQSU5HX1NIVU5JVCIKICB0YXIgeHpmICIkX0RFU1RfRElSUEFUSC9zaHVuaXQyLnRhci5neiIgLUMgIiRfREVTVF9ESVJQQVRIIiB8fCBleGl0ICQ/CiAgbXYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDItJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OL3NodW5pdDIiICIkX0RFU1RfUEFUSCIKICBybSAtcmYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDItJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIgogIHJtIC1mICIkX0RFU1RfRElSUEFUSC9zaHVuaXQyLnRhci5neiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKfQohIChyZXR1cm4gMCAyPi9kZXYvbnVsbCkgJiYgbWFpbg=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
