#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfVVJMPSJVUkwiCl9NU0dfRVJST1I9IkVycm9yIgpfTVNHX0VSUk9SX0NPREU9IkVycm9yIGNvZGUiCl9NU0dfRVJST1JfUkVUUklFVklOR19TSFVOSVRfUkVMRUFTRVNfSU5GTz0iQW4gZXJyb3IgaGFwcGVuIHJldHJpZXZpbmcgc2h1bml0MiByZWxlYXNlcyBpbmZvcm1hdGlvbiBmcm9tIEdpdGh1YiBBUEkuIgpfTVNHX0NIRUNLSU5HX1NIVU5JVD0iQ2hlY2tpbmcgc2h1bml0Mi4uLiIKX01TR19SRVRSSUVWSU5HX1NIVU5JVF9MQVNURVNUX1ZFUlNJT049IlJldHJpZXZpbmcgbGFzdGVzdCB2ZXJzaW9uLi4uIgpfTVNHX0VSUk9SX1BBUlNJTkdfTEFTVEVTVF9TSFVOSVRfUkVMRUFTRT0iQW4gZXJyb3IgaGFwcGVuIHBhcnNpbmcgbGFzdGVzdCBzaHVuaXQyIHJlbGVhc2UgdmVyc2lvbiBmcm9tIEdpdGh1YiBBUEkuIgpfTVNHX0RPV05MT0FESU5HX1NIVU5JVD0iRG93bmxvYWRpbmcgc2h1bml0MiIKX01TR19FUlJPUl9ET1dOTE9BRElOR19TSFVOSVQ9IkFuIGVycm9yIGhhcHBlbiBkb3dubG9hZGluZyBzaHVuaXQyIgpfTVNHX1VOWklQUElOR19TSFVOSVQ9IlVuemlwcGluZy4uLiIKX01TR19ERVNUX0VYSVNUUz0iRGVzdGluYXRpb24gZmlsZSBleGlzdHMiCl9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU09IkluZGljYXRlIGFub3RoZXIgZGVzdGluYXRpb24gZm9yIHNodW5pdDIgd2l0aCBwYXJhbWV0ZXIiCklOREVOVF9TVFJJTkc9IiIKX0RFU1RfUEFUSD0iJFBXRC9zaHVuaXQyIgpHSVRIVUJfQVBJX0NVUkxfQVVUSD0iIgppZiBbIC1uICIkR0lUSFVCX1VTRVJOQU1FIiBdICYmIFsgLW4gIiRHSVRIVUJfVE9LRU4iIF07IHRoZW4KICBHSVRIVUJfQVBJX0NVUkxfQVVUSD0iJEdJVEhVQl9VU0VSTkFNRTokR0lUSFVCX1RPS0VOIgpmaTsKZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgICAtLWRlc3QtcGF0aCkKICAgIHNoaWZ0CiAgICBfREVTVF9QQVRIPSQxCiAgICBzaGlmdAogICAgOzsKICBlc2FjCmRvbmUKX0RFU1RfRElSUEFUSD0iJChkaXJuYW1lICIkX0RFU1RfUEFUSCIpIgpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogIGlmIFsgLXogIiRfU0NSSVBUX0ZJTEVOQU1FIiBdOyB0aGVuCiAgICBmaWxlcGF0aD0ic3JjL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvbWFpbi5zaCIKICAgIGJhc2ggIiRmaWxlcGF0aCIgPiAvZGV2L251bGwKICBlbHNlCiAgICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgICBjdXJsIC1zTCAiJHVybCIgfCBzdWRvIGJhc2ggLSA+IC9kZXYvbnVsbAogIGZpOwpmaTsKSU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFUz0oCiAgImpxIgopCmZvciBERVAgaW4gIiR7SU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFU1tAXX0iOyBkbwogIGlmIFtbICIkKHN1ZG8gcGFjbWFuIC1RaSAiJERFUCIgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICAgIHN1ZG8gcGFjbWFuIC1TIC0tIC15ICIkREVQIiA+IC9kZXYvbnVsbCB8fCBleGl0ICQ/CiAgZmk7CmRvbmU7Cl9HRVRfU0hVTklUX1JFTEVBU0VTX1VSTD0iaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9rd2FyZC9zaHVuaXQyL3JlbGVhc2VzIgpmdW5jdGlvbiBnZXRTaHVuaXRMYXN0ZXN0VmVyc2lvbigpIHsKICBfU0hVTklUX1JFTEVBU0VTX0lORk89IiQoY3VybCAtc0wgIiRHSVRIVUJfQVBJX0NVUkxfQVVUSCIgIiRfR0VUX1NIVU5JVF9SRUxFQVNFU19VUkwiIDI+JjEpIgogIF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFPSIkKGVjaG8gIiRfU0hVTklUX1JFTEVBU0VTX0lORk8iIHwganEgLXIgJy5tZXNzYWdlJyAyPiYxKSIKICBfU0hVTklUX1JFTEVBU0VTX0lORk9fTUVTU0FHRV9FWElUX0NPREU9JD8KICBpZiBbICRfU0hVTklUX1JFTEVBU0VTX0lORk9fTUVTU0FHRV9FWElUX0NPREUgLWVxIDAgXTsgdGhlbgogICAgcHJpbnRmICJcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXNcbiIgIiRfTVNHX0VSUk9SX1JFVFJJRVZJTkdfU0hVTklUX1JFTEVBU0VTX0lORk8iID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfR0VUX1NIVU5JVF9SRUxFQVNFU19VUkwiID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX0VSUk9SIiAiJF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFIiA+JjIKICAgIGV4aXQgJF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFX0VYSVRfQ09ERQogIGZpOwogIF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OPSQoCiAgICBlY2hvICIkX1NIVU5JVF9SRUxFQVNFU19JTkZPIiB8IFwKICAgIGpxIC1yICIuWzBdLm5hbWUiIDI+JjEKICApCiAgX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFPSQ/CiAgaWYgWyAkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFIC1uZSAwIF07IHRoZW4KICAgIHByaW50ZiAiXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzXG4iICIkX01TR19FUlJPUl9QQVJTSU5HX0xBU1RFU1RfU0hVTklUX1JFTEVBU0UiID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfR0VUX1NIVU5JVF9MQVRFU1RfVkVSU0lPTl9VUkwiID4mMgogICAgcHJpbnRmICIlczogJWRcbiIgIiRfTVNHX0VSUk9SX0NPREUiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzIiAiJF9NU0dfRVJST1IiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iID4mMgogICAgZXhpdCAkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFCiAgZmk7CiAgX1NIVU5JVF9MQVNURVNUX1ZFUlNJT049IiQocHJpbnRmICIlcyIgIiRfUEFSU0VfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIgfCBjdXQgLWQnICcgLWYyKSIKfQpmdW5jdGlvbiBkb3dubG9hZFNodW5pdCgpIHsKICBfRE9XTkxPQURfU0hVTklUX1VSTD0iaHR0cHM6Ly9naXRodWIuY29tL2t3YXJkL3NodW5pdDIvYXJjaGl2ZS92JDEudGFyLmd6IgogIF9ET1dOTE9BRF9TSFVOSVRfT1VUUFVUPSIkKGN1cmwgLXNMICIkX0RPV05MT0FEX1NIVU5JVF9VUkwiIC1vICIkMiIgMj4mMSkiCiAgX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREU9JD8KICBpZiAgWyAkX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREUgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICJcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXMgdiVzXG4iICIkX01TR19FUlJPUl9ET1dOTE9BRElOR19TSFVOSVQiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfRE9XTkxPQURfU0hVTklUX1VSTCIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVJST1IiICIkX0RPV05MT0FEX1NIVU5JVF9PVVRQVVQiID4mMgogICAgZXhpdCAkX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREUKICBmaTsKfQpmdW5jdGlvbiBtYWluKCkgewogIGlmIFsgLWYgIiRfREVTVF9QQVRIIiBdIHx8IFsgLWQgIiRfREVTVF9QQVRIIiBdOyB0aGVuCiAgICBwcmludGYgIiVzICglcylcbiIgIiRfTVNHX0RFU1RfRVhJU1RTIiAiJF9ERVNUX1BBVEgiID4mMgogICAgcHJpbnRmICIlcyAnLS1kZXN0LXBhdGgnLlxuIiAiJF9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU0iID4mMgogICAgZXhpdCAxCiAgZmk7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19TSFVOSVQiCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19SRVRSSUVWSU5HX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgZ2V0U2h1bml0TGFzdGVzdFZlcnNpb24KICBwcmludGYgIiAodiVzKSIgIiRfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0RPV05MT0FESU5HX1NIVU5JVCIgIiRfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIKICBkb3dubG9hZFNodW5pdCAiJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIiAiJF9ERVNUX0RJUlBBVEgvc2h1bml0Mi50YXIuZ3oiCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19VTlpJUFBJTkdfU0hVTklUIgogIHRhciB4emYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDIudGFyLmd6IiAtQyAiJF9ERVNUX0RJUlBBVEgiIHx8IGV4aXQgJD8KICBtdiAiJF9ERVNUX0RJUlBBVEgvc2h1bml0Mi0kX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04vc2h1bml0MiIgIiRfREVTVF9QQVRIIgogIHJtIC1yZiAiJF9ERVNUX0RJUlBBVEgvc2h1bml0Mi0kX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgcm0gLWYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDIudGFyLmd6IgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgp9CiEgKHJldHVybiAwIDI+L2Rldi9udWxsKSAmJiBtYWlu'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
