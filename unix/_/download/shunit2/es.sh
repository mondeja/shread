#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfVVJMPSJVUkwiCl9NU0dfRVJST1I9IkVycm9yIgpfTVNHX0VSUk9SX0NPREU9IkPDs2RpZ28gZGUgZXJyb3IiCl9NU0dfRVJST1JfUkVUUklFVklOR19TSFVOSVRfUkVMRUFTRVNfSU5GTz0iT2N1cnJpw7MgdW4gZXJyb3Igb2J0ZW5pZW5kbyBsYSBpbmZvcm1hY2nDs24gZGUgbGFzIHJlbGVhc2VzIGRlIHNodW5pdDIgZGUgbGEgQVBJIGRlIEdpdGh1Yi4iCl9NU0dfQ0hFQ0tJTkdfU0hVTklUPSJDb21wcm9iYW5kbyBzaHVuaXQyLi4uIgpfTVNHX1JFVFJJRVZJTkdfU0hVTklUX0xBU1RFU1RfVkVSU0lPTj0iT2J0ZW5pZW5kbyBsYSDDumx0aW1hIHZlcnNpb24uLi4iCl9NU0dfRVJST1JfUEFSU0lOR19MQVNURVNUX1NIVU5JVF9SRUxFQVNFPSJPY3VycmnDsyB1biBlcnJvciBwYXJzZWFuZG8gbGEgdmVyc2nDs24gZGUgbGEgw7psdGltYSByZWxlYXNlIGRlIHNodW5pdDIgZGUgbGEgQVBJIGRlIEdpdGh1Yi4iCl9NU0dfRE9XTkxPQURJTkdfU0hVTklUPSJEZXNjYXJnYW5kbyBzaHVuaXQyIgpfTVNHX0VSUk9SX0RPV05MT0FESU5HX1NIVU5JVD0iT2N1cnJpw7MgdW4gZXJyb3IgZGVzY2FyZ2FuZG8gc2h1bml0MiIKX01TR19VTlpJUFBJTkdfU0hVTklUPSJEZXNjb21wcmltaWVuZG8iCl9NU0dfREVTVF9FWElTVFM9IkVsIGFyY2hpdm8gZGUgZGVzdGlubyB5YSBleGlzdGUiCl9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU09IkluZGljYSBvdHJvIGRlc3Rpbm8gcGFyYSBzaHVuaXQyIGNvbiBlbCBwYXLDoW1ldHJvIgpHSVRIVUJfQVBJX0NVUkxfQVVUSD0iIgppZiBbIC1uICIkR0lUSFVCX1VTRVJOQU1FIiBdICYmIFsgLW4gIiRHSVRIVUJfVE9LRU4iIF07IHRoZW4KICBHSVRIVUJfQVBJX0NVUkxfQVVUSD0iJEdJVEhVQl9VU0VSTkFNRTokR0lUSFVCX1RPS0VOIgpmaTsKSU5ERU5UX1NUUklORz0iIgpfREVTVF9QQVRIPSIkUFdEL3NodW5pdDIiCmZ1bmN0aW9uIHVzYWdlIHsKICAgIGNhdCA8PEhFTFBfVVNBR0UKc3JjL3VuaXgvXy9kb3dubG9hZC9zaHVuaXQyIFstaF0gWy0tZGVzdC1wYXRoXQoKICBEb3dubG9hZHMgc2h1bml0Mi4KCk9wdGlvbnM6CiAgLWgsIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBoZWxwIG1lc3NhZ2UgYW5kIGV4aXQuCiAgLS1kZXN0LXBhdGggICAgICAgICAgICAgICAgICAgICAgIERlc3RpbmF0aW9uIHBhdGggb2YgdGhlIGRvd25sb2FkZWQgYmluYXJ5LiBCeSBkZWZhdWx0ICckX0RFU1RfUEFUSCcuCgoKSEVMUF9VU0FHRQogICAgZXhpdCAxCn0KZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLWl8LS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgICAtaHwtLWhlbHApCiAgICBzaGlmdAogICAgdXNhZ2UKICAgIDs7CiAgICAtLWRlc3QtcGF0aCkKICAgIHNoaWZ0CiAgICBfREVTVF9QQVRIPSQxCiAgICBzaGlmdAogICAgOzsKICBlc2FjCmRvbmUKZnVuY3Rpb24gcHJpbnRJbmRlbnQoKSB7CiAgcHJpbnRmICIlcyIgIiRJTkRFTlRfU1RSSU5HIgp9Cl9ERVNUX0RJUlBBVEg9IiQoZGlybmFtZSAiJF9ERVNUX1BBVEgiKSIKaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogIGlmIFsgLXogIiRfU0NSSVBUX0ZJTEVOQU1FIiBdOyB0aGVuCiAgICBmaWxlcGF0aD0ic3JjL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvbWFpbi5zaCIKICAgIGJhc2ggIiRmaWxlcGF0aCIgPiAvZGV2L251bGwKICBlbHNlCiAgICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgICBjdXJsIC1zTCAiJHVybCIgfCBzdWRvIGJhc2ggLSA+IC9kZXYvbnVsbAogIGZpOwpmaTsKSU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFUz0oCiAgImpxIgopCmZvciBERVAgaW4gIiR7SU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFU1tAXX0iOyBkbwogIGlmIFtbICIkKHN1ZG8gcGFjbWFuIC1RaSAiJERFUCIgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICAgIHN1ZG8gcGFjbWFuIC1TIC0tIC15ICIkREVQIiA+IC9kZXYvbnVsbCB8fCBleGl0ICQ/CiAgZmk7CmRvbmU7Cl9HRVRfU0hVTklUX1JFTEVBU0VTX1VSTD0iaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9rd2FyZC9zaHVuaXQyL3JlbGVhc2VzIgpmdW5jdGlvbiBnZXRTaHVuaXRMYXN0ZXN0VmVyc2lvbigpIHsKICBfU0hVTklUX1JFTEVBU0VTX0lORk89IiQoY3VybCAtc0wgIiRHSVRIVUJfQVBJX0NVUkxfQVVUSCIgIiRfR0VUX1NIVU5JVF9SRUxFQVNFU19VUkwiIDI+JjEpIgogIF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFPSIkKGVjaG8gIiRfU0hVTklUX1JFTEVBU0VTX0lORk8iIHwganEgLXIgJy5tZXNzYWdlJyAyPiYxKSIKICBfU0hVTklUX1JFTEVBU0VTX0lORk9fTUVTU0FHRV9FWElUX0NPREU9JD8KICBpZiBbICRfU0hVTklUX1JFTEVBU0VTX0lORk9fTUVTU0FHRV9FWElUX0NPREUgLWVxIDAgXTsgdGhlbgogICAgcHJpbnRmICJcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXNcbiIgIiRfTVNHX0VSUk9SX1JFVFJJRVZJTkdfU0hVTklUX1JFTEVBU0VTX0lORk8iID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfR0VUX1NIVU5JVF9SRUxFQVNFU19VUkwiID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX0VSUk9SIiAiJF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFIiA+JjIKICAgIGV4aXQgJF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFX0VYSVRfQ09ERQogIGZpOwogIF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OPSQoCiAgICBlY2hvICIkX1NIVU5JVF9SRUxFQVNFU19JTkZPIiB8ICAgICBqcSAtciAiLlswXS5uYW1lIiAyPiYxCiAgKQogIF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERT0kPwogIGlmIFsgJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERSAtbmUgMCBdOyB0aGVuCiAgICBwcmludGYgIlxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIiA+JjIKICAgIHByaW50ZiAiXG4lc1xuIiAiJF9NU0dfRVJST1JfUEFSU0lOR19MQVNURVNUX1NIVU5JVF9SRUxFQVNFIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzXG4iICIkX01TR19VUkwiICIkX0dFVF9TSFVOSVRfTEFURVNUX1ZFUlNJT05fVVJMIiA+JjIKICAgIHByaW50ZiAiJXM6ICVkXG4iICIkX01TR19FUlJPUl9DT0RFIiAiJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERSIgPiYyCiAgICBwcmludGYgIiVzOiAlcyIgIiRfTVNHX0VSUk9SIiAiJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIiA+JjIKICAgIGV4aXQgJF9QQVJTRV9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OX0VYSVRfQ09ERQogIGZpOwogIF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OPSIkKHByaW50ZiAiJXMiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iIHwgY3V0IC1kJyAnIC1mMikiCn0KZnVuY3Rpb24gZG93bmxvYWRTaHVuaXQoKSB7CiAgX0RPV05MT0FEX1NIVU5JVF9VUkw9Imh0dHBzOi8vZ2l0aHViLmNvbS9rd2FyZC9zaHVuaXQyL2FyY2hpdmUvdiQxLnRhci5neiIKICBfRE9XTkxPQURfU0hVTklUX09VVFBVVD0iJChjdXJsIC1zTCAiJF9ET1dOTE9BRF9TSFVOSVRfVVJMIiAtbyAiJDIiIDI+JjEpIgogIF9ET1dOTE9BRF9TSFVOSVRfRVhJVF9DT0RFPSQ/CiAgaWYgIFsgJF9ET1dOTE9BRF9TSFVOSVRfRVhJVF9DT0RFIC1uZSAwIF07IHRoZW4KICAgIHByaW50ZiAiXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzIHYlc1xuIiAiJF9NU0dfRVJST1JfRE9XTkxPQURJTkdfU0hVTklUIiAiJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzXG4iICIkX01TR19VUkwiICIkX0RPV05MT0FEX1NIVU5JVF9VUkwiID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX0VSUk9SIiAiJF9ET1dOTE9BRF9TSFVOSVRfT1VUUFVUIiA+JjIKICAgIGV4aXQgJF9ET1dOTE9BRF9TSFVOSVRfRVhJVF9DT0RFCiAgZmk7Cn0KZnVuY3Rpb24gbWFpbigpIHsKICBpZiBbIC1mICIkX0RFU1RfUEFUSCIgXSB8fCBbIC1kICIkX0RFU1RfUEFUSCIgXTsgdGhlbgogICAgcHJpbnRmICIlcyAoJXMpXG4iICIkX01TR19ERVNUX0VYSVNUUyIgIiRfREVTVF9QQVRIIiA+JjIKICAgIHByaW50ZiAiJXMgJy0tZGVzdC1wYXRoJy5cbiIgIiRfTVNHX0lORElDQVRFX0FOT1RIRVJfREVTVF9XSVRIX1BBUkFNIiA+JjIKICAgIGV4aXQgMQogIGZpOwogIHByaW50SW5kZW50CiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfQ0hFQ0tJTkdfU0hVTklUIgogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfUkVUUklFVklOR19TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIgogIGdldFNodW5pdExhc3Rlc3RWZXJzaW9uCiAgcHJpbnRmICIgKHYlcykiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19ET1dOTE9BRElOR19TSFVOSVQiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgZG93bmxvYWRTaHVuaXQgIiRfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIgIiRfREVTVF9ESVJQQVRIL3NodW5pdDIudGFyLmd6IgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfVU5aSVBQSU5HX1NIVU5JVCIKICB0YXIgeHpmICIkX0RFU1RfRElSUEFUSC9zaHVuaXQyLnRhci5neiIgLUMgIiRfREVTVF9ESVJQQVRIIiB8fCBleGl0ICQ/CiAgbXYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDItJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OL3NodW5pdDIiICIkX0RFU1RfUEFUSCIKICBybSAtcmYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDItJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIgogIHJtIC1mICIkX0RFU1RfRElSUEFUSC9zaHVuaXQyLnRhci5neiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKfQppZiAocmV0dXJuIDAgMj4vZGV2L251bGwpOyB0aGVuCiAgZXhwb3J0VmFyaWFibGVzCmVsc2UKICBtYWluCmZpOw=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
