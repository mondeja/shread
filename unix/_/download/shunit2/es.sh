#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfVVJMPSIiCl9NU0dfRVJST1I9IiIKX01TR19FUlJPUl9DT0RFPSIiCl9NU0dfRVJST1JfUkVUUklFVklOR19TSFVOSVRfUkVMRUFTRVNfSU5GTz0iIgpfTVNHX0NIRUNLSU5HX1NIVU5JVD0iIgpfTVNHX1JFVFJJRVZJTkdfU0hVTklUX0xBU1RFU1RfVkVSU0lPTj0iIgpfTVNHX0VSUk9SX1BBUlNJTkdfTEFTVEVTVF9TSFVOSVRfUkVMRUFTRT0iIgpfTVNHX0RPV05MT0FESU5HX1NIVU5JVD0iIgpfTVNHX0VSUk9SX0RPV05MT0FESU5HX1NIVU5JVD0iIgpfTVNHX1VOWklQUElOR19TSFVOSVQ9IiIKX01TR19ERVNUX0VYSVNUUz0iIgpfTVNHX0lORElDQVRFX0FOT1RIRVJfREVTVF9XSVRIX1BBUkFNPSIiCkdJVEhVQl9BUElfQ1VSTF9BVVRIPSIiCmlmIFsgLW4gIiRHSVRIVUJfVVNFUk5BTUUiIF0gJiYgWyAtbiAiJEdJVEhVQl9UT0tFTiIgXTsgdGhlbgogIEdJVEhVQl9BUElfQ1VSTF9BVVRIPSIkR0lUSFVCX1VTRVJOQU1FOiRHSVRIVUJfVE9LRU4iCmZpOwpJTkRFTlRfU1RSSU5HPSIiCl9ERVNUX1BBVEg9IiRQV0Qvc2h1bml0MiIKZnVuY3Rpb24gdXNhZ2UgewogICAgY2F0IDw8SEVMUF9VU0FHRQpVc286IHVuaXgvXy9kb3dubG9hZC9zaHVuaXQyLyRfU0NSSVBUX0ZJTEVOQU1FIFstaF0gWy1pIFNUUklOR10gWy0tZGVzdC1wYXRoXQoKICBEb3dubG9hZHMgc2h1bml0Mi4KCk9wY2lvbmVzOgogIC1oLCAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0LgogIC1pIFNUUklORywgLS1pbmRlbnQgU1RSSU5HICAgICAgICBFYWNoIGxpbmUgb2YgdGhlIHNjcmlwdCBvdXRwdXQgd2lsbCBiZSBwcmVjZWRlZCB3aXRoIHRoZSBzdHJpbmcgZGVmaW5lZCBpbiB0aGlzIHBhcmFtZXRlci4KICAtLWRlc3QtcGF0aCAgICAgICAgICAgICAgICAgICAgICAgRGVzdGluYXRpb24gcGF0aCBvZiB0aGUgZG93bmxvYWRlZCBiaW5hcnkuIEJ5IGRlZmF1bHQgJyRfREVTVF9QQVRIJy4KCkhFTFBfVVNBR0UKICAgIGV4aXQgMQp9CmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC1pfC0taW5kZW50KQogICAgSU5ERU5UX1NUUklORz0iJDIiCiAgICBzaGlmdCAyCiAgICA7OwogICAgLWh8LS1oZWxwKQogICAgc2hpZnQKICAgIHVzYWdlCiAgICA7OyAgICAKICAgIC0tZGVzdC1wYXRoKQogICAgc2hpZnQKICAgIF9ERVNUX1BBVEg9JDEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KX0RFU1RfRElSUEFUSD0iJChkaXJuYW1lICIkX0RFU1RfUEFUSCIpIgpmdW5jdGlvbiBpbnN0YWxsUGFjbWFuSWZOb3RJbnN0YWxsZWQoKSB7CiAgaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogICAgdXJsPSJodHRwczovL21vbmRlamEuZ2l0aHViLmlvL3NocmVhZC91bml4L18vZG93bmxvYWQvcGFjYXB0LyRfU0NSSVBUX0ZJTEVOQU1FIgogICAgY3VybCAtc0wgIiR1cmwiIHwgc3VkbyBiYXNoIC0gPiAvZGV2L251bGwKICBmaTsKfQpmdW5jdGlvbiBpbnN0YWxsU2NyaXB0RGVwZW5kZW5jaWVzKCkgewogIGluc3RhbGxQYWNtYW5JZk5vdEluc3RhbGxlZAogIElOU1RBTExBVElPTl9ERVBFTkRFTkNJRVM9KAogICAgImpxIgogICkKICBmb3IgREVQIGluICIke0lOU1RBTExBVElPTl9ERVBFTkRFTkNJRVNbQF19IjsgZG8KICAgIGlmIFtbICIkKHN1ZG8gcGFjbWFuIC1RaSAiJERFUCIgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICAgICAgc3VkbyBwYWNtYW4gLVMgLS0gLXkgIiRERVAiID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KICAgIGZpOwogIGRvbmU7Cn0KX0dFVF9TSFVOSVRfUkVMRUFTRVNfVVJMPSJodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zL2t3YXJkL3NodW5pdDIvcmVsZWFzZXMiCmZ1bmN0aW9uIGdldFNodW5pdExhc3Rlc3RWZXJzaW9uKCkgewogIF9TSFVOSVRfUkVMRUFTRVNfSU5GTz0iJChjdXJsIC1zTCAiJEdJVEhVQl9BUElfQ1VSTF9BVVRIIiAiJF9HRVRfU0hVTklUX1JFTEVBU0VTX1VSTCIgMj4mMSkiCiAgX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0U9IiQoZWNobyAiJF9TSFVOSVRfUkVMRUFTRVNfSU5GTyIgfCBqcSAtciAnLm1lc3NhZ2UnIDI+JjEpIgogIF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFX0VYSVRfQ09ERT0kPwogIGlmIFsgJF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFX0VYSVRfQ09ERSAtZXEgMCBdOyB0aGVuCiAgICBwcmludGYgIlxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIiA+JjIKICAgIHByaW50ZiAiXG4lc1xuIiAiJF9NU0dfRVJST1JfUkVUUklFVklOR19TSFVOSVRfUkVMRUFTRVNfSU5GTyIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfVVJMIiAiJF9HRVRfU0hVTklUX1JFTEVBU0VTX1VSTCIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVJST1IiICIkX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0UiID4mMgogICAgZXhpdCAkX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0VfRVhJVF9DT0RFCiAgZmk7CiAgX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT049JCgKICAgIGVjaG8gIiRfU0hVTklUX1JFTEVBU0VTX0lORk8iIHwgICAgIGpxIC1yICIuWzBdLm5hbWUiIDI+JjEKICApCiAgX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFPSQ/CiAgaWYgWyAkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFIC1uZSAwIF07IHRoZW4KICAgIHByaW50ZiAiXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzXG4iICIkX01TR19FUlJPUl9QQVJTSU5HX0xBU1RFU1RfU0hVTklUX1JFTEVBU0UiID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfR0VUX1NIVU5JVF9MQVRFU1RfVkVSU0lPTl9VUkwiID4mMgogICAgcHJpbnRmICIlczogJWRcbiIgIiRfTVNHX0VSUk9SX0NPREUiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzIiAiJF9NU0dfRVJST1IiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iID4mMgogICAgZXhpdCAkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFCiAgZmk7CiAgX1NIVU5JVF9MQVNURVNUX1ZFUlNJT049IiQocHJpbnRmICIlcyIgIiRfUEFSU0VfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIgfCBjdXQgLWQnICcgLWYyKSIKfQpmdW5jdGlvbiBkb3dubG9hZFNodW5pdCgpIHsKICBfRE9XTkxPQURfU0hVTklUX1VSTD0iaHR0cHM6Ly9naXRodWIuY29tL2t3YXJkL3NodW5pdDIvYXJjaGl2ZS92JDEudGFyLmd6IgogIF9ET1dOTE9BRF9TSFVOSVRfT1VUUFVUPSIkKGN1cmwgLXNMICIkX0RPV05MT0FEX1NIVU5JVF9VUkwiIC1vICIkMiIgMj4mMSkiCiAgX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREU9JD8KICBpZiAgWyAkX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREUgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICJcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXMgdiVzXG4iICIkX01TR19FUlJPUl9ET1dOTE9BRElOR19TSFVOSVQiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfRE9XTkxPQURfU0hVTklUX1VSTCIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVJST1IiICIkX0RPV05MT0FEX1NIVU5JVF9PVVRQVVQiID4mMgogICAgZXhpdCAkX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREUKICBmaTsKfQpmdW5jdGlvbiBtYWluKCkgewogIGlmIFsgLWYgIiRfREVTVF9QQVRIIiBdIHx8IFsgLWQgIiRfREVTVF9QQVRIIiBdOyB0aGVuCiAgICBwcmludGYgIiVzICglcylcbiIgIiRfTVNHX0RFU1RfRVhJU1RTIiAiJF9ERVNUX1BBVEgiID4mMgogICAgcHJpbnRmICIlcyAnLS1kZXN0LXBhdGgnLlxuIiAiJF9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU0iID4mMgogICAgZXhpdCAxCiAgZmk7CiAgaW5zdGFsbFNjcmlwdERlcGVuZGVuY2llcwogIHByaW50SW5kZW50CiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfQ0hFQ0tJTkdfU0hVTklUIgogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfUkVUUklFVklOR19TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIgogIGdldFNodW5pdExhc3Rlc3RWZXJzaW9uCiAgcHJpbnRmICIgKHYlcykiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19ET1dOTE9BRElOR19TSFVOSVQiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgZG93bmxvYWRTaHVuaXQgIiRfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIgIiRfREVTVF9ESVJQQVRIL3NodW5pdDIudGFyLmd6IgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICVzIiAiJF9NU0dfVU5aSVBQSU5HX1NIVU5JVCIKICB0YXIgeHpmICIkX0RFU1RfRElSUEFUSC9zaHVuaXQyLnRhci5neiIgLUMgIiRfREVTVF9ESVJQQVRIIiB8fCBleGl0ICQ/CiAgbXYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDItJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OL3NodW5pdDIiICIkX0RFU1RfUEFUSCIKICBybSAtcmYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDItJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIgogIHJtIC1mICIkX0RFU1RfRElSUEFUSC9zaHVuaXQyLnRhci5neiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKfQppZiAocmV0dXJuIDAgMj4vZGV2L251bGwpOyB0aGVuCiAgZXhwb3J0VmFyaWFibGVzCmVsc2UKICBtYWluCmZpOw=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
