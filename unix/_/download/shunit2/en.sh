#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfVVJMPSJVUkwiCl9NU0dfRVJST1I9IkVycm9yIgpfTVNHX0VSUk9SX0NPREU9IkVycm9yIGNvZGUiCl9NU0dfRVJST1JfUkVUUklFVklOR19TSFVOSVRfUkVMRUFTRVNfSU5GTz0iQW4gZXJyb3IgaGFwcGVuIHJldHJpZXZpbmcgc2h1bml0MiByZWxlYXNlcyBpbmZvcm1hdGlvbiBmcm9tIEdpdGh1YiBBUEkuIgpfTVNHX0NIRUNLSU5HX1NIVU5JVD0iQ2hlY2tpbmcgc2h1bml0Mi4uLiIKX01TR19SRVRSSUVWSU5HX1NIVU5JVF9MQVNURVNUX1ZFUlNJT049IlJldHJpZXZpbmcgbGFzdGVzdCB2ZXJzaW9uLi4uIgpfTVNHX0VSUk9SX1BBUlNJTkdfTEFTVEVTVF9TSFVOSVRfUkVMRUFTRT0iQW4gZXJyb3IgaGFwcGVuIHBhcnNpbmcgbGFzdGVzdCBzaHVuaXQyIHJlbGVhc2UgdmVyc2lvbiBmcm9tIEdpdGh1YiBBUEkuIgpfTVNHX0RPV05MT0FESU5HX1NIVU5JVD0iRG93bmxvYWRpbmcgc2h1bml0MiIKX01TR19FUlJPUl9ET1dOTE9BRElOR19TSFVOSVQ9IkFuIGVycm9yIGhhcHBlbiBkb3dubG9hZGluZyBzaHVuaXQyIgpfTVNHX1VOWklQUElOR19TSFVOSVQ9IlVuemlwcGluZy4uLiIKX01TR19ERVNUX0VYSVNUUz0iRGVzdGluYXRpb24gZmlsZSBleGlzdHMiCl9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU09IkluZGljYXRlIGFub3RoZXIgZGVzdGluYXRpb24gZm9yIHNodW5pdDIgd2l0aCBwYXJhbWV0ZXIiCkdJVEhVQl9BUElfQ1VSTF9BVVRIPSIiCmlmIFsgLW4gIiRHSVRIVUJfVVNFUk5BTUUiIF0gJiYgWyAtbiAiJEdJVEhVQl9UT0tFTiIgXTsgdGhlbgogIEdJVEhVQl9BUElfQ1VSTF9BVVRIPSIkR0lUSFVCX1VTRVJOQU1FOiRHSVRIVUJfVE9LRU4iCmZpOwpJTkRFTlRfU1RSSU5HPSIiCl9ERVNUX1BBVEg9IiRQV0Qvc2h1bml0MiIKZnVuY3Rpb24gdXNhZ2UgewogICAgY2F0IDw8SEVMUF9VU0FHRQpzcmMvdW5peC9fL2Rvd25sb2FkL3NodW5pdDIgWy1oXSBbLS1kZXN0LXBhdGhdCgogIERvd25sb2FkcyBzaHVuaXQyLgoKT3B0aW9uczoKICAtaCwgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIGhlbHAgbWVzc2FnZSBhbmQgZXhpdC4KICAtLWRlc3QtcGF0aCAgICAgICAgICAgICAgICAgICAgICAgRGVzdGluYXRpb24gcGF0aCBvZiB0aGUgZG93bmxvYWRlZCBiaW5hcnkuIEJ5IGRlZmF1bHQgJyRfREVTVF9QQVRIJy4KCgpIRUxQX1VTQUdFCiAgICBleGl0IDEKfQpmb3IgYXJnIGluICIkQCI7IGRvCiAgY2FzZSAkYXJnIGluCiAgICAtaXwtLWluZGVudCkKICAgIHNoaWZ0CiAgICBJTkRFTlRfU1RSSU5HPSQxCiAgICBzaGlmdAogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsKICAgIC0tZGVzdC1wYXRoKQogICAgc2hpZnQKICAgIF9ERVNUX1BBVEg9JDEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KX0RFU1RfRElSUEFUSD0iJChkaXJuYW1lICIkX0RFU1RfUEFUSCIpIgppZiBbICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIgPSAiIiBdOyB0aGVuCiAgaWYgWyAteiAiJF9TQ1JJUFRfRklMRU5BTUUiIF07IHRoZW4KICAgIGZpbGVwYXRoPSJzcmMvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC9tYWluLnNoIgogICAgYmFzaCAiJGZpbGVwYXRoIiA+IC9kZXYvbnVsbAogIGVsc2UKICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgIGN1cmwgLXNMICIkdXJsIiB8IHN1ZG8gYmFzaCAtID4gL2Rldi9udWxsCiAgZmk7CmZpOwpJTlNUQUxMQVRJT05fREVQRU5ERU5DSUVTPSgKICAianEiCikKZm9yIERFUCBpbiAiJHtJTlNUQUxMQVRJT05fREVQRU5ERU5DSUVTW0BdfSI7IGRvCiAgaWYgW1sgIiQoc3VkbyBwYWNtYW4gLVFpICIkREVQIiAyPiAvZGV2L251bGwgfCBncmVwIFN0YXR1cykiICE9ICJTdGF0dXM6IGluc3RhbGwgb2sgaW5zdGFsbGVkIiBdXTsgdGhlbgogICAgc3VkbyBwYWNtYW4gLVMgLS0gLXkgIiRERVAiID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KICBmaTsKZG9uZTsKX0dFVF9TSFVOSVRfUkVMRUFTRVNfVVJMPSJodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zL2t3YXJkL3NodW5pdDIvcmVsZWFzZXMiCmZ1bmN0aW9uIGdldFNodW5pdExhc3Rlc3RWZXJzaW9uKCkgewogIF9TSFVOSVRfUkVMRUFTRVNfSU5GTz0iJChjdXJsIC1zTCAiJEdJVEhVQl9BUElfQ1VSTF9BVVRIIiAiJF9HRVRfU0hVTklUX1JFTEVBU0VTX1VSTCIgMj4mMSkiCiAgX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0U9IiQoZWNobyAiJF9TSFVOSVRfUkVMRUFTRVNfSU5GTyIgfCBqcSAtciAnLm1lc3NhZ2UnIDI+JjEpIgogIF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFX0VYSVRfQ09ERT0kPwogIGlmIFsgJF9TSFVOSVRfUkVMRUFTRVNfSU5GT19NRVNTQUdFX0VYSVRfQ09ERSAtZXEgMCBdOyB0aGVuCiAgICBwcmludGYgIlxlWzkxbVx4RTJceDlDXHg5NVxlWzM5bVxuIiA+JjIKICAgIHByaW50ZiAiXG4lc1xuIiAiJF9NU0dfRVJST1JfUkVUUklFVklOR19TSFVOSVRfUkVMRUFTRVNfSU5GTyIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfVVJMIiAiJF9HRVRfU0hVTklUX1JFTEVBU0VTX1VSTCIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVJST1IiICIkX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0UiID4mMgogICAgZXhpdCAkX1NIVU5JVF9SRUxFQVNFU19JTkZPX01FU1NBR0VfRVhJVF9DT0RFCiAgZmk7CiAgX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT049JCgKICAgIGVjaG8gIiRfU0hVTklUX1JFTEVBU0VTX0lORk8iIHwgICAgIGpxIC1yICIuWzBdLm5hbWUiIDI+JjEKICApCiAgX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFPSQ/CiAgaWYgWyAkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFIC1uZSAwIF07IHRoZW4KICAgIHByaW50ZiAiXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzXG4iICIkX01TR19FUlJPUl9QQVJTSU5HX0xBU1RFU1RfU0hVTklUX1JFTEVBU0UiID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfR0VUX1NIVU5JVF9MQVRFU1RfVkVSU0lPTl9VUkwiID4mMgogICAgcHJpbnRmICIlczogJWRcbiIgIiRfTVNHX0VSUk9SX0NPREUiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFIiA+JjIKICAgIHByaW50ZiAiJXM6ICVzIiAiJF9NU0dfRVJST1IiICIkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iID4mMgogICAgZXhpdCAkX1BBUlNFX1NIVU5JVF9MQVNURVNUX1ZFUlNJT05fRVhJVF9DT0RFCiAgZmk7CiAgX1NIVU5JVF9MQVNURVNUX1ZFUlNJT049IiQocHJpbnRmICIlcyIgIiRfUEFSU0VfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIgfCBjdXQgLWQnICcgLWYyKSIKfQpmdW5jdGlvbiBkb3dubG9hZFNodW5pdCgpIHsKICBfRE9XTkxPQURfU0hVTklUX1VSTD0iaHR0cHM6Ly9naXRodWIuY29tL2t3YXJkL3NodW5pdDIvYXJjaGl2ZS92JDEudGFyLmd6IgogIF9ET1dOTE9BRF9TSFVOSVRfT1VUUFVUPSIkKGN1cmwgLXNMICIkX0RPV05MT0FEX1NIVU5JVF9VUkwiIC1vICIkMiIgMj4mMSkiCiAgX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREU9JD8KICBpZiAgWyAkX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREUgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICJcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICBwcmludGYgIlxuJXMgdiVzXG4iICIkX01TR19FUlJPUl9ET1dOTE9BRElOR19TSFVOSVQiICIkX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iID4mMgogICAgcHJpbnRmICIlczogJXNcbiIgIiRfTVNHX1VSTCIgIiRfRE9XTkxPQURfU0hVTklUX1VSTCIgPiYyCiAgICBwcmludGYgIiVzOiAlc1xuIiAiJF9NU0dfRVJST1IiICIkX0RPV05MT0FEX1NIVU5JVF9PVVRQVVQiID4mMgogICAgZXhpdCAkX0RPV05MT0FEX1NIVU5JVF9FWElUX0NPREUKICBmaTsKfQpmdW5jdGlvbiBtYWluKCkgewogIGlmIFsgLWYgIiRfREVTVF9QQVRIIiBdIHx8IFsgLWQgIiRfREVTVF9QQVRIIiBdOyB0aGVuCiAgICBwcmludGYgIiVzICglcylcbiIgIiRfTVNHX0RFU1RfRVhJU1RTIiAiJF9ERVNUX1BBVEgiID4mMgogICAgcHJpbnRmICIlcyAnLS1kZXN0LXBhdGgnLlxuIiAiJF9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU0iID4mMgogICAgZXhpdCAxCiAgZmk7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19TSFVOSVQiCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19SRVRSSUVWSU5HX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgZ2V0U2h1bml0TGFzdGVzdFZlcnNpb24KICBwcmludGYgIiAodiVzKSIgIiRfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIKICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0RPV05MT0FESU5HX1NIVU5JVCIgIiRfU0hVTklUX0xBU1RFU1RfVkVSU0lPTiIKICBkb3dubG9hZFNodW5pdCAiJF9TSFVOSVRfTEFTVEVTVF9WRVJTSU9OIiAiJF9ERVNUX0RJUlBBVEgvc2h1bml0Mi50YXIuZ3oiCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19VTlpJUFBJTkdfU0hVTklUIgogIHRhciB4emYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDIudGFyLmd6IiAtQyAiJF9ERVNUX0RJUlBBVEgiIHx8IGV4aXQgJD8KICBtdiAiJF9ERVNUX0RJUlBBVEgvc2h1bml0Mi0kX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04vc2h1bml0MiIgIiRfREVTVF9QQVRIIgogIHJtIC1yZiAiJF9ERVNUX0RJUlBBVEgvc2h1bml0Mi0kX1NIVU5JVF9MQVNURVNUX1ZFUlNJT04iCiAgcm0gLWYgIiRfREVTVF9ESVJQQVRIL3NodW5pdDIudGFyLmd6IgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgp9CmlmIChyZXR1cm4gMCAyPi9kZXYvbnVsbCk7IHRoZW4KICBleHBvcnRWYXJpYWJsZXMKZWxzZQogIG1haW4KZmk7'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
