#!/bin/bash
source <(printf 'IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfTVNHX0NIRUNLSU5HX1BBQ0FQVD0iQ2hlY2tpbmcgcGFjYXB0IgpfTVNHX1JFVFJJRVZJTkdfTEFTVEVTVF9WRVJTSU9OPSJSZXRyaWV2aW5nIGxhdGVzdCB2ZXJzaW9uIgpfTVNHX0lOU1RBTExFRD0iSW5zdGFsbGVkIgpfTVNHX0ZPVU5EX0lOU1RBTExFRD0iRm91bmQgaW5zdGFsbGVkIgpfTVNHX1VQREFURUQ9IlVwZGF0ZWQiCl9NU0dfREVTVF9FWElTVFM9IkRlc3RpbmF0aW9uIGZpbGUgZXhpc3RzIgpfTVNHX0lORElDQVRFX0FOT1RIRVJfREVTVF9XSVRIX1BBUkFNPSJJbmRpY2F0ZSBhbm90aGVyIGRlc3RpbmF0aW9uIGZvciBwYWNhcHQgd2l0aCBwYXJhbWV0ZXIiCklOREVOVF9TVFJJTkc9IiIKX0RFU1RfUEFUSD0iL3Vzci9sb2NhbC9iaW4vcGFjYXB0Igpmb3IgYXJnIGluICIkQCI7IGRvCiAgY2FzZSAkYXJnIGluCiAgICAtLWluZGVudCkKICAgIHNoaWZ0CiAgICBJTkRFTlRfU1RSSU5HPSQxCiAgICBzaGlmdAogICAgOzsKICAgIC0tZGVzdC1wYXRoKQogICAgc2hpZnQKICAgIF9ERVNUX1BBVEg9JDEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludFByZXBlbmRlZFN0ZG91dCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KSU5TVEFMTEFUSU9OX0RFUEVOREVOQ0lFUz0oCiAgImN1cmwiCikKZm9yIERFUCBpbiAiJHtJTlNUQUxMQVRJT05fREVQRU5ERU5DSUVTW0BdfSI7IGRvCiAgaWYgW1sgIiQoc3VkbyBkcGtnIC1zICIkREVQIiAyPiAvZGV2L251bGwgfCBncmVwIFN0YXR1cykiICE9ICJTdGF0dXM6IGluc3RhbGwgb2sgaW5zdGFsbGVkIiBdXTsgdGhlbgogICAgc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkgLXFxcSAiJERFUCIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogIGZpOwpkb25lOwpQQUNBUFRfRE9XTkxPQURfTElOSz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2ljeS9wYWNhcHQvbmcvcGFjYXB0IgpmdW5jdGlvbiBnZXRQYWNBcHRMYXN0ZXN0VmVyc2lvbiB7CiAgcm0gLWYgL3RtcC9wYWNhcHQKICBjdXJsIC1zTCAiJFBBQ0FQVF9ET1dOTE9BRF9MSU5LIiAtLW91dHB1dCAiL3RtcC9wYWNhcHQiCiAgX1BBQ0FQVF9MQVNURVNUX1ZFUlNJT049IiQoPCAiL3RtcC9wYWNhcHQiIGdyZXAgIgp9CmZ1bmN0aW9uIGdldFBhY0FwdEN1cnJlbnRWZXJzaW9uIHsKICBfUEFDQVBUX0NVUlJFTlRfVkVSU0lPTj0iIgogIFBBQ0FQVF9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IHBhY2FwdCkiCiAgaWYgWyAteiAiJFBBQ0FQVF9CSU5BUllfUEFUSCIgXTsgdGhlbgogICAgUEFDQVBUX0JJTkFSWV9QQVRIPSIkKGNvbW1hbmQgLXYgcGFjbWFuKSIKICBmaTsKICBpZiBbIC1uICIkUEFDQVBUX0JJTkFSWV9QQVRIIiBdOyB0aGVuCiAgICBfUEFDQVBUX0NVUlJFTlRfVkVSU0lPTj0kKAogICAgICA8ICIkUEFDQVBUX0JJTkFSWV9QQVRIIiBncmVwICJWZXJzaW9uOiIgfCBjdXQgLWQnICcgLWYzKQogIGZpOwp9CmZ1bmN0aW9uIGluc3RhbGxQYWNBcHQgewogIHN1ZG8gY3AgIi90bXAvcGFjYXB0IiAiJF9ERVNUX1BBVEgiCiAgc3VkbyBjaG1vZCA3NTUgIiRfREVTVF9QQVRIIgogIGlmIFsgLWYgIi91c3IvbG9jYWwvYmluL3BhY21hbiIgXTsgdGhlbgogICAgc3VkbyBybSAtZiAiL3Vzci9sb2NhbC9iaW4vcGFjbWFuIgogIGZpOwogIHN1ZG8gbG4gLXN2ICIkX0RFU1RfUEFUSCIgIi91c3IvbG9jYWwvYmluL3BhY21hbiIgPiAvZGV2L251bGwgfHwgdHJ1ZQogIGlmIFsgLWYgIi90bXAvcGFjYXB0IiBdOyB0aGVuCiAgICBybSAtZiAiL3RtcC9wYWNhcHQiCiAgZmk7Cn0KZnVuY3Rpb24gbWFpbiB7CiAgaWYgWyAtZiAiJF9ERVNUX1BBVEgiIF0gfHwgWyAtZCAiJF9ERVNUX1BBVEgiIF07IHRoZW4KICAgIF9QQUNBUFRfR1JFUF9TT1VSQ0U9IiQoPCAiJF9ERVNUX1BBVEgiIGdyZXAgIgogICAgaWYgWyAiJF9QQUNBUFRfR1JFUF9TT1VSQ0UiICE9ICJodHRwOi8vZ2l0aHViLmNvbS9pY3kvcGFjYXB0LyIgXTsgdGhlbgogICAgICBwcmludGYgIiVzICglcylcbiIgIiRfTVNHX0RFU1RfRVhJU1RTIiAiJF9ERVNUX1BBVEgiID4mMgogICAgICBwcmludGYgIiVzICctLWRlc3QtcGF0aCcuXG4iICIkX01TR19JTkRJQ0FURV9BTk9USEVSX0RFU1RfV0lUSF9QQVJBTSIgPiYyCiAgICAgIGV4aXQgMQogICAgZmk7CiAgZmk7CiAgcHJpbnRQcmVwZW5kZWRTdGRvdXQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19QQUNBUFQuLi4iCiAgcHJpbnRQcmVwZW5kZWRTdGRvdXQKICBwcmludGYgIiAgJXMiICIkX01TR19SRVRSSUVWSU5HX0xBU1RFU1RfVkVSU0lPTi4uLiIKICBnZXRQYWNBcHRMYXN0ZXN0VmVyc2lvbgogIHByaW50ZiAiICh2JXMpIiAiJF9QQUNBUFRfTEFTVEVTVF9WRVJTSU9OIgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGdldFBhY0FwdEN1cnJlbnRWZXJzaW9uCiAgaWYgWyAteiAiJF9QQUNBUFRfQ1VSUkVOVF9WRVJTSU9OIiBdOyB0aGVuCiAgICBpbnN0YWxsUGFjQXB0CiAgICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19JTlNUQUxMRUQiICIkX1BBQ0FQVF9MQVNURVNUX1ZFUlNJT04iCiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBlbGlmIFsgIiRfUEFDQVBUX0NVUlJFTlRfVkVSU0lPTiIgPSAiJF9QQUNBUFRfTEFTVEVTVF9WRVJTSU9OIiBdOyB0aGVuCiAgICBwcmludGYgIiAgJXMiICIkX01TR19GT1VORF9JTlNUQUxMRUQiCiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBlbHNlCiAgICBwcmludGYgIiAgJXMgKHYlcyAtPiB2JXMpIiBcCiAgICAgICIkX01TR19VUERBVEVEIiAiJF9QQUNBUFRfQ1VSUkVOVF9WRVJTSU9OIiAiJF9QQUNBUFRfTEFTVEVTVF9WRVJTSU9OIgogICAgc3VkbyBybSAtZiAiJFBBQ0FQVF9CSU5BUllfUEFUSCIKICAgIGluc3RhbGxQYWNBcHQKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGZpOwp9CiEgKHJldHVybiAwIDI+L2Rldi9udWxsKSAmJiBtYWluCg==' | base64 -d)
