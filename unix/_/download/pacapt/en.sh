#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfQ0hFQ0tJTkdfUEFDQVBUPSJDaGVja2luZyBwYWNhcHQiCl9NU0dfUkVUUklFVklOR19MQVNURVNUX1ZFUlNJT049IlJldHJpZXZpbmcgbGF0ZXN0IHZlcnNpb24iCl9NU0dfSU5TVEFMTEVEPSJJbnN0YWxsZWQiCl9NU0dfRk9VTkRfSU5TVEFMTEVEPSJGb3VuZCBpbnN0YWxsZWQiCl9NU0dfVVBEQVRFRD0iVXBkYXRlZCIKX01TR19ERVNUX0VYSVNUUz0iRGVzdGluYXRpb24gZmlsZSBleGlzdHMiCl9NU0dfSU5ESUNBVEVfQU5PVEhFUl9ERVNUX1dJVEhfUEFSQU09IkluZGljYXRlIGFub3RoZXIgZGVzdGluYXRpb24gZm9yIHBhY2FwdCB3aXRoIHBhcmFtZXRlciIKSU5ERU5UX1NUUklORz0iIgpfREVTVF9QQVRIPSIvdXNyL2xvY2FsL2Jpbi9wYWNhcHQiCmZ1bmN0aW9uIHVzYWdlIHsKICAgIGNhdCA8PEhFTFBfVVNBR0UKVXNhZ2U6IHNyYy91bml4L18vZG93bmxvYWQvcGFjYXB0IFstaF0gWy1pXSBbLS1kZXN0LXBhdGhdCgogIERvd25sb2FkcyBwYWNhcHQuCgpPcHRpb25zOgogIC1oLCAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0LgogIC1pLCAtLWluZGVudCBTVFJJTkcgICAgICAgICAgICAgICBFYWNoIGxpbmUgb2YgdGhlIHNjcmlwdCBvdXRwdXQgd2lsbCBiZSBwcmVjZWRlZCB3aXRoIHRoZSBzdHJpbmcgZGVmaW5lZCBpbiB0aGlzIHBhcmFtZXRlci4KICAtLWRlc3QtcGF0aCAgICAgICAgICAgICAgICAgICAgICAgRGVzdGluYXRpb24gcGF0aCBvZiB0aGUgZG93bmxvYWRlZCBiaW5hcnkuIEJ5IGRlZmF1bHQgJyRfREVTVF9QQVRIJy4KCgpIRUxQX1VTQUdFCiAgICBleGl0IDEKfQpmb3IgYXJnIGluICIkQCI7IGRvCiAgY2FzZSAkYXJnIGluCiAgICAtaXwtLWluZGVudCkKICAgIHNoaWZ0CiAgICBJTkRFTlRfU1RSSU5HPSQxCiAgICBzaGlmdAogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsKICAgIC0tZGVzdC1wYXRoKQogICAgc2hpZnQKICAgIF9ERVNUX1BBVEg9JDEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KaWYgWyAhIC1kICIvdXNyL2xvY2FsL2JpbiIgXTsgdGhlbgogIGlmIFsgISAtZCAiL3Vzci9iaW4iIF07IHRoZW4KICAgIGlmIFsgISAtZCAiL2JpbiIgXTsgdGhlbgogICAgICBJRlM9JzonIHJlYWQgLXJhIF9QQVRIIDw8PCAiJFBBVEgiCiAgICAgIGZvciBpIGluICIke19QQVRIW0BdfSI7IGRvCiAgICAgICAgICBfREVTVF9QQVRIPSIkaS9wYWNhcHQiCiAgICAgICAgICBicmVhawogICAgICBkb25lCiAgICBlbHNlCiAgICAgIF9ERVNUX1BBVEg9Ii9iaW4vcGFjYXB0IgogICAgZmk7CiAgZWxzZQogICAgX0RFU1RfUEFUSD0iL3Vzci9iaW4vcGFjYXB0IgogIGZpOwpmaTsKUEFDQVBUX0RPV05MT0FEX0xJTks9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9pY3kvcGFjYXB0L25nL3BhY2FwdCIKZnVuY3Rpb24gZ2V0UGFjQXB0TGFzdGVzdFZlcnNpb24gewogIHJtIC1mIC90bXAvcGFjYXB0CiAgY3VybCAtc0wgIiRQQUNBUFRfRE9XTkxPQURfTElOSyIgLS1vdXRwdXQgIi90bXAvcGFjYXB0IgogIF9QQUNBUFRfTEFTVEVTVF9WRVJTSU9OPSIkKDwgIi90bXAvcGFjYXB0IiBncmVwICIgVmVyc2lvbjoiIHwgY3V0IC1kJyAnIC1mMykiCn0KZnVuY3Rpb24gZ2V0UGFjQXB0Q3VycmVudFZlcnNpb24gewogIF9QQUNBUFRfQ1VSUkVOVF9WRVJTSU9OPSIiCiAgUEFDQVBUX0JJTkFSWV9QQVRIPSIkKGNvbW1hbmQgLXYgcGFjYXB0KSIKICBpZiBbICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIgPSAiIiBdICYmIFsgIiQoY29tbWFuZCAtdiBwYWNhcHQpIiAhPSAiIiBdOyB0aGVuCiAgICBzdWRvIGNwICIkKGNvbW1hbmQgLXYgcGFjYXB0KSIgIiQoY29tbWFuZCAtdiBwYWNtYW4pIgogICAgUEFDQVBUX0JJTkFSWV9QQVRIPSIkKGNvbW1hbmQgLXYgcGFjbWFuKSIKICBmaTsKICBpZiBbIC1uICIkUEFDQVBUX0JJTkFSWV9QQVRIIiBdOyB0aGVuCiAgICBfUEFDQVBUX0NVUlJFTlRfVkVSU0lPTj0kKAogICAgICA8ICIkUEFDQVBUX0JJTkFSWV9QQVRIIiBncmVwICJWZXJzaW9uOiIgfCBjdXQgLWQnICcgLWYzKQogIGZpOwp9CmZ1bmN0aW9uIGluc3RhbGxQYWNBcHQgewogIHN1ZG8gY3AgIi90bXAvcGFjYXB0IiAiJF9ERVNUX1BBVEgiCiAgc3VkbyBjaG1vZCA3NTUgIiRfREVTVF9QQVRIIgogIGlmIFsgLWYgIi91c3IvbG9jYWwvYmluL3BhY21hbiIgXTsgdGhlbgogICAgc3VkbyBybSAtZiAiL3Vzci9sb2NhbC9iaW4vcGFjbWFuIgogIGZpOwogIHN1ZG8gbG4gLXN2ICIkX0RFU1RfUEFUSCIgIi91c3IvbG9jYWwvYmluL3BhY21hbiIgPiAvZGV2L251bGwgfHwgdHJ1ZQogIGlmIFsgLWYgIi90bXAvcGFjYXB0IiBdOyB0aGVuCiAgICBybSAtZiAiL3RtcC9wYWNhcHQiCiAgZmk7Cn0KZnVuY3Rpb24gbWFpbiB7CiAgaWYgWyAtZiAiJF9ERVNUX1BBVEgiIF0gfHwgWyAtZCAiJF9ERVNUX1BBVEgiIF07IHRoZW4KICAgIF9QQUNBUFRfR1JFUF9TT1VSQ0U9IiQoPCAiJF9ERVNUX1BBVEgiIGdyZXAgJyBTb3VyY2UnIHwgY3V0IC1kJyAnIC1mNCkiCiAgICBpZiBbICIkX1BBQ0FQVF9HUkVQX1NPVVJDRSIgIT0gImh0dHA6Ly9naXRodWIuY29tL2ljeS9wYWNhcHQvIiBdOyB0aGVuCiAgICAgIHByaW50ZiAiJXMgKCVzKVxuIiAiJF9NU0dfREVTVF9FWElTVFMiICIkX0RFU1RfUEFUSCIgPiYyCiAgICAgIHByaW50ZiAiJXMgJy0tZGVzdC1wYXRoJy5cbiIgIiRfTVNHX0lORElDQVRFX0FOT1RIRVJfREVTVF9XSVRIX1BBUkFNIiA+JjIKICAgICAgZXhpdCAxCiAgICBmaTsKICBmaTsKICBwcmludEluZGVudAogIHByaW50ZiAiJXNcbiIgIiRfTVNHX0NIRUNLSU5HX1BBQ0FQVC4uLiIKICBwcmludEluZGVudAogIHByaW50ZiAiICAlcyIgIiRfTVNHX1JFVFJJRVZJTkdfTEFTVEVTVF9WRVJTSU9OLi4uIgogIGdldFBhY0FwdExhc3Rlc3RWZXJzaW9uCiAgcHJpbnRmICIgKHYlcykiICIkX1BBQ0FQVF9MQVNURVNUX1ZFUlNJT04iCiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCiAgZ2V0UGFjQXB0Q3VycmVudFZlcnNpb24KICBpZiBbIC16ICIkX1BBQ0FQVF9DVVJSRU5UX1ZFUlNJT04iIF07IHRoZW4KICAgIGluc3RhbGxQYWNBcHQKICAgIHByaW50ZiAiICAlcyAodiVzKSIgIiRfTVNHX0lOU1RBTExFRCIgIiRfUEFDQVBUX0xBU1RFU1RfVkVSU0lPTiIKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGVsaWYgWyAiJF9QQUNBUFRfQ1VSUkVOVF9WRVJTSU9OIiA9ICIkX1BBQ0FQVF9MQVNURVNUX1ZFUlNJT04iIF07IHRoZW4KICAgIHByaW50SW5kZW50CiAgICBwcmludGYgIiAgJXMiICIkX01TR19GT1VORF9JTlNUQUxMRUQiCiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBlbHNlCiAgICBwcmludGYgIiAgJXMgKHYlcyAtPiB2JXMpIiAgICAgICAiJF9NU0dfVVBEQVRFRCIgIiRfUEFDQVBUX0NVUlJFTlRfVkVSU0lPTiIgIiRfUEFDQVBUX0xBU1RFU1RfVkVSU0lPTiIKICAgIHN1ZG8gcm0gLWYgIiRQQUNBUFRfQklOQVJZX1BBVEgiCiAgICBpbnN0YWxsUGFjQXB0CiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBmaTsKfQppZiAocmV0dXJuIDAgMj4vZGV2L251bGwpOyB0aGVuCiAgZXhwb3J0VmFyaWFibGVzCmVsc2UKICBtYWluCmZpOw=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
