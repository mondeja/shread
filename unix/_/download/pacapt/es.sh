#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCl9NU0dfQ0hFQ0tJTkdfUEFDQVBUPSJDb21wcm9iYW5kbyBwYWNhcHQiCl9NU0dfUkVUUklFVklOR19MQVNURVNUX1ZFUlNJT049Ik9idGVuaWVuZG8gw7psdGltYSB2ZXJzacOzbiIKX01TR19JTlNUQUxMRUQ9Ikluc3RhbGFkbyIKX01TR19GT1VORF9JTlNUQUxMRUQ9IkVuY29udHJhZG8gaW5zdGFsYWRvIgpfTVNHX1VQREFURUQ9IkFjdHVhbGl6YWRvIgpfTVNHX0RFU1RfRVhJU1RTPSJFbCBhcmNoaXZvIGRlIGRlc3Rpbm8geWEgZXhpc3RlIgpfTVNHX0lORElDQVRFX0FOT1RIRVJfREVTVF9XSVRIX1BBUkFNPSJJbmRpY2Egb3RybyBkZXN0aW5vIHBhcmEgcGFjYXB0IGNvbiBlbCBwYXLDoW1ldHJvIgpJTkRFTlRfU1RSSU5HPSIiCl9ERVNUX1BBVEg9Ii91c3IvbG9jYWwvYmluL3BhY2FwdCIKZm9yIGFyZyBpbiAiJEAiOyBkbwogIGNhc2UgJGFyZyBpbgogICAgLS1pbmRlbnQpCiAgICBzaGlmdAogICAgSU5ERU5UX1NUUklORz0kMQogICAgc2hpZnQKICAgIDs7CiAgICAtLWRlc3QtcGF0aCkKICAgIHNoaWZ0CiAgICBfREVTVF9QQVRIPSQxCiAgICBzaGlmdAogICAgOzsKICBlc2FjCmRvbmUKZnVuY3Rpb24gcHJpbnRJbmRlbnQoKSB7CiAgcHJpbnRmICIlcyIgIiRJTkRFTlRfU1RSSU5HIgp9CmlmIFsgISAtZCAiL3Vzci9sb2NhbC9iaW4iIF07IHRoZW4KICBpZiBbICEgLWQgIi91c3IvYmluIiBdOyB0aGVuCiAgICBpZiBbICEgLWQgIi9iaW4iIF07IHRoZW4KICAgICAgSUZTPSc6JyByZWFkIC1yYSBfUEFUSCA8PDwgIiRQQVRIIgogICAgICBmb3IgaSBpbiAiJHtfUEFUSFtAXX0iOyBkbwogICAgICAgICAgX0RFU1RfUEFUSD0iJGkvcGFjYXB0IgogICAgICAgICAgYnJlYWsKICAgICAgZG9uZQogICAgZWxzZQogICAgICBfREVTVF9QQVRIPSIvYmluL3BhY2FwdCIKICAgIGZpOwogIGVsc2UKICAgIF9ERVNUX1BBVEg9Ii91c3IvYmluL3BhY2FwdCIKICBmaTsKZmk7ClBBQ0FQVF9ET1dOTE9BRF9MSU5LPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaWN5L3BhY2FwdC9uZy9wYWNhcHQiCmZ1bmN0aW9uIGdldFBhY0FwdExhc3Rlc3RWZXJzaW9uIHsKICBybSAtZiAvdG1wL3BhY2FwdAogIGN1cmwgLXNMICIkUEFDQVBUX0RPV05MT0FEX0xJTksiIC0tb3V0cHV0ICIvdG1wL3BhY2FwdCIKICBfUEFDQVBUX0xBU1RFU1RfVkVSU0lPTj0iJCg8ICIvdG1wL3BhY2FwdCIgZ3JlcCAiIFZlcnNpb246IiB8IGN1dCAtZCcgJyAtZjMpIgp9CmZ1bmN0aW9uIGdldFBhY0FwdEN1cnJlbnRWZXJzaW9uIHsKICBfUEFDQVBUX0NVUlJFTlRfVkVSU0lPTj0iIgogIFBBQ0FQVF9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IHBhY2FwdCkiCiAgaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXSAmJiBbICIkKGNvbW1hbmQgLXYgcGFjYXB0KSIgIT0gIiIgXTsgdGhlbgogICAgc3VkbyBjcCAiJChjb21tYW5kIC12IHBhY2FwdCkiICIkKGNvbW1hbmQgLXYgcGFjbWFuKSIKICAgIFBBQ0FQVF9CSU5BUllfUEFUSD0iJChjb21tYW5kIC12IHBhY21hbikiCiAgZmk7CiAgaWYgWyAtbiAiJFBBQ0FQVF9CSU5BUllfUEFUSCIgXTsgdGhlbgogICAgX1BBQ0FQVF9DVVJSRU5UX1ZFUlNJT049JCgKICAgICAgPCAiJFBBQ0FQVF9CSU5BUllfUEFUSCIgZ3JlcCAiVmVyc2lvbjoiIHwgY3V0IC1kJyAnIC1mMykKICBmaTsKfQpmdW5jdGlvbiBpbnN0YWxsUGFjQXB0IHsKICBzdWRvIGNwICIvdG1wL3BhY2FwdCIgIiRfREVTVF9QQVRIIgogIHN1ZG8gY2htb2QgNzU1ICIkX0RFU1RfUEFUSCIKICBpZiBbIC1mICIvdXNyL2xvY2FsL2Jpbi9wYWNtYW4iIF07IHRoZW4KICAgIHN1ZG8gcm0gLWYgIi91c3IvbG9jYWwvYmluL3BhY21hbiIKICBmaTsKICBzdWRvIGxuIC1zdiAiJF9ERVNUX1BBVEgiICIvdXNyL2xvY2FsL2Jpbi9wYWNtYW4iID4gL2Rldi9udWxsIHx8IHRydWUKICBpZiBbIC1mICIvdG1wL3BhY2FwdCIgXTsgdGhlbgogICAgcm0gLWYgIi90bXAvcGFjYXB0IgogIGZpOwp9CmZ1bmN0aW9uIG1haW4gewogIGlmIFsgLWYgIiRfREVTVF9QQVRIIiBdIHx8IFsgLWQgIiRfREVTVF9QQVRIIiBdOyB0aGVuCiAgICBfUEFDQVBUX0dSRVBfU09VUkNFPSIkKDwgIiRfREVTVF9QQVRIIiBncmVwICcgU291cmNlJyB8IGN1dCAtZCcgJyAtZjQpIgogICAgaWYgWyAiJF9QQUNBUFRfR1JFUF9TT1VSQ0UiICE9ICJodHRwOi8vZ2l0aHViLmNvbS9pY3kvcGFjYXB0LyIgXTsgdGhlbgogICAgICBwcmludGYgIiVzICglcylcbiIgIiRfTVNHX0RFU1RfRVhJU1RTIiAiJF9ERVNUX1BBVEgiID4mMgogICAgICBwcmludGYgIiVzICctLWRlc3QtcGF0aCcuXG4iICIkX01TR19JTkRJQ0FURV9BTk9USEVSX0RFU1RfV0lUSF9QQVJBTSIgPiYyCiAgICAgIGV4aXQgMQogICAgZmk7CiAgZmk7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzXG4iICIkX01TR19DSEVDS0lOR19QQUNBUFQuLi4iCiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiAgJXMiICIkX01TR19SRVRSSUVWSU5HX0xBU1RFU1RfVkVSU0lPTi4uLiIKICBnZXRQYWNBcHRMYXN0ZXN0VmVyc2lvbgogIHByaW50ZiAiICh2JXMpIiAiJF9QQUNBUFRfTEFTVEVTVF9WRVJTSU9OIgogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGdldFBhY0FwdEN1cnJlbnRWZXJzaW9uCiAgaWYgWyAteiAiJF9QQUNBUFRfQ1VSUkVOVF9WRVJTSU9OIiBdOyB0aGVuCiAgICBpbnN0YWxsUGFjQXB0CiAgICBwcmludGYgIiAgJXMgKHYlcykiICIkX01TR19JTlNUQUxMRUQiICIkX1BBQ0FQVF9MQVNURVNUX1ZFUlNJT04iCiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBlbGlmIFsgIiRfUEFDQVBUX0NVUlJFTlRfVkVSU0lPTiIgPSAiJF9QQUNBUFRfTEFTVEVTVF9WRVJTSU9OIiBdOyB0aGVuCiAgICBwcmludGYgIiAgJXMiICIkX01TR19GT1VORF9JTlNUQUxMRUQiCiAgICBwcmludGYgIiBcZVs5Mm1ceEUyXHg5Q1x4OTRcZVszOW1cbiIKICBlbHNlCiAgICBwcmludGYgIiAgJXMgKHYlcyAtPiB2JXMpIiBcCiAgICAgICIkX01TR19VUERBVEVEIiAiJF9QQUNBUFRfQ1VSUkVOVF9WRVJTSU9OIiAiJF9QQUNBUFRfTEFTVEVTVF9WRVJTSU9OIgogICAgc3VkbyBybSAtZiAiJFBBQ0FQVF9CSU5BUllfUEFUSCIKICAgIGluc3RhbGxQYWNBcHQKICAgIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgogIGZpOwp9Cm1haW4K'
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -
fi;
