#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCl9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSPSJUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSBleGVjdXRlZCBhcyBzdXBlcnVzZXIuIgpfTVNHX0FUT01fTk9UX0lOU1RBTExFRF9GT1JfTE9DQUxfVVNFUj0iQXRvbSBpcyBub3QgaW5zdGFsbGVkIGZvciBsb2NhbCB1c2VyIgpfTVNHX0RJUkVDVE9SWV9ET0VTTlRfRVhJU1RTPSJUaGUgZGlyZWN0b3J5ICckSE9NRS8uYXRvbScgZG9lc24ndCBleGlzdHMuIgpfTVNHX05PREVKU19NVVNUX0JFX0lOU1RBTExFRD0iTm9kZUpTIG5lZWRzIHRvIGJlIGluc3RhbGxlZCBiZWZvcmUgY3VzdG9taXplIEF0b20uIgpfTVNHX0NVU1RPTUlaSU5HX0FUT009IkN1c3RvbWl6aW5nIEF0b20gdGV4dCBlZGl0b3IiCl9NU0dfQ0hFQ0tJTkdfSU5TVEFMTEVEX0FUT01fUEFDS0FHRVM9IkNoZWNraW5nIEF0b20gcGFja2FnZXMgaW5zdGFsbGVkLi4uIgpfTVNHX0NPTkZJR1VSSU5HX0VESVRPUj0iU2V0dGluZyB1cCBlZGl0b3IuLi4iCl9NU0dfRElTQUJMSU5HX0lOQ09NUEFUSUJMRV9QQUNLQUdFUz0iRGlzYWJsaW5nIGluY29tcGF0aWJsZSBwYWNrYWdlcy4uLiIKX01TR19FUlJPUl9JTlNUQUxMSU5HX0FUT01fUEFDS0FHRT0iQW4gZXJyb3IgaGFwcGVuIGluc3RhbGxpbmcgdGhlIEF0b20gcGFja2FnZSIKX01TR19FUlJPUl9ESVNBQkxJTkdfQVRPTV9QQUNLQUdFPSJBbiBlcnJvciBoYXBwZW4gZGlzYWJsaW5nIHRoZSBBdG9tIHBhY2thZ2UiCmlmIFtbICQoL3Vzci9iaW4vaWQgLXUpIC1uZSAwIF1dOyB0aGVuCiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRVhFQ1VURURfQVNfU1VQRVJVU0VSIiA+JjIKICBleGl0IDEKZmk7CmlmIFsgISAtZCB+Ly5hdG9tIF07IHRoZW4KICBwcmludGYgIiVzICgkVVNFUikuXG4iICIkX01TR19BVE9NX05PVF9JTlNUQUxMRURfRk9SX0xPQ0FMX1VTRVIiCiAgcHJpbnRmICIlc1xuIiAiJF9NU0dfRElSRUNUT1JZX0RPRVNOVF9FWElTVFMiCiAgZXhpdCAxCmZpOwppZiBbICIkKGNvbW1hbmQgLXYgbm9kZSkiID0gIiIgXTsgdGhlbgogIHByaW50ZiAiJXNcbiIgIiRfTVNHX05PREVKU19NVVNUX0JFX0lOU1RBTExFRCIgPiYyCiAgZXhpdCAxCmZpOwpJTkRFTlRfU1RSSU5HPSIiCmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC0taW5kZW50KQogICAgc2hpZnQKICAgIElOREVOVF9TVFJJTkc9JDEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogIGlmIFsgLXogIiRfU0NSSVBUX0ZJTEVOQU1FIiBdOyB0aGVuCiAgICBmaWxlcGF0aD0ic3JjL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvbWFpbi5zaCIKICAgIGJhc2ggIiRmaWxlcGF0aCIgPiAvZGV2L251bGwKICBlbHNlCiAgICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgICBjdXJsIC1zTCAiJHVybCIgfCBzdWRvIGJhc2ggLSA+IC9kZXYvbnVsbAogIGZpOwpmaTsKaWYgW1sgIiQoc3VkbyBwYWNtYW4gLVFpIGN1cmwgMj4gL2Rldi9udWxsIHwgZ3JlcCBTdGF0dXMpIiAhPSAiU3RhdHVzOiBpbnN0YWxsIG9rIGluc3RhbGxlZCIgXV07IHRoZW4KICBzdWRvIHBhY21hbiAtUyBjdXJsID4gL2Rldi9udWxsIHx8IGV4aXQgJD8KZmk7CkFUT01fVkVSU0lPTj0kKAogIGFwbSAtdiB8IFwKICBzZWQgLW4gNHAgfCBcCiAgY3V0IC1kJyAnIC1mMiB8IFwKICBzZWQgLXIgInMvXHgxQlxbKFswLTldezEsMn0oO1swLTldezEsMn0pPyk/W21HS10vL2ciKQpwcmludEluZGVudApwcmludGYgIiVzICh2JXMpLi4uXG4iICIkX01TR19DVVNUT01JWklOR19BVE9NIiAiJEFUT01fVkVSU0lPTiIKcHJpbnRJbmRlbnQKcHJpbnRmICIgICVzXG4iICIkX01TR19DSEVDS0lOR19JTlNUQUxMRURfQVRPTV9QQUNLQUdFUyIKX0FUT01fUEFDS0FHRVNfSU5TVEFMTEVEPSIkKGFwbSBsaXN0IC0taW5zdGFsbGVkIC0tYmFyZSkiCl9BVE9NX1BBQ0tBR0VTX1RPX0lOU1RBTEw9KAogICItLXByb2R1Y3Rpb24gZmlsZS1pY29ucyIKICAibGFuZ3VhZ2UtYmF0Y2hmaWxlIgogICJwaWdtZW50cyIKICAiY29sb3ItcGlja2VyIgogICJhdG9tLWJlYXV0aWZ5IgogICJ6ZW50YWJzIgogICJlZGl0b3Jjb25maWciCiAgIm1pbmltYXAiCiAgImhpZ2hsaWdodC1zZWxlY3RlZCIKICAiZ290by1kZWZpbml0aW9uIgogICJhdXRvY29tcGxldGUtcGF0aHMiCiAgImxpbnRlciIKICAibGludGVyLXVpLWRlZmF1bHQiCiAgImludGVudGlvbnMiCiAgImJ1c3ktc2lnbmFsIgogICJsaW50ZXItY3NzbGludCIKICAibGludGVyLWpzb25saW50IgogICJsaW50ZXItc3dhZ2dlciIKICAibGludGVyLXhtbGxpbnQiCiAgIm1pbmltYXAtbGludGVyIgogICJsYW5ndWFnZS12dWUiCikKZm9yIFBBQ0tBR0UgaW4gIiR7X0FUT01fUEFDS0FHRVNfVE9fSU5TVEFMTFtAXX0iOyBkbwogIF9QQUNLQUdFX0ZMQUdTPSIkKHByaW50ZiAiJXMiICIkUEFDS0FHRSIgfCBjdXQgLWQnICcgLWYxKSIKICBpZiBbICIkX1BBQ0tBR0VfRkxBR1MiICE9ICIiIF07IHRoZW4KICAgIFBBQ0tBR0U9JChwcmludGYgIiVzIiAiJFBBQ0tBR0UiIHwgY3V0IC1kJyAnIC1mMikKICBmaTsKICBwcmludEluZGVudAogIHByaW50ZiAiICAgICVzIiAiJFBBQ0tBR0UiCiAgaWYgW1sgIiQocHJpbnRmICIlcyIgIiRfQVRPTV9QQUNLQUdFU19JTlNUQUxMRUQiIHwgZ3JlcCAiJFBBQ0tBR0UiKSIgPSAiIiBdXTsgdGhlbgogICAgX0FNUF9JTlNUQUxMX1NUREVSUj0iJChhcG0gaW5zdGFsbCAiJF9QQUNLQUdFX0ZMQUdTICRQQUNLQUdFIiAyPiYxID4gL2Rldi9udWxsKSIKICAgIF9BTVBfSU5TVEFMTF9FWElUX0NPREU9JD8KICAgIGlmIFsgJF9BTVBfSU5TVEFMTF9FWElUX0NPREUgLW5lIDAgXTsgdGhlbgogICAgICBwcmludGYgIiBcZVs5MW1ceEUyXHg5Q1x4OTVcZVszOW1cbiIgPiYyCiAgICAgIHByaW50ZiAiXG4lcyAnJXMnOlxuIiAiJF9NU0dfRVJST1JfSU5TVEFMTElOR19BVE9NX1BBQ0tBR0UiICIkUEFDS0FHRSIgPiYyCiAgICAgIHByaW50ZiAiJXNcbiIgIiRfQU1QX0lOU1RBTExfU1RERVJSIiA+JjIKICAgICAgZXhpdCAkX0FNUF9JTlNUQUxMX0VYSVRfQ09ERQogICAgZmk7CiAgZmk7CiAgcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCmRvbmUKeWFybiBpbnN0YWxsIC0tc2lsZW50IC0tbm8tcHJvZ3Jlc3MgLS1pZ25vcmUtb3B0aW9uYWwgLS1ub24taW50ZXJhY3RpdmUKcHJpbnRJbmRlbnQKcHJpbnRmICIgICVzIiAiJF9NU0dfQ09ORklHVVJJTkdfRURJVE9SIgpjdXJsIC1zTCBodHRwczovL21vbmRlamEuZ2l0aHViLmlvL3NocmVhZC9fL2N1c3RvbWl6ZS90ZXh0LWVkaXRvci9hdG9tL2NvbmZpZ3VyZS5qcyB8IFwKICBub2RlIC0gXAogIGV4aXQgJD8KcHJpbnRmICIgXGVbOTJtXHhFMlx4OUNceDk0XGVbMzltXG4iCnByaW50SW5kZW50CnByaW50ZiAiICAlc1xuIiAiJF9NU0dfRElTQUJMSU5HX0lOQ09NUEFUSUJMRV9QQUNLQUdFUyIKX0FUT01fUEFDS0FHRVNfVE9fRElTQUJMRT0oCiAgIndoaXRlc3BhY2UiCikKZm9yIFBBQ0tBR0UgaW4gIiR7X0FUT01fUEFDS0FHRVNfVE9fRElTQUJMRVtAXX0iOyBkbwogIHByaW50SW5kZW50CiAgcHJpbnRmICIgICAgJXMiICIkUEFDS0FHRSIKICBfQU1QX0RJU0FCTEVfU1RERVJSPSIkKHN1ZG8gLXUgIiRTVURPX1VTRVIiIGFwbSBkaXNhYmxlICIkUEFDS0FHRSIgMj4mMSA+IC9kZXYvbnVsbCkiCiAgX0FNUF9ESVNBQkxFX0VYSVRfQ09ERT0kPwogIGlmIFsgJF9BTVBfRElTQUJMRV9FWElUX0NPREUgLW5lIDAgXTsgdGhlbgogICAgcHJpbnRmICIgXGVbOTFtXHhFMlx4OUNceDk1XGVbMzltXG4iID4mMgogICAgcHJpbnRmICJcbiVzICclcyc6XG4iICIkX01TR19FUlJPUl9ESVNBQkxJTkdfQVRPTV9QQUNLQUdFIiAiJFBBQ0tBR0UiID4mMgogICAgcHJpbnRmICIlc1xuIiAiJF9BTVBfRElTQUJMRV9TVERFUlIiID4mMgogICAgZXhpdCAkX0FNUF9ESVNBQkxFX0VYSVRfQ09ERQogIGZpOwogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgpkb25lCg=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -
fi;
