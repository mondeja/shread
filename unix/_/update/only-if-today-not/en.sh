#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVuLnNoCiMhL2Jpbi9iYXNoCl9NU0dfVVBEQVRJTkdfU1lTVEVNX1BBQ0tBR0VTPSJVcGRhdGluZyBzeXN0ZW0gcGFja2FnZXMuLi4iCklOREVOVF9TVFJJTkc9IiIKX1VQR1JBREU9MApmdW5jdGlvbiB1c2FnZSB7CiAgICBjYXQgPDxIRUxQX1VTQUdFCnNyYy91bml4L18vdXBkYXRlL29ubHktaWYtdG9kYXktbm90IFstaF0gWy1pXSBbLXVdCiAgCiAgVXBkYXRlcyBhbmQgb3B0aW9uYWxseSB1cGdyYWRlcyB0aGUgc3lzdGVtIGlmIHRoZWlyIHJlcG9zaXRvcnkgcGFja2FnZXMgaGF2ZSBub3QgYmVlbiB1cGRhdGVkIGluIHRoZSBjdXJyZW50IGRheS4KCk9wdGlvbnM6CiAgLWgsIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBoZWxwIG1lc3NhZ2UgYW5kIGV4aXQuCiAgLWksIC0taW5kZW50IFNUUklORyAgICAgICAgICAgICAgIEVhY2ggbGluZSBvZiB0aGUgc2NyaXB0IG91dHB1dCB3aWxsIGJlIHByZWNlZGVkIHdpdGggdGhlIHN0cmluZyBkZWZpbmVkIGluIHRoaXMgcGFyYW1ldGVyLgogIC11LCAtLXVwZ3JhZGUgICAgICAgICAgICAgICAgICAgICBQYXNzaW5nIHRoaXMgb3B0aW9uLCBpZiB0aGUgc3lzdGVtIGhhcyBub3QgYmVlbiB1cGRhdGVkIHRvZGF5LCB3aWxsIGJlIHVwZ3JhZGVkIGFsc28uCgpIRUxQX1VTQUdFCiAgICBleGl0IDEKfQpmb3IgYXJnIGluICIkQCI7IGRvCiAgY2FzZSAkYXJnIGluCiAgICAtaXwtLWluZGVudCkKICAgIHNoaWZ0CiAgICBJTkRFTlRfU1RSSU5HPSQxCiAgICBzaGlmdAogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsKICAgIC11fC0tdXBncmFkZSkKICAgIF9VUEdSQURFPTEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KaWYgWyAiJChjb21tYW5kIC12IHBhY21hbikiID0gIiIgXTsgdGhlbgogIGlmIFsgLXogIiRfU0NSSVBUX0ZJTEVOQU1FIiBdOyB0aGVuCiAgICBmaWxlcGF0aD0ic3JjL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvbWFpbi5zaCIKICAgIGJhc2ggIiRmaWxlcGF0aCIgPiAvZGV2L251bGwKICBlbHNlCiAgICB1cmw9Imh0dHBzOi8vbW9uZGVqYS5naXRodWIuaW8vc2hyZWFkL3VuaXgvXy9kb3dubG9hZC9wYWNhcHQvJF9TQ1JJUFRfRklMRU5BTUUiCiAgICBjdXJsIC1zTCAiJHVybCIgfCBzdWRvIGJhc2ggLSA+IC9kZXYvbnVsbAogIGZpOwpmaTsKZnVuY3Rpb24gdXBkYXRlUGFja2FnZXMoKSB7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzIiAiJF9NU0dfVVBEQVRJTkdfU1lTVEVNX1BBQ0tBR0VTIgogIHN1ZG8gcGFjbWFuIHVwZGF0ZSA+IC9kZXYvbnVsbCB8fCBleGl0ICQ/CiAgaWYgWyAkX1VQR1JBREUgLWVxIDEgXTsgdGhlbgogICAgc3VkbyBwYWNtYW4gLVN5dSAteSA+JjIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogIGZpOwogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgp9CmZ1bmN0aW9uIG1haW4gewogIGlmIFsgLWYgIi92YXIvY2FjaGUvYXB0L3BrZ2NhY2hlLmJpbiIgXTsgdGhlbgogICAgX0xBU1RfREFZX0VYRUNVVEVEPSQoCiAgICAgIHN0YXQgL3Zhci9jYWNoZS9hcHQvcGtnY2FjaGUuYmluIHwgICAgICAgdGFpbCAtbiAzIHwgICAgICAgaGVhZCAtbiAxIHwgICAgICAgY3V0IC1kJyAnIC1mMikKICAgIF9OT1dfREFURT0kKGRhdGUgKyIlWS0lbS0lZCIpCiAgICBpZiBbICIkX0xBU1RfREFZX0VYRUNVVEVEIiAhPSAiJF9OT1dfREFURSIgXTsgdGhlbgogICAgICB1cGRhdGVQYWNrYWdlcwogICAgZmk7CiAgZWxzZQogICAgdXBkYXRlUGFja2FnZXMKICBmaTsKfQppZiAocmV0dXJuIDAgMj4vZGV2L251bGwpOyB0aGVuCiAgZXhwb3J0VmFyaWFibGVzCmVsc2UKICBtYWluCmZpOw=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
