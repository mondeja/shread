#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfVVBEQVRJTkdfU1lTVEVNX1BBQ0tBR0VTPSIiCklOREVOVF9TVFJJTkc9IiIKX1VQR1JBREU9MApmdW5jdGlvbiB1c2FnZSB7CiAgICBjYXQgPDxIRUxQX1VTQUdFClVzbzogdW5peC9fL3VwZGF0ZS9vbmx5LWlmLXRvZGF5LW5vdC8kX1NDUklQVF9GSUxFTkFNRSBbLWhdIFstaSBTVFJJTkddIFstdV0KCiAgIFVwZGF0ZXMgYW5kIG9wdGlvbmFsbHkgdXBncmFkZXMgdGhlIHN5c3RlbSBpZiB0aGVpciByZXBvc2l0b3J5IHBhY2thZ2VzIGhhdmUgbm90IGJlZW4gdXBkYXRlZCBpbiB0aGUgY3VycmVudCBkYXkuCgpPcGNpb25lczoKICAtaCwgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIGhlbHAgbWVzc2FnZSBhbmQgZXhpdC4KICAtaSBTVFJJTkcsIC0taW5kZW50IFNUUklORyAgICAgICAgRWFjaCBsaW5lIG9mIHRoZSBzY3JpcHQgb3V0cHV0IHdpbGwgYmUgcHJlY2VkZWQgd2l0aCB0aGUgc3RyaW5nIGRlZmluZWQgaW4gdGhpcyBwYXJhbWV0ZXIuCiAgLXUsIC0tdXBncmFkZSAgICAgICAgICAgICAgICAgICAgIFBhc3NpbmcgdGhpcyBvcHRpb24sIGlmIHRoZSBzeXN0ZW0gaGFzIG5vdCBiZWVuIHVwZGF0ZWQgdG9kYXksIHdpbGwgYmUgdXBncmFkZWQgYWxzby4KCkhFTFBfVVNBR0UKICAgIGV4aXQgMQp9CmZvciBhcmcgaW4gIiRAIjsgZG8KICBjYXNlICRhcmcgaW4KICAgIC1pfC0taW5kZW50KQogICAgSU5ERU5UX1NUUklORz0iJDIiCiAgICBzaGlmdCAyCiAgICA7OwogICAgLWh8LS1oZWxwKQogICAgc2hpZnQKICAgIHVzYWdlCiAgICA7OyAgICAKICAgIC11fC0tdXBncmFkZSkKICAgIF9VUEdSQURFPTEKICAgIHNoaWZ0CiAgICA7OwogIGVzYWMKZG9uZQpmdW5jdGlvbiBwcmludEluZGVudCgpIHsKICBwcmludGYgIiVzIiAiJElOREVOVF9TVFJJTkciCn0KZnVuY3Rpb24gaW5zdGFsbFBhY21hbklmTm90SW5zdGFsbGVkKCkgewogIGlmIFsgIiQoY29tbWFuZCAtdiBwYWNtYW4pIiA9ICIiIF07IHRoZW4KICAgIHVybD0iaHR0cHM6Ly9tb25kZWphLmdpdGh1Yi5pby9zaHJlYWQvdW5peC9fL2Rvd25sb2FkL3BhY2FwdC8kX1NDUklQVF9GSUxFTkFNRSIKICAgIGN1cmwgLXNMICIkdXJsIiB8IHN1ZG8gYmFzaCAtID4gL2Rldi9udWxsCiAgZmk7Cn0KZnVuY3Rpb24gdXBkYXRlUGFja2FnZXMoKSB7CiAgcHJpbnRJbmRlbnQKICBwcmludGYgIiVzIiAiJF9NU0dfVVBEQVRJTkdfU1lTVEVNX1BBQ0tBR0VTIgogIHN1ZG8gcGFjbWFuIHVwZGF0ZSA+IC9kZXYvbnVsbCB8fCBleGl0ICQ/CiAgaWYgWyAkX1VQR1JBREUgLWVxIDEgXTsgdGhlbgogICAgc3VkbyBwYWNtYW4gLVN1eSAteSA+JjIgPiAvZGV2L251bGwgfHwgc3VkbyBwYWNtYW4gLVN1eSA+JjIgPiAvZGV2L251bGwgfHwgZXhpdCAkPwogIGZpOwogIHByaW50ZiAiIFxlWzkybVx4RTJceDlDXHg5NFxlWzM5bVxuIgp9CmZ1bmN0aW9uIG1haW4gewogIGluc3RhbGxQYWNtYW5JZk5vdEluc3RhbGxlZAogIGlmIFsgLWYgIi92YXIvY2FjaGUvYXB0L3BrZ2NhY2hlLmJpbiIgXTsgdGhlbgogICAgX0xBU1RfREFZX0VYRUNVVEVEPSQoCiAgICAgIHN0YXQgL3Zhci9jYWNoZS9hcHQvcGtnY2FjaGUuYmluIHwgICAgICAgdGFpbCAtbiAzIHwgICAgICAgaGVhZCAtbiAxIHwgICAgICAgY3V0IC1kJyAnIC1mMikKICAgIF9OT1dfREFURT0kKGRhdGUgKyIlWS0lbS0lZCIpCiAgICBpZiBbICIkX0xBU1RfREFZX0VYRUNVVEVEIiAhPSAiJF9OT1dfREFURSIgXTsgdGhlbgogICAgICB1cGRhdGVQYWNrYWdlcwogICAgZmk7CiAgZWxzZQogICAgdXBkYXRlUGFja2FnZXMKICBmaTsKfQppZiAocmV0dXJuIDAgMj4vZGV2L251bGwpOyB0aGVuCiAgZXhwb3J0VmFyaWFibGVzCmVsc2UKICBtYWluCmZpOw=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
