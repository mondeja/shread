#!/bin/bash
H='IyEvYmluL2Jhc2gKIyAtKi0gRU5DT0RJTkc6IFVURi04IC0qLQpfU0NSSVBUX0ZJTEVOQU1FPWVzLnNoCiMhL2Jpbi9iYXNoCl9NU0dfTVVTVF9CRV9TT1VSQ0VEPSJFc3RlIHNjcmlwdCBkZWJlIHNlciBlamVjdXRhZG8gY29uICdzb3VyY2UnLiIKSU5ERU5UX1NUUklORz0iIgpTRVRYPTAKZnVuY3Rpb24gdXNhZ2UgewogICAgY2F0IDw8SEVMUF9VU0FHRQpVc2FnZTogdW5peC9fL3V0aWwvZ2V0LWRpc3Ryby8kX1NDUklQVF9GSUxFTkFNRSBbLWhdIFstaSBTVFJJTkddIAoKICBFeHBvbmUgaW5mb3JtYWNpw7NuIHNvYnJlIGxhIGRpc3RyaWJ1Y2nDs24gZGVsIHNpc3RlbWEuIEVzdGUgc2NyaXB0IGRlYmUgc2VyIGVqZWN1dGFkbyBjb24gJ3NvdXJjZScuCiAgUHVlZGVzIGNvbXByb2JhciBsYSBpbmZvcm1hY2nDs24gZGUgbGEgZGlzdHJpYnVjacOzbiBjb24gbGFzIHNpZ3VpZW50ZXMgdmFyaWFibGVzIGRlIGVudG9ybm8gZXhwdWVzdGFzOgoKICAtICdVTklYX0RJU1RSTyc6IE5vbWJyZSBpZGVudGlmaWNhZG9yIGRlIGxhIGRpc3RyaWJ1Y2nDs24gZW4gbWluw7pzY3VsYXMuIFBvciBlamVtcGxvOiAndWJ1bnR1Jy4KICAtICdVTklYX0RJU1RST19DQVBJVEFMSVpFRCc6IE5vbWJyZSBpZGVudGlmaWNhZG9yIGRlIGxhIGRpc3RyaWJ1Y2nDs24gY29uIGxhIHByaW1lcmEgbGV0cmEgZW4gbWF5w7pzY3VsYS4gUG9yIGVqZW1wbG86ICdVYnVudHUnLgogIC0gJ1VOSVhfRElTVFJPX1ZFUlNJT05fTkFNRSc6IE5vbWJyZSBkZSB2ZXJzacOzbiBkZSBsYSBkaXN0cmlidWNpw7NuIGVuIG1pbsO6c2N1bGFzLiBQb3IgZWplbXBsbzogJ2ZvY2FsJy4KICAtICdVTklYX0RJU1RST19WRVJTSU9OX05VTUJFUic6IE7Dum1lcm8gZGUgdmVyc2nDs24gZGUgbGEgZGlzdHJpYnVjacOzbi4gUG9yIGVqZW1wbG86ICcyMC4wNCcuCiAgLSAnVU5JWF9ESVNUUk9fVkVSU0lPTl9OVU1CRVJfTUFKT1InOiBOw7ptZXJvIGRlIHZlcnNpw7NuIG1heW9yIGRlIGxhIGRpc3RyaWJ1Y2nDs24uIFBvciBlamVtcGxvOiAnMjAnLgogIC0gJ1VOSVhfRElTVFJPX1ZFUlNJT05fTlVNQkVSX01JTk9SJzogTsO6bWVybyBkZSB2ZXJzacOzbiBtZW5vciBkZSBsYSBkaXN0cmlidWNpw7NuLiBQb3IgZWplbXBsbzogJzA0Jy4KCk9wdGlvbnM6CiAgLWgsIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBoZWxwIG1lc3NhZ2UgYW5kIGV4aXQuCiAgLWkgU1RSSU5HLCAtLWluZGVudCBTVFJJTkcgICAgICAgIEVhY2ggbGluZSBvZiB0aGUgc2NyaXB0IG91dHB1dCB3aWxsIGJlIHByZWNlZGVkIHdpdGggdGhlIHN0cmluZyBkZWZpbmVkIGluIHRoaXMgcGFyYW1ldGVyLgogIC0tc2V0LXggICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIHRoZSAteCBvcHRpb24gaW4gQmFzaCB0byBwcmludCBvdXQgdGhlIHN0YXRlbWVudHMgYXMgdGhleSBhcmUgYmVpbmcgZXhlY3V0ZWQuIFVzZWZ1bCBmb3IgZGVidWdnaW5nIHB1cnBvc2VzLgpIRUxQX1VTQUdFCiAgICBleGl0IDEKfQpmb3IgYXJnIGluICIkQCI7IGRvCiAgY2FzZSAkYXJnIGluCiAgICAtaXwtLWluZGVudCkKICAgIElOREVOVF9TVFJJTkc9IiQyIgogICAgc2hpZnQgMgogICAgOzsKICAgIC1ofC0taGVscCkKICAgIHNoaWZ0CiAgICB1c2FnZQogICAgOzsgICAgLS1zZXQteCkKICAgIFNFVFg9MQogICAgc2hpZnQKICAgIDs7ICAgICAgZXNhYwpkb25lCmZ1bmN0aW9uIHByaW50SW5kZW50KCkgewogIHByaW50ZiAiJXMiICIkSU5ERU5UX1NUUklORyIKfQppZiBbICIkU0VUWCIgLWVxIDEgXTsgdGhlbiBzZXQgLXg7IGZpCmZ1bmN0aW9uIGV4cG9ydFZhcmlhYmxlcyB7CiAgaWYgWyAiJChjb21tYW5kIC12IGxzYl9yZWxlYXNlKSIgPSAiIiBdOyB0aGVuCiAgICBzdWRvIGFwdC1nZXQgaW5zdGFsbCAteSAtcXFxIGxzYi1yZWxlYXNlID4gL2Rldi9udWxsCiAgZmk7CiAgaWYgWyAtZiAvZXRjL2xzYi1yZWxlYXNlIF0gfHwgWyAtZCAvZXRjL2xzYi1yZWxlYXNlLmQgXTsgdGhlbgogICAgVU5JWF9ESVNUUk89JChsc2JfcmVsZWFzZSAtaSB8IGN1dCAtZDogLWYyIHwgc2VkIHMvJ15cdCcvLykKICBlbHNlCiAgICBVTklYX0RJU1RSTz0kKGxzIC1kIC9ldGMvW0EtWmEtel0qW18tXVtydl1lW2xyXSogfCBncmVwIC12ICJsc2IiIHwgY3V0IC1kJy8nIC1mMyB8IGN1dCAtZCctJyAtZjEgfCBjdXQgLWQnXycgLWYxKQogIGZpCiAgaWYgWyAiJChlY2hvICIkVU5JWF9ESVNUUk8iIHwgaGVhZCAtbiAxKSIgPSAiZGViaWFuIiBdOyB0aGVuCiAgICBVTklYX0RJU1RSTz0iZGViaWFuIgogIGVsaWYgWyAiJFVOSVhfRElTVFJPIiA9ICJVYnVudHUiIF07IHRoZW4KICAgIFVOSVhfRElTVFJPPSJ1YnVudHUiCiAgZmk7CiAgVU5JWF9ESVNUUk9fVkVSU0lPTl9OQU1FPSIkKGxzYl9yZWxlYXNlIC1jcykiCiAgVU5JWF9ESVNUUk9fVkVSU0lPTl9OVU1CRVI9IiQobHNiX3JlbGVhc2UgLXJzKSIKICBVTklYX0RJU1RST19WRVJTSU9OX05VTUJFUl9NQUpPUj0kKAogICAgcHJpbnRmICIlcyIgIiRVTklYX0RJU1RST19WRVJTSU9OX05VTUJFUiIgfCBjdXQgLWQnLicgLWYxKQogIFVOSVhfRElTVFJPX1ZFUlNJT05fTlVNQkVSX01JTk9SPSIiCiAgaWYgW1sgJFVOSVhfRElTVFJPX1ZFUlNJT05fTlVNQkVSID09ICoiLiIqIF1dOyB0aGVuCiAgICBVTklYX0RJU1RST19WRVJTSU9OX05VTUJFUl9NSU5PUj0kKAogICAgICBwcmludGYgIiVzIiAiJFVOSVhfRElTVFJPX1ZFUlNJT05fTlVNQkVSIiB8IGN1dCAtZCcuJyAtZjIpCiAgZmk7CiAgVU5JWF9ESVNUUk9fQ0FQSVRBTElaRUQ9IiQodHIgJ1s6bG93ZXI6XScgJ1s6dXBwZXI6XScgPDw8ICR7VU5JWF9ESVNUUk86MDoxfSkke1VOSVhfRElTVFJPOjF9IgogIGV4cG9ydCBVTklYX0RJU1RSTwogIGV4cG9ydCBVTklYX0RJU1RST19DQVBJVEFMSVpFRAogIGV4cG9ydCBVTklYX0RJU1RST19WRVJTSU9OX05BTUUKICBleHBvcnQgVU5JWF9ESVNUUk9fVkVSU0lPTl9OVU1CRVIKICBleHBvcnQgVU5JWF9ESVNUUk9fVkVSU0lPTl9OVU1CRVJfTUFKT1IKICBleHBvcnQgVU5JWF9ESVNUUk9fVkVSU0lPTl9OVU1CRVJfTUlOT1IKfQpmdW5jdGlvbiBtYWluKCkgewogIHByaW50ZiAiJXNcbiIgIiRfTVNHX01VU1RfQkVfU09VUkNFRCIgPiYyCiAgZXhpdCAxCn0KaWYgKHJldHVybiAwIDI+L2Rldi9udWxsKTsgdGhlbgogIGV4cG9ydFZhcmlhYmxlcwplbHNlCiAgbWFpbgpmaTsKaWYgWyAiJFNFVFgiIC1lcSAxIF07IHRoZW4gc2V0ICt4OyBmaQ=='
if (return 0 2>/dev/null); then
  source <(printf "%s" "$H" | base64 -d)
else
  echo "$(echo "$H" | base64 -d)" | bash -s -- "$@"
fi;
